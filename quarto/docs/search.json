[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Pavel Grigoryev projects",
    "section": "",
    "text": "Исследование надёжности заёмщиков\n\n\n\n\n\n\nИсследование влияния семейного положения и количества детей клиента на факт погашения кредита в срок для кредитного отдела банка.\n\n\n\n\n\n\n\n\n\n\n\n\nИсследование объявлений о продаже квартир\n\n\n\n\n\n\nИсследование факторов, влияющих на ценообразование на рынке недвижимости в Санкт-Петербурге.\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/creditworthiness-research/creditworthiness_research.html",
    "href": "projects/creditworthiness-research/creditworthiness_research.html",
    "title": "Исследование надёжности заёмщиков",
    "section": "",
    "text": "Автор:\nГригорьев Павел\nОписание проекта:\nЗаказчик - кредитный отдел банка.\nНужно разобраться, влияет ли семейное положение и количество детей клиента на факт погашения кредита в срок.\nВходные данные от банка - статистика о платёжеспособности клиентов.\nРезультаты исследования будут учтены при построении модели кредитного скоринга - специальной системы, которая оценивает способность потенциального заёмщика вернуть кредит банку.\nЦель:\nСоставить рекомендации для кредитного отдела банка, которые будут учтены при построении модели кредитного скоринга.\nОпределить влияет ли семейное положение и количество детей клиента на факт погашения кредита в срок.\nИсточники данных:\nСтатистика о платёжеспособности клиентов.\nГлавные выводы:\nАномалии и особенности в данных:\nРекомендации:"
  },
  {
    "objectID": "projects/creditworthiness-research/creditworthiness_research.html#загрузка-библиотек",
    "href": "projects/creditworthiness-research/creditworthiness_research.html#загрузка-библиотек",
    "title": "Исследование надёжности заёмщиков",
    "section": "Загрузка библиотек ",
    "text": "Загрузка библиотек \n\n\nShow the code\n\nimport pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport pagri_data_tools\npd.set_option('display.max_columns', None)"
  },
  {
    "objectID": "projects/creditworthiness-research/creditworthiness_research.html#описание-и-изучение-данных",
    "href": "projects/creditworthiness-research/creditworthiness_research.html#описание-и-изучение-данных",
    "title": "Исследование надёжности заёмщиков",
    "section": "1. Описание и изучение данных",
    "text": "1. Описание и изучение данных\n\n1.1 Описание данных\nВернуться к выводам\n\nchildren - количество детей в семье\ndays_employed - общий трудовой стаж в днях\ndob_years - возраст клиента в годах\neducation - уровень образования клиента\neducation_id - идентификатор уровня образования\nfamily_status - семейное положение\nfamily_status_id - идентификатор семейного положения\ngender - пол клиента\nincome_type - тип занятости\ndebt - имел ли задолженность по возврату кредитов\ntotal_income - ежемесячный доход\npurpose - цель получения кредита\n\n\n\n1.2 Изучение данных\n\n1.2.1 Изучение переменных\nВернуться к выводам\n\n\nShow the code\n\ndtype = {'education': 'category', 'education_id': 'category', 'family_status': 'category', 'family_status_id': 'category', 'gender': 'category', 'income_type': 'category', 'debt': 'category'}\ndf = pd.read_csv('https://code.s3.yandex.net/datasets/data.csv', dtype=dtype)\ndf.sample(5, random_state=7)\n\n\n\n\n\n\n\n\n\nchildren\ndays_employed\ndob_years\neducation\neducation_id\nfamily_status\nfamily_status_id\ngender\nincome_type\ndebt\ntotal_income\npurpose\n\n\n\n\n4042\n1\n-2885.142188\n50\nсреднее\n1\nженат / замужем\n0\nF\nсотрудник\n0\n80236.028323\nприобретение автомобиля\n\n\n19177\n2\n-1803.080913\n36\nСреднее\n1\nженат / замужем\n0\nF\nсотрудник\n0\n163292.220004\nстроительство собственной недвижимости\n\n\n7372\n1\n-305.540665\n27\nСРЕДНЕЕ\n1\nгражданский брак\n1\nF\nсотрудник\n0\n69799.488812\nремонт жилью\n\n\n16245\n1\n-1593.946336\n50\nсреднее\n1\nженат / замужем\n0\nF\nсотрудник\n1\n107486.332934\nна покупку подержанного автомобиля\n\n\n11563\n0\n-1025.402943\n64\nвысшее\n0\nженат / замужем\n0\nM\nгосслужащий\n0\n706401.475790\nпрофильное образование\n\n\n\n\n\n\n\nИзменим название колонки dob_years на более понятное age\n\n\nShow the code\n\ndf = df.rename(columns={'dob_years': 'age'})\n\n\nИзменим значения в столбце debt на ‘есть’, ‘нет’\n\n\nShow the code\n\ndf.debt = df.debt.apply(lambda x: 'есть' if x == '1' else 'нет').astype('category')\n\n\nИзучим отдельно каждую колонку\n\n\nShow the code\n\ngen = pagri_data_tools.info_gen(df)\n\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\nTable 1: DataFrame\n\n\n\n\n\nRows\nFeatures\nRAM (Mb)\nDuplicates\nDupl (sub - origin)\n\n\n\n\n21 525\n12\n4\n54 (&lt;1%)\n0 (0%)\n\n\n\n\n\n\n\n\nНаблюдения:\n\nВ датафрейме есть строки дубликаты. 54 строки. Меньше 1 % от всего датафрейма.\n\nЕсли заменить все пробелы на 1, привести к нижнему регистру, то дополнительно появляется 31 дубликат.\nНужно детальнее изучить дубликаты.\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 2: children\n\n\n\n\n\nValues\n21 525 (100%)\n\nMax\n20\n\nAvg\n0.54\n\n0 (66%)\n\n\nMissing\n---\n\n95%\n2\n\nMode\n0\n\n1 (22%)\n\n\nDistinct\n8 (&lt;1%)\n\n75%\n1\n\nRange\n21\n\n2 (10%)\n\n\nDuplicates\n21 517 (99.9%)\n\nMedian\n0\n\niQR\n1\n\n3 (2%)\n\n\nZeros\n14 149 (66%)\n\n25%\n0\n\nstd\n1.38\n\n20 &lt;1%\n\n\nNegative\n47 (&lt;1%)\n\n5%\n0\n\nkurt\n136.46\n\n-1 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n-1\n\nskew\n10.08\n\n4 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ столбце с количеством детей нет пропущенных значений.\n\nУникальных всего 8 значений. Это нормально. Количество детей не может сильно варьироваться.\nНаличие нулей нормально, это люди без детей, таких 66 %.\n\nЕсть отрицательные значения. 47 штук. Меньше 1 процента. Это явно ошибка. В реальных данных таких не должно быть.\nНужно выяснить почему появились отрицательное количество детей.\n\nМаксимальное количество детей 20. Это скорее всего ошибка.\n66 процентов имеют 0 детей, 22 процента имеют 1 ребенка, 10 % имеют 2 детей и меньше 5 % имеют более 2 детей.\n\nРаспределение детей соответствует реальности, больше всего людей без детей.\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 3: days_employed\n\n\n\n\n\nValues\n19 351 (90%)\n\nMax\n401 755.4\n\nAvg\n63 046.5\n\n-8 437.67 &lt;1%\n\n\nMissing\n2 174 (10%)\n\n95%\n380 718.0\n\nMode\n---\n\n-3 507.82 &lt;1%\n\n\nDistinct\n19 351 (90%)\n\n75%\n-291.1\n\nRange\n420 144.35\n\n354 500.42 &lt;1%\n\n\nDuplicates\n2 173 (10%)\n\nMedian\n-1 203.37\n\niQR\n2 456.33\n\n-769.72 &lt;1%\n\n\nZeros\n---\n\n25%\n-2 747.42\n\nstd\n140 827.31\n\n-3 963.59 &lt;1%\n\n\nNegative\n15 906 (74%)\n\n5%\n-6 622.97\n\nkurt\n0.91\n\n337 451.39 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n-18 388.95\n\nskew\n1.70\n\n356 425.15 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ колонке общий трудовой стаж есть 10 % пропущенных значений.\n\n90 % уникальных значений, это нормально, так как стаж в днях.\n\n74 % отрицательных значений. Так быть не должно.\nНужно выяснить как считаются дни стажа и разобраться откуда появляются отрицательные значения.\n\nМаксимальное количество дней стажа больше 400 тысяч дней, это больше 1000 лет. Явно это выброс.\n\nДанные совершенно некорректные, нужно разбираться что является причиной.\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 4: age\n\n\n\n\n\nValues\n21 525 (100%)\n\nMax\n75\n\nAvg\n43.29\n\n35 (3%)\n\n\nMissing\n---\n\n95%\n64\n\nMode\n35\n\n40 (3%)\n\n\nDistinct\n58 (&lt;1%)\n\n75%\n53\n\nRange\n75\n\n41 (3%)\n\n\nDuplicates\n21 467 (99.7%)\n\nMedian\n42\n\niQR\n20\n\n34 (3%)\n\n\nZeros\n101 (&lt;1%)\n\n25%\n33\n\nstd\n12.57\n\n38 (3%)\n\n\nNegative\n---\n\n5%\n25\n\nkurt\n-0.48\n\n42 (3%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n0.01\n\n33 (3%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ колонке возраста нет пропущенных значений.\n\n58 уникальных значений (&lt;1%), похоже на правду.\n\n101 нулевое значение. Это явно ошибки.\n\nМаксимальный возраст 75 лет. Вполне реально.\n\nМедиана 42 года, первый квартиль 33 года, можно сделать вывод, что у нас в основном люди старше 30 лет.\n\nБольше всего людей около 40 лет.\n\nТолько 5 процентов людей моложе 25 лет.\n\nРаспределение похоже на нормальное. Так и должно быть.\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 5: total_income\n\n\n\n\n\nValues\n19 351 (90%)\n\nMax\n2 265 604.03\n\nAvg\n167 422.3\n\n253 875.64 &lt;1%\n\n\nMissing\n2 174 (10%)\n\n95%\n340 590.1\n\nMode\n---\n\n157 691.85 &lt;1%\n\n\nDistinct\n19 351 (90%)\n\n75%\n203 435.07\n\nRange\n2 244 936.76\n\n70 113.9 &lt;1%\n\n\nDuplicates\n2 173 (10%)\n\nMedian\n145 017.94\n\niQR\n100 381.91\n\n116 196.52 &lt;1%\n\n\nZeros\n---\n\n25%\n103 053.15\n\nstd\n102 971.57\n\n157 205.83 &lt;1%\n\n\nNegative\n---\n\n5%\n63 322.85\n\nkurt\n40.73\n\n114 842.85 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n20 667.26\n\nskew\n3.94\n\n282 354.55 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ столбце дохода 10 процентов пропущенных значений.\n\nЕсть дубликаты, но это нормально.\n\nМаксимальный доход больше 2 млн, нужно проверить это, кажется что это нереально.\n\nМинимальная зарплата 20 тысяч, это похоже на истину.\n\nРаспределение зарплат соответствует реальности.\n\nМеньше 5 % людей имеют зарплату меньше 63 тысяч.\nМожно сделать вывод, что большинство имеет высокий доход.\nПри этом 25 % имеют доход больше 200 тысяч.\n\nСлишком много знаков после запятой, нужно разобраться в чем дело\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 6: education\n\n\n\n\n\nValues\n21 525 (100%)\n\nсреднее (64%)\n\n\nMissing\n---\n\nвысшее (22%)\n\n\nDistinct\n15 (&lt;1%)\n\nСРЕДНЕЕ (4%)\n\n\nDuplicated origin\n21 510 (99.9%)\n\nСреднее (3%)\n\n\nDupl (modify - origin)\n2 (&lt;1%)\n\nнеоконченное высшее (3%)\n\n\nEmpty\n---\n\nВЫСШЕЕ (1%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nВысшее (1%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ колонке образование пропусков нет.\n\nУникальных значений 15\nПрисутствуют явные дубли из за разных регистров слов.\n\nБольше всего людей со средним образованием 71 %\nВысшее образование у 24 %\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 7: education_id\n\n\n\n\n\nValues\n21 525 (100%)\n\n1 (71%)\n\n\nMissing\n---\n\n0 (24%)\n\n\nDistinct\n5 (&lt;1%)\n\n2 (3%)\n\n\nDuplicated origin\n21 520 (99.9%)\n\n3 (1%)\n\n\nDupl (modify - origin)\n---\n\n4 &lt;1%\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ колонке с id образования нет дублей, которые есть в колонке образования\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 8: family_status\n\n\n\n\n\nValues\n21 525 (100%)\n\nженат / замужем (58%)\n\n\nMissing\n---\n\nгражданский брак (19%)\n\n\nDistinct\n5 (&lt;1%)\n\nНе женат / не замужем (13%)\n\n\nDuplicated origin\n21 520 (99.9%)\n\nв разводе (6%)\n\n\nDupl (modify - origin)\n---\n\nвдовец / вдова (4%)\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ колонке семейного статуса пропусков нет\nПроблем не обнаружено\n58 % либо женаты, либо замужем\n19 % в гражданском браке\nМожно сделать вывод что большинство в браке.\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 9: family_status_id\n\n\n\n\n\nValues\n21 525 (100%)\n\n0 (58%)\n\n\nMissing\n---\n\n1 (19%)\n\n\nDistinct\n5 (&lt;1%)\n\n4 (13%)\n\n\nDuplicated origin\n21 520 (99.9%)\n\n3 (6%)\n\n\nDupl (modify - origin)\n---\n\n2 (4%)\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nКолонке семейный статус id проблем не обнаружено, значения совпадают со столбцом семейный статус\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 10: gender\n\n\n\n\n\nValues\n21 525 (100%)\n\nF (66%)\n\n\nMissing\n---\n\nM (34%)\n\n\nDistinct\n3 (&lt;1%)\n\nXNA &lt;1%\n\n\nDuplicated origin\n21 522 (99.9%)\n\n\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ возрасте пропусков нет\n3 уникальных значения\nЗначение XNA меньше чем у 1 %, возможно не указали пол\n66 % женщины, можно сделать вывод, что большинство женщины\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 11: income_type\n\n\n\n\n\nValues\n21 525 (100%)\n\nсотрудник (52%)\n\n\nMissing\n---\n\nкомпаньон (24%)\n\n\nDistinct\n8 (&lt;1%)\n\nпенсионер (18%)\n\n\nDuplicated origin\n21 517 (99.9%)\n\nгосслужащий (7%)\n\n\nDupl (modify - origin)\n---\n\nбезработный &lt;1%\n\n\nEmpty\n---\n\nпредприниматель &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nв декрете &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ столбце тип занятости 8 уникальных значений.\n\nБольше всего сотрудников (52 %)\n24 % компаньоны\n18 % пенсионеры\nМеньше 1 % безработных.\nМожно сделать вывод, что большинство либо пенсионеры, либо имеют занятость\nТакже меньше 1 % предприниматели.\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 12: debt\n\n\n\n\n\nValues\n21 525 (100%)\n\nнет (92%)\n\n\nMissing\n---\n\nесть (8%)\n\n\nDistinct\n2 (&lt;1%)\n\n\n\n\nDuplicated origin\n21 523 (99.9%)\n\n\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ колонке наличия долга 2 значения.\n\nПропусков нет\n92 % людей не имеют долга\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 13: purpose\n\n\n\n\n\nValues\n21 525 (100%)\n\nсвадьба (4%)\n\n\nMissing\n---\n\nна проведение свадьбы (4%)\n\n\nDistinct\n38 (&lt;1%)\n\nсыграть свадьбу (4%)\n\n\nDuplicated origin\n21 487 (99.8%)\n\nоперации с недвижимостью (3%)\n\n\nDupl (modify - origin)\n---\n\nпокупка коммерческой недвижимости (3%)\n\n\nEmpty\n---\n\nпокупка жилья для сдачи (3%)\n\n\nRAM (Mb)\n3\n\nоперации с жильем (3%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ колонке цель кредита пропусков нет\n\n38 уникальных значений, немного, но все таки есть похожие цели, нужно будет объединить в одно значение\nЯрко выраженной цели кредита нет, но сложно точно определить, нужно объединить сначала похожие цели.\n\nДля дальнейшего анализа срауз приведем колонку education к нижнему регистру и удалим лишние пробелы\n\n\nShow the code\n\ndf.education = pagri_data_tools.normalize_string_series(df.education)\ndf.education.value_counts().to_frame()\n\n\n\n\n\n\n\n\n\ncount\n\n\neducation\n\n\n\n\n\nсреднее\n15233\n\n\nвысшее\n5260\n\n\nнеоконченное высшее\n744\n\n\nначальное\n282\n\n\nученая степень\n6\n\n\n\n\n\n\n\nПроверим на ошибки целостности\nЕсли у нас есть столбцы, в которых значения должны совпадать попарно, то проверяем на это.\n\n\nShow the code\n\npagri_data_tools.get_non_matching_rows(df, 'education', 'education_id')\n\n\nНет строк для которых значения в col1 имеют разные значения в col2\n\n\nНет проблем с целостностью в образовании, несмотря на дубли в образовании.\n\n\nShow the code\n\npagri_data_tools.get_non_matching_rows(df, 'family_status', 'family_status_id')\n\n\nНет строк для которых значения в col1 имеют разные значения в col2\n\n\nВ семейном статусе также нет проблем с целостностью.\n\n\n1.2.2 Изучение дубликатов\nВернуться к выводам\nПроверим на дубли\nПосмотрим на дубли во всем датафрейме\n\n\nShow the code\n\ndupl_df = pagri_data_tools.check_duplicated(df)\n\n\nDuplicated is 71 (0.3%) rows\n\n\nУ нас 54 полных дубля в таблице. Посмотрим на них.\n\n\nShow the code\n\ndupl_df.sample(10)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncount\n\n\nchildren\ndays_employed\nage\neducation\neducation_id\nfamily_status\nfamily_status_id\ngender\nincome_type\ndebt\ntotal_income\npurpose\n\n\n\n\n\n0\n366085.971246\n58\nсреднее\n1\nженат / замужем\n0\nF\nпенсионер\nнет\n62509.116756\nпокупка своего жилья\n1\n\n\n-4471.908675\n49\nсреднее\n1\nженат / замужем\n0\nF\nсотрудник\nнет\n145681.166753\nпокупка жилья для сдачи\n1\n\n\n-2161.728644\n45\nсреднее\n1\nженат / замужем\n0\nM\nкомпаньон\nнет\n174976.559244\nпокупка жилой недвижимости\n1\n\n\n1\nNaN\n45\nвысшее\n0\nженат / замужем\n0\nM\nсотрудник\nнет\nNaN\nна покупку подержанного автомобиля\n1\n\n\n0\n-202.034936\n62\nсреднее\n1\nвдовец / вдова\n2\nF\nсотрудник\nнет\n116093.542265\nстроительство жилой недвижимости\n1\n\n\n-10461.809545\n51\nсреднее\n1\nженат / замужем\n0\nF\nгосслужащий\nнет\n99292.152980\nпокупка коммерческой недвижимости\n1\n\n\n1\n-4878.408137\n39\nвысшее\n0\nгражданский брак\n1\nF\nсотрудник\nнет\n159931.847818\nсвой автомобиль\n1\n\n\n0\n-4777.041799\n51\nвысшее\n0\nженат / замужем\n0\nF\nсотрудник\nнет\n580657.906000\nсделка с подержанным автомобилем\n1\n\n\n-3564.541990\n32\nвысшее\n0\nгражданский брак\n1\nM\nсотрудник\nнет\n318667.904844\nсыграть свадьбу\n1\n\n\n2\n-221.799963\n30\nсреднее\n1\nженат / замужем\n0\nM\nсотрудник\nнет\n107204.889031\nремонт жилью\n1\n\n\n\n\n\n\n\nНаблюдения:\n\nТак как у нас нет уникального идентификатора клиентов, то дубли это нормально\nТакже у нас в строках с дублями есть пропуски в некоторых столбцах, если бы не было пропусков,\nто возможно дублей было бы меньше, так как было бы больше детализации\n\nПосмотрим сколько у нас дублей в каждой колонке\n\n\nShow the code\n\nseries_duplicated = pagri_data_tools.find_columns_with_duplicates(df)\n\n\n\n\n\n\n\nTable 14: Duplicates\n\n\n\n\n\nchildren\n21517 (99.96%)\n\n\ndays_employed\n2173 (10.10%)\n\n\nage\n21467 (99.73%)\n\n\neducation\n21520 (99.98%)\n\n\neducation_id\n21520 (99.98%)\n\n\nfamily_status\n21520 (99.98%)\n\n\nfamily_status_id\n21520 (99.98%)\n\n\ngender\n21522 (99.99%)\n\n\nincome_type\n21517 (99.96%)\n\n\ndebt\n21523 (99.99%)\n\n\ntotal_income\n2173 (10.10%)\n\n\npurpose\n21487 (99.82%)\n\n\n\n\n\n\n\n\nПосмотрим на дубликаты между парами колонок\n\n\nShow the code\n\ngen = pagri_data_tools.check_duplicated_combinations_gen(df)\nnext(gen)\n\n\nGroup by 2 columns\n\n\n\n\n\n\n\nTable 15: Duplicates\n\n\n\n\n\n \nchildren\ndays_employed\nage\neducation\neducation_id\nfamily_status\nfamily_status_id\ngender\nincome_type\ndebt\ntotal_income\npurpose\n\n\n\n\nchildren\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndays_employed\n2166\n\n\n\n\n\n\n\n\n\n\n\n\n\nage\n21236\n2118\n\n\n\n\n\n\n\n\n\n\n\n\neducation\n21496\n2170\n21300\n\n\n\n\n\n\n\n\n\n\n\neducation_id\n21496\n2170\n21300\n21520\n\n\n\n\n\n\n\n\n\n\nfamily_status\n21488\n2169\n21253\n21502\n21502\n\n\n\n\n\n\n\n\n\nfamily_status_id\n21488\n2169\n21253\n21502\n21502\n21520\n\n\n\n\n\n\n\n\ngender\n21508\n2172\n21410\n21514\n21514\n21514\n21514\n\n\n\n\n\n\n\nincome_type\n21489\n2169\n21304\n21501\n21501\n21499\n21499\n21510\n\n\n\n\n\n\ndebt\n21510\n2172\n21412\n21516\n21516\n21515\n21515\n21520\n21512\n\n\n\n\n\ntotal_income\n2166\n2173\n2118\n2170\n2170\n2169\n2169\n2172\n2169\n2172\n\n\n\n\npurpose\n21279\n2136\n19504\n21368\n21368\n21347\n21347\n21448\n21367\n21449\n2136\n\n\n\n\n\n\n\n\n\nНаблюдения:\n\nУ нас большинство колонок имеют попранные дубликаты, это скорее всего вызвано пропусками\nЕсли бы не было пропусков в колонках стажа и дохода, то дублей было бы меньше\n\n\n\n1.2.3 Изучение пропусков\nВернуться к выводам\nПроверяем на пропуски\n\n\nShow the code\n\nseries_missed = pagri_data_tools.find_columns_with_missing_values(df)\n\n\n\n\n\n\n\nTable 16: Missings\n\n\n\n\n\ndays_employed\n2174 (10.10%)\n\n\ntotal_income\n2174 (10.10%)\n\n\n\n\n\n\n\n\nУ нас пропуски в колонке со стажем и в колокне с доходом.\nПосмотрим на строки датафрейма с пропусками.\n\n\nShow the code\n\ndays_employed_missed = series_missed['days_employed']\ntotal_income_missed = series_missed['total_income']\n\n\nКоличество пропусков совпадает с точностью до строки.\nВыдвигаем гипотезу, что пропуски в обоих колонках в одних и тех же строках.\nПроверим эту гипотезу\nПосмотрим на стаж\n\n\nShow the code\n\ndays_employed_missed.sample(10)\n\n\n\n\n\n\n\n\n\nchildren\ndays_employed\nage\neducation\neducation_id\nfamily_status\nfamily_status_id\ngender\nincome_type\ndebt\ntotal_income\npurpose\n\n\n\n\n11702\n1\nNaN\n44\nсреднее\n1\nженат / замужем\n0\nF\nсотрудник\nнет\nNaN\nсделка с подержанным автомобилем\n\n\n21294\n0\nNaN\n45\nвысшее\n0\nженат / замужем\n0\nF\nсотрудник\nнет\nNaN\nвысшее образование\n\n\n8886\n1\nNaN\n37\nсреднее\n1\nженат / замужем\n0\nF\nсотрудник\nнет\nNaN\nпокупка недвижимости\n\n\n15933\n0\nNaN\n22\nсреднее\n1\nгражданский брак\n1\nM\nсотрудник\nнет\nNaN\nна проведение свадьбы\n\n\n10756\n0\nNaN\n52\nсреднее\n1\nженат / замужем\n0\nF\nпенсионер\nнет\nNaN\nобразование\n\n\n5681\n0\nNaN\n42\nсреднее\n1\nженат / замужем\n0\nF\nсотрудник\nнет\nNaN\nавтомобиль\n\n\n20040\n0\nNaN\n63\nсреднее\n1\nженат / замужем\n0\nM\nсотрудник\nнет\nNaN\nстроительство жилой недвижимости\n\n\n1941\n0\nNaN\n48\nсреднее\n1\nгражданский брак\n1\nM\nсотрудник\nесть\nNaN\nна покупку своего автомобиля\n\n\n16904\n1\nNaN\n32\nвысшее\n0\nженат / замужем\n0\nF\nсотрудник\nнет\nNaN\nна покупку подержанного автомобиля\n\n\n2304\n0\nNaN\n43\nсреднее\n1\nженат / замужем\n0\nF\nсотрудник\nесть\nNaN\nобразование\n\n\n\n\n\n\n\nНаблюдения:\n\n10 случайно взятых строк подтверждают гипотезу\n\nПосмотрим на доход\n\n\nShow the code\n\ntotal_income_missed.sample(10)\n\n\n\n\n\n\n\n\n\nchildren\ndays_employed\nage\neducation\neducation_id\nfamily_status\nfamily_status_id\ngender\nincome_type\ndebt\ntotal_income\npurpose\n\n\n\n\n14469\n1\nNaN\n36\nсреднее\n1\nженат / замужем\n0\nM\nкомпаньон\nнет\nNaN\nоперации с коммерческой недвижимостью\n\n\n7514\n1\nNaN\n54\nсреднее\n1\nженат / замужем\n0\nF\nпенсионер\nнет\nNaN\nпокупка жилья для семьи\n\n\n619\n1\nNaN\n37\nсреднее\n1\nгражданский брак\n1\nF\nкомпаньон\nесть\nNaN\nсвадьба\n\n\n10462\n0\nNaN\n62\nсреднее\n1\nженат / замужем\n0\nF\nпенсионер\nнет\nNaN\nпокупка коммерческой недвижимости\n\n\n11968\n0\nNaN\n52\nсреднее\n1\nженат / замужем\n0\nF\nсотрудник\nнет\nNaN\nоперации с жильем\n\n\n11850\n0\nNaN\n61\nсреднее\n1\nНе женат / не замужем\n4\nF\nпенсионер\nнет\nNaN\nпокупка жилья\n\n\n11683\n0\nNaN\n46\nсреднее\n1\nгражданский брак\n1\nF\nкомпаньон\nнет\nNaN\nжилье\n\n\n19384\n0\nNaN\n29\nсреднее\n1\nНе женат / не замужем\n4\nM\nсотрудник\nнет\nNaN\nоперации с недвижимостью\n\n\n19578\n1\nNaN\n47\nсреднее\n1\nженат / замужем\n0\nF\nсотрудник\nнет\nNaN\nзаняться образованием\n\n\n21000\n2\nNaN\n35\nсреднее\n1\nженат / замужем\n0\nM\nсотрудник\nнет\nNaN\nпокупка жилья\n\n\n\n\n\n\n\nНаблюдения:\n\n10 случайно взятых строк подтверждают гипотезу\n\nПосмотрим сколько пропусков в обоих колонках вместе\n\n\nShow the code\n\ndf_missed_employed_income = pagri_data_tools.check_na_in_both_columns(df, ['days_employed', 'total_income'])\n\n\n2174 (10.10%) rows with missings simultaneously in ['days_employed', 'total_income']\n\n\nНаблюдения:\n\nВидим, что совместно пропуски в таком количестве строк как и по отдельности.\nГипотеза подтвердилась. У нас пропуски в строке стаж связаны с пропусками в строке доход.\nВозможно это вызвано тем, что при расчете дохода используется стаж, либо существует другое влияние одного на другое.\n\n\n\n1.2.4 Изучение выбросов\nВернуться к выводам\nСначала изучим потенциальные выбросы, которые мы выявили при изучении колонок.\nУ нас в количестве детей есть значение 20.\nИзучим его подробнее.\n\n\nShow the code\n\noutliers_series = pd.Series([df[df.children == 20]], index=['children'])\ngen = pagri_data_tools.analyze_by_category_gen(df, outliers_series)\nnext(gen)\n\n\nValue counts (0.35%)\n\n\n\n\n\n\n\nTable 17: children\n\n\n\n\n\n \ncount\n\n\nchildren\n \n\n\n\n\n20\n76\n\n\n\n\n\n\n\n\nПосмотрим на строки датафрейма, где количество детей равно 20\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\n\n\nchildren\ndays_employed\nage\neducation\neducation_id\nfamily_status\nfamily_status_id\ngender\nincome_type\ndebt\ntotal_income\npurpose\n\n\n\n\n12534\n20\n-579.038062\n48\nсреднее\n1\nгражданский брак\n1\nF\nсотрудник\nесть\n125518.059419\nна проведение свадьбы\n\n\n18756\n20\n-2334.690116\n51\nсреднее\n1\nженат / замужем\n0\nF\nсотрудник\nнет\n224637.817562\nавтомобиль\n\n\n3302\n20\nNaN\n35\nсреднее\n1\nНе женат / не замужем\n4\nF\nгосслужащий\nнет\nNaN\nпрофильное образование\n\n\n13256\n20\n-542.697631\n46\nсреднее\n1\nженат / замужем\n0\nF\nсотрудник\nнет\n84405.034582\nоперации с недвижимостью\n\n\n18890\n20\n-904.259293\n37\nсреднее\n1\nженат / замужем\n0\nF\nкомпаньон\nесть\n212811.568585\nна покупку подержанного автомобиля\n\n\n17093\n20\n-1481.602776\n42\nсреднее\n1\nженат / замужем\n0\nF\nсотрудник\nнет\n73069.574569\nполучение дополнительного образования\n\n\n9889\n20\n-2232.776113\n34\nсреднее\n1\nНе женат / не замужем\n4\nM\nсотрудник\nнет\n53971.576721\nпокупка жилья\n\n\n21325\n20\n-601.174883\n37\nсреднее\n1\nженат / замужем\n0\nF\nкомпаньон\nнет\n102986.065978\nпрофильное образование\n\n\n17509\n20\n-461.939717\n31\nсреднее\n1\nНе женат / не замужем\n4\nF\nсотрудник\nнет\n90937.893204\nжилье\n\n\n7027\n20\n-690.181658\n54\nсреднее\n1\nгражданский брак\n1\nF\nкомпаньон\nнет\n100206.266595\nна проведение свадьбы\n\n\n\n\n\n\n\n\n\nShow the code\n\n%%capture\nnext(gen);next(gen);next(gen)\n\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\nTable 18: Value in \"children\" by category \"family_status\"\n\n\n\n\n\nfamily_status\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nНе женат / не замужем\n2813\n9\n0.3%\n11.8%\n13.1%\n-1.2%\n\n\nв разводе\n1195\n2\n0.2%\n2.6%\n5.6%\n-2.9%\n\n\nвдовец / вдова\n960\n4\n0.4%\n5.3%\n4.5%\n0.8%\n\n\nгражданский брак\n4177\n12\n0.3%\n15.8%\n19.4%\n-3.6%\n\n\nженат / замужем\n12380\n49\n0.4%\n64.5%\n57.5%\n7.0%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nЗначительная часть людей с 20 детьми находятся в браке.\n\n\n\nShow the code\n\n%%capture\nnext(gen);next(gen)\n\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\nTable 19: Value in \"children\" by category \"income_type\"\n\n\n\n\n\nincome_type\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nбезработный\n2\n0\n0.0%\n0.0%\n0.0%\n-0.0%\n\n\nв декрете\n1\n0\n0.0%\n0.0%\n0.0%\n-0.0%\n\n\nгосслужащий\n1459\n2\n0.1%\n2.6%\n6.8%\n-4.1%\n\n\nкомпаньон\n5085\n22\n0.4%\n28.9%\n23.6%\n5.3%\n\n\nпенсионер\n3856\n9\n0.2%\n11.8%\n17.9%\n-6.1%\n\n\nпредприниматель\n2\n0\n0.0%\n0.0%\n0.0%\n-0.0%\n\n\nсотрудник\n11119\n43\n0.4%\n56.6%\n51.7%\n4.9%\n\n\nстудент\n1\n0\n0.0%\n0.0%\n0.0%\n-0.0%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nБольшая часть сотрудники\nПенсионеры имеют меньшую долю с 20 детьми чем в основном количестве.\n\nУ нас в доходе странные максимальные значения нужно их изучить\n\n\nShow the code\n\noutliers_series = pd.Series([df[df.total_income &gt; 1000000]], index=['total_income'])\ngen = pagri_data_tools.analyze_by_category_gen(df, outliers_series)\nnext(gen)\n\n\nValue counts (0.12%)\n\n\n\n\n\n\n\nTable 20: total_income\n\n\n\n\n\n \ncount\n\n\ntotal_income\n \n\n\n\n\n1089120.307967\n1\n\n\n1172459.831538\n1\n\n\n1223042.479856\n1\n\n\n2200852.210259\n1\n\n\n1091627.585474\n1\n\n\n1092608.202547\n1\n\n\n1551152.893832\n1\n\n\n1427934.463152\n1\n\n\n1027742.279317\n1\n\n\n1597613.490467\n1\n\n\n\n\n\n\n\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\n\n\nchildren\ndays_employed\nage\neducation\neducation_id\nfamily_status\nfamily_status_id\ngender\nincome_type\ndebt\ntotal_income\npurpose\n\n\n\n\n12412\n0\n-1477.438114\n44\nвысшее\n0\nженат / замужем\n0\nM\nкомпаньон\nнет\n2.265604e+06\nремонт жилью\n\n\n4129\n0\n-7992.968249\n52\nвысшее\n0\nженат / замужем\n0\nF\nкомпаньон\nнет\n1.004476e+06\nоперации с коммерческой недвижимостью\n\n\n18347\n0\n-5536.801152\n35\nвысшее\n0\nгражданский брак\n1\nF\nкомпаньон\nнет\n1.027742e+06\nоперации с жильем\n\n\n15268\n1\n-10207.448165\n64\nвысшее\n0\nв разводе\n3\nM\nкомпаньон\nнет\n1.350246e+06\nжилье\n\n\n20809\n0\n-4719.273476\n61\nсреднее\n1\nНе женат / не замужем\n4\nF\nсотрудник\nнет\n1.715018e+06\nпокупка жилья для семьи\n\n\n18766\n2\n-1019.604773\n43\nвысшее\n0\nженат / замужем\n0\nM\nкомпаньон\nнет\n1.092608e+06\nстроительство недвижимости\n\n\n7447\n0\n-8626.777234\n39\nсреднее\n1\nв разводе\n3\nF\nсотрудник\nнет\n1.240165e+06\nпокупка недвижимости\n\n\n19338\n3\n-1733.364682\n34\nвысшее\n0\nженат / замужем\n0\nM\nсотрудник\nнет\n1.091628e+06\nоперации с жильем\n\n\n2224\n1\n-4614.851849\n42\nвысшее\n0\nженат / замужем\n0\nM\nсотрудник\nнет\n1.278623e+06\nпокупка жилья\n\n\n13090\n1\n-3531.320534\n54\nвысшее\n0\nв разводе\n3\nF\nкомпаньон\nнет\n1.128836e+06\nоперации с недвижимостью\n\n\n\n\n\n\n\nНаблюдения:\n\nНичего особенного не заметно, возможно это не выбросы.\n\nПосмотрим на выбросы через квантили\n\n\nShow the code\n\nseries_outliers = pagri_data_tools.detect_outliers_quantile(df)\n\n\n\n\n\n\n\nTable 21: Outliers\n\n\n\n\n\nchildren\n503 (2.34%)\n\n\ndays_employed\n1936 (8.99%)\n\n\nage\n1877 (8.72%)\n\n\ntotal_income\n1936 (8.99%)\n\n\n\n\n\n\n\n\nНаблюдения:\n\nинтересно что количество выбросов, кроме колонки количество детей, примерно одинаковое\n\nИзучим выбросы в разрезе категорий\n\n\nShow the code\n\ngen = pagri_data_tools.analyze_by_category_gen(df, series_outliers)\nnext(gen)\n\n\nValue counts (2.34%)\n\n\n\n\n\n\n\nTable 22: children\n\n\n\n\n\n \ncount\n\n\nchildren\n \n\n\n\n\n3\n330\n\n\n20\n76\n\n\n-1\n47\n\n\n4\n41\n\n\n5\n9\n\n\n\n\n\n\n\n\nНаблюдения:\n\nВидим, что клиенты с количеством больше 2 попали в выбросы, что логично\nТакже -1 попало в выброс, что тоже верно\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\n\n\nchildren\ndays_employed\nage\neducation\neducation_id\nfamily_status\nfamily_status_id\ngender\nincome_type\ndebt\ntotal_income\npurpose\n\n\n\n\n5315\n20\n-2047.754733\n24\nсреднее\n1\nженат / замужем\n0\nF\nсотрудник\nнет\n100415.236833\nпокупка коммерческой недвижимости\n\n\n5362\n20\n355898.021316\n69\nсреднее\n1\nженат / замужем\n0\nM\nпенсионер\nнет\n138579.082863\nавтомобили\n\n\n13683\n3\n-412.704203\n37\nсреднее\n1\nженат / замужем\n0\nM\nсотрудник\nнет\n250758.702480\nпокупка жилой недвижимости\n\n\n20533\n3\n-3486.098717\n33\nвысшее\n0\nженат / замужем\n0\nF\nгосслужащий\nнет\n181661.163824\nоперации с коммерческой недвижимостью\n\n\n3445\n3\n-3316.247950\n38\nсреднее\n1\nженат / замужем\n0\nM\nкомпаньон\nнет\n243288.609169\nсделка с подержанным автомобилем\n\n\n1985\n3\n-823.339980\n33\nсреднее\n1\nженат / замужем\n0\nF\nгосслужащий\nнет\n57541.895996\nстроительство жилой недвижимости\n\n\n6219\n3\n-321.640557\n37\nвысшее\n0\nгражданский брак\n1\nF\nкомпаньон\nнет\n172214.363998\nнедвижимость\n\n\n20756\n3\n-2903.921654\n48\nсреднее\n1\nженат / замужем\n0\nF\nсотрудник\nнет\n63511.921815\nоперации с недвижимостью\n\n\n16809\n3\n360587.743062\n42\nсреднее\n1\nгражданский брак\n1\nF\nпенсионер\nесть\n66187.816041\nна проведение свадьбы\n\n\n12916\n3\nNaN\n36\nсреднее\n1\nженат / замужем\n0\nM\nсотрудник\nнет\nNaN\nзаняться высшим образованием\n\n\n\n\n\n\n\n\n\nShow the code\n\n%%capture\nnext(gen);next(gen);next(gen)\n\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\nTable 23: Value in \"children\" by category \"family_status\"\n\n\n\n\n\nfamily_status\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nНе женат / не замужем\n2813\n24\n0.9%\n4.8%\n13.1%\n-8.3%\n\n\nв разводе\n1195\n18\n1.5%\n3.6%\n5.6%\n-2.0%\n\n\nвдовец / вдова\n960\n15\n1.6%\n3.0%\n4.5%\n-1.5%\n\n\nгражданский брак\n4177\n83\n2.0%\n16.5%\n19.4%\n-2.9%\n\n\nженат / замужем\n12380\n363\n2.9%\n72.2%\n57.5%\n14.7%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nженат / замужем содержит значительно больше выбросов, даже учитывая что в общем количестве их тоже больше\n\n\n\nShow the code\n\n%%capture\nnext(gen)\n\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\nTable 24: Value in \"children\" by category \"gender\"\n\n\n\n\n\ngender\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nF\n14236\n313\n2.2%\n62.2%\n66.1%\n-3.9%\n\n\nM\n7288\n190\n2.6%\n37.8%\n33.9%\n3.9%\n\n\nXNA\n1\n0\n0.0%\n0.0%\n0.0%\n-0.0%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nУ мужчин немного побольше выбросов, учитывая размер группы мужчин\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\nTable 25: Value in \"children\" by category \"income_type\"\n\n\n\n\n\nincome_type\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nбезработный\n2\n0\n0.0%\n0.0%\n0.0%\n-0.0%\n\n\nв декрете\n1\n0\n0.0%\n0.0%\n0.0%\n-0.0%\n\n\nгосслужащий\n1459\n50\n3.4%\n9.9%\n6.8%\n3.2%\n\n\nкомпаньон\n5085\n114\n2.2%\n22.7%\n23.6%\n-1.0%\n\n\nпенсионер\n3856\n24\n0.6%\n4.8%\n17.9%\n-13.1%\n\n\nпредприниматель\n2\n0\n0.0%\n0.0%\n0.0%\n-0.0%\n\n\nсотрудник\n11119\n315\n2.8%\n62.6%\n51.7%\n11.0%\n\n\nстудент\n1\n0\n0.0%\n0.0%\n0.0%\n-0.0%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nБольше всего выбросов у сотрудников, даже больше чем пропорция сотрудников в общем количестве\n\n\n\nShow the code\n\n%%capture\nnext(gen);next(gen);next(gen);next(gen);next(gen);next(gen);next(gen);next(gen)\n\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\nTable 26: Value in \"days_employed\" by category \"gender\"\n\n\n\n\n\ngender\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nF\n14236\n1544\n10.8%\n79.8%\n66.1%\n13.6%\n\n\nM\n7288\n392\n5.4%\n20.2%\n33.9%\n-13.6%\n\n\nXNA\n1\n0\n0.0%\n0.0%\n0.0%\n-0.0%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nУ женщин выбросов в стаже намного больше чем у мужчин, даже учитывая что женщин больше всего\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\nTable 27: Value in \"days_employed\" by category \"income_type\"\n\n\n\n\n\nincome_type\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nбезработный\n2\n1\n50.0%\n0.1%\n0.0%\n0.0%\n\n\nв декрете\n1\n0\n0.0%\n0.0%\n0.0%\n-0.0%\n\n\nгосслужащий\n1459\n183\n12.5%\n9.5%\n6.8%\n2.7%\n\n\nкомпаньон\n5085\n173\n3.4%\n8.9%\n23.6%\n-14.7%\n\n\nпенсионер\n3856\n967\n25.1%\n49.9%\n17.9%\n32.0%\n\n\nпредприниматель\n2\n0\n0.0%\n0.0%\n0.0%\n-0.0%\n\n\nсотрудник\n11119\n612\n5.5%\n31.6%\n51.7%\n-20.0%\n\n\nстудент\n1\n0\n0.0%\n0.0%\n0.0%\n-0.0%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nУ пенсионеров значительно больше выбросов в стаже\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\nTable 28: Value in \"days_employed\" by category \"debt\"\n\n\n\n\n\ndebt\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nнет\n19784\n1838\n9.3%\n94.9%\n91.9%\n3.0%\n\n\nесть\n1741\n98\n5.6%\n5.1%\n8.1%\n-3.0%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nУ должников выбросов в стаже меньше, учитывая пропорции.\n\n\n\nShow the code\n\nnext(gen)\n\n\nValue counts (8.72%)\n\n\n\n\n\n\n\nTable 29: age\n\n\n\n\n\n \ncount\n\n\nage\n \n\n\n\n\n24\n264\n\n\n23\n254\n\n\n65\n194\n\n\n66\n183\n\n\n22\n183\n\n\n67\n167\n\n\n21\n111\n\n\n0\n101\n\n\n68\n99\n\n\n69\n85\n\n\n\n\n\n\n\n\nНаблюдения:\n\nВ выбросы попали самые молодые и самые старые по возрасту, что логично, также попал 0\n\n\n\nShow the code\n\n%%capture\nnext(gen);next(gen);next(gen);next(gen)\n\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\nTable 30: Value in \"age\" by category \"family_status\"\n\n\n\n\n\nfamily_status\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nНе женат / не замужем\n2813\n465\n16.5%\n24.8%\n13.1%\n11.7%\n\n\nв разводе\n1195\n75\n6.3%\n4.0%\n5.6%\n-1.6%\n\n\nвдовец / вдова\n960\n176\n18.3%\n9.4%\n4.5%\n4.9%\n\n\nгражданский брак\n4177\n385\n9.2%\n20.5%\n19.4%\n1.1%\n\n\nженат / замужем\n12380\n776\n6.3%\n41.3%\n57.5%\n-16.2%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nНе женат / не замужем выделяется по выбросам, учитывая пропорцию в общем количестве\n\n\n\nShow the code\n\n%%capture\nnext(gen);next(gen)\n\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\nTable 31: Value in \"age\" by category \"income_type\"\n\n\n\n\n\nincome_type\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nбезработный\n2\n0\n0.0%\n0.0%\n0.0%\n-0.0%\n\n\nв декрете\n1\n0\n0.0%\n0.0%\n0.0%\n-0.0%\n\n\nгосслужащий\n1459\n69\n4.7%\n3.7%\n6.8%\n-3.1%\n\n\nкомпаньон\n5085\n333\n6.5%\n17.7%\n23.6%\n-5.9%\n\n\nпенсионер\n3856\n792\n20.5%\n42.2%\n17.9%\n24.3%\n\n\nпредприниматель\n2\n0\n0.0%\n0.0%\n0.0%\n-0.0%\n\n\nсотрудник\n11119\n682\n6.1%\n36.3%\n51.7%\n-15.3%\n\n\nстудент\n1\n1\n100.0%\n0.1%\n0.0%\n0.0%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nУ пенсионеров больше выбросов по возрасту, что логично\n\n\n\nShow the code\n\n%%capture\nnext(gen);next(gen);next(gen);next(gen);next(gen);next(gen)\n\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\nTable 32: Value in \"total_income\" by category \"family_status\"\n\n\n\n\n\nfamily_status\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nНе женат / не замужем\n2813\n217\n7.7%\n11.2%\n13.1%\n-1.9%\n\n\nв разводе\n1195\n96\n8.0%\n5.0%\n5.6%\n-0.6%\n\n\nвдовец / вдова\n960\n95\n9.9%\n4.9%\n4.5%\n0.4%\n\n\nгражданский брак\n4177\n336\n8.0%\n17.4%\n19.4%\n-2.0%\n\n\nженат / замужем\n12380\n1192\n9.6%\n61.6%\n57.5%\n4.1%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nУ женатых больше выбросов по доходу\n\n\n\nShow the code\n\n%%capture\nnext(gen);next(gen)\n\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\nTable 33: Value in \"total_income\" by category \"income_type\"\n\n\n\n\n\nincome_type\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nбезработный\n2\n1\n50.0%\n0.1%\n0.0%\n0.0%\n\n\nв декрете\n1\n1\n100.0%\n0.1%\n0.0%\n0.0%\n\n\nгосслужащий\n1459\n140\n9.6%\n7.2%\n6.8%\n0.5%\n\n\nкомпаньон\n5085\n488\n9.6%\n25.2%\n23.6%\n1.6%\n\n\nпенсионер\n3856\n500\n13.0%\n25.8%\n17.9%\n7.9%\n\n\nпредприниматель\n2\n1\n50.0%\n0.1%\n0.0%\n0.0%\n\n\nсотрудник\n11119\n805\n7.2%\n41.6%\n51.7%\n-10.1%\n\n\nстудент\n1\n0\n0.0%\n0.0%\n0.0%\n-0.0%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nУ пенсионеров больше выбросов по доходу\n\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\nTable 34: Value in \"total_income\" by category \"debt\"\n\n\n\n\n\ndebt\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nнет\n19784\n1811\n9.2%\n93.5%\n91.9%\n1.6%\n\n\nесть\n1741\n125\n7.2%\n6.5%\n8.1%\n-1.6%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nБез задолженности немного больше выбросов по доходу.\n\n\n\n\n1.3 Промежуточный вывод\nВернуться к выводам\n\nВ датафрейме есть строки дубликаты. 54 строки. Меньше 1 % от всего датафрейма.\nТак как у нас нет уникального идентификатора клиентов, то эти дубли не выглядят ошибкой.\nТакже у нас в строках с дублями есть пропуски в некоторых столбцах, если бы не было пропусков,\nто возможно дублей было бы меньше, так как было бы больше детализации\nВ столбце с количеством детей есть отрицательные значения. 47 штук. Меньше 1 процента. Также есть клиенты с 20 детьми. Что странно.\nТакое количество детей в основном у людей в браке и сотрудников. У пенсионеров явно доля с 20 детьми меньше, чем доле пенсионеров в общем количестве людей.\nВозможно 20 детей связано с тем, что во время ввода данных указали лишний ноль.\nРекомендация, сделать проверку на отрицательные значения и на 20 детей, чтобы на стадии ввода не допускать ошибок.\n\n66 процентов имеют 0 детей, 22 процента имеют 1 ребенка, 10 % имеют 2 детей и меньше 5 % имеют более 2 детей.\n\nВ колонке общий трудовой стаж есть 10 % пропущенных значений.\n\n74 % отрицательных значений. Так быть не должно.\n\nМаксимальное количество дней стажа больше 400 тысяч дней, это больше 1000 лет. Явно это выброс.\n\nСтолбец со стажем выглядит некорректно. Нужно выяснить методику расчета и разобраться в чем проблема.\n\nВ колонке возраста 101 нулевое значение. Это явно ошибки.\n\nМедиана 42 года, первый квартиль 33 года, можно сделать вывод, что у нас в основном люди старше 30 лет.\n\nБольше всего людей около 40 лет.\n\nТолько 5 процентов людей моложе 25 лет.\n\nКолонка дохода имеет слишком много знаков после запятой. Нужно выяснить причину.\n\nДоход больше 1 млн может быть правдой. Тем более такой доход в большинстве у мужчин с высшим образованием, у компаньонов или сотрудников.\nНет оснований считать это выбросом. Максимальный доход 2 млн. Также может быть реальным.\nМеньше 5 % людей имеют зарплату меньше 63 тысяч.\nМожно сделать вывод, что большинство имеет высокий доход.\nПри этом 25 % имеют доход больше 200 тысяч.\n\nВ колонке с образованием присутствуют одни и те же значения с разными регистрами. Нужно выяснить почему так происходит при загрузке.\nПри этом в колонке с id образования все в порядке.\n\nБольше всего людей со средним образованием 71 %. Высшее образование у 24 %.\n58 % женаты либо замужем. 19 % в гражданском браке. Можно сделать вывод что большинство в браке.\n\nВ колонке пола присутствует значение XNA меньше чем у 1 %, возможно не указали пол.\n66 % женщины, можно сделать вывод, что большинство женщины\nВ столбце занятость больше всего сотрудников (52 %). Меньше 1 % безработных. Предпринимателей также 1 %. Можно сделать вывод, что большинство либо пенсионеры, либо имеют занятость.\n92 % не имеют долга\nВ колонке цель кредита 38 уникальных значений, немного, но все таки есть похожие цели, нужно будет объединить в одно значение.\nУ нас пропуски в колонке со стажем и в колокне с доходом.\n\nГипотеза, что пропуски в обоих колонках расположены в одних и тех же строках подтвердилась.\nВозможно это вызвано тем, что при расчете дохода используется стаж, либо существует другое влияние одного на другое.\n\nКатегория семейного статуса ‘женат / замужем’ содержит значительно больше выбросов по количеству детей, даже учитывая что в общем количестве их тоже больше\nУ мужчин немного побольше выбросов по количеству детей, учитывая размер группы мужчин.\nБольше всего выбросов по количеству детей у категории занятости ‘сотрудник’\nУ женщин выбросов в стаже намного больше чем у мужчин, даже учитывая что женщин больше всего\nУ пенсионеров значительно больше выбросов в стаже\nКатегория семейного статуса ‘Не женат / не замужем’ выделяется по выбросам, учитывая пропорцию в общем количестве.\nУ пенсионеров больше выбросов по возрасту, что логично\nКатегория семейного статуса ‘Не женат / не замужем’ имеет больше выбросов по доходу\nУ пенсионеров больше выбросов по доходу\nУ людей без задолженности немного больше выбросов по доходу."
  },
  {
    "objectID": "projects/housing-ads-investigation/housing_ads_investigation.html",
    "href": "projects/housing-ads-investigation/housing_ads_investigation.html",
    "title": "Исследование объявлений о продаже квартир",
    "section": "",
    "text": "Автор:\nГригорьев Павел\nОписание проекта:\nПроект направлен на исследование факторов, влияющих на ценообразование на рынке недвижимости в Санкт-Петербурге.\nВ ходе проекта будут выявлены ключевые параметры, которые определяют стоимость квартир.\nПолученные знания будут использованы для создания системы, которая будет отслеживать аномалии и предупреждать о возможных случаях мошенничества.\nЦель:\nВыявить ключевые параметры, определяющие стоимость квартир, и разработать рекомендации для создания системы мониторинга,\nкоторая поможет выявлять аномалии в ценах и предупреждать о мошенничестве на рынке недвижимости.\nИсточники данных:\nДанные сервиса Яндекс.Недвижимость — архив объявлений о продаже квартир в Санкт-Петербурге и соседних населённых пунктах за несколько лет.\nУсловия проведения анализа данных:\nДля анализ будут использоваться данные с 27 ноября 2014 по 3 мая 2019 года\nГлавные выводы:\n- В среднем объявление находится в продаже 180 дней.\n- Сильная положительная корреляция между жилой площадью и общей площадью\n- Сильная положительная корреляция между числом комнат и общей площадью\n- Сильная положительная корреляция между числом комнат и жилой площадью\n- Сильная отрицательная корреляция между отношением площади кухни к общей площади и отношением жилой площади к общей площади\n- Общая площадь является самым значимым признаком для предсказания цены квартиры. Число дней экспозиции находится на втором месте.\n- Можно заметить, что чем ближе к центру или парку, тем дороже стоит квартира.\n- Чем больше число комнат, тем больше общая площадь.\n- Чем больше число комнат, тем больше жилая площадь.\n- В воскресенье и субботу меньше всего публикаций\n- Есть тренд на увеличение количества фотографий по годам.\n- В премиуме среднее количество комнат больше на всех этажах\n- У премиум площадь квартир больше на всех этажах\n- В центре медианная стоимость квартир выше\n- В центре медианная площадь квартир больше\n- В центре медианное количество комнат больше\n- В центре медианная высота потолков выше.\n- В центре медианное количество дней экспозиции больше.\n- Среднее и медиана в центре для цены выше почти в 2 раза, чем во всем датафрейме.\n- Общая площадь в центре больше, чем во всем датафрейме.\n- Высота потолков в центре больше, чем во всем датафрейме\n- В центре меньше балконов, чем во всем датафрейме.\n- В центре меньше эконома и больше премиум квартир.\n- Санкт–Петербург, Пушкин и деревня Кудрово имеют самую большую цену квадратного метра.\nАномалии и особенности в данных:\n- Минимальное значение цены 12 190 является аномальным.\n- В высоте потолков есть пропуски (39 процентов)\n- В высоте потолков много выбросов. Есть значение 100.\n- В количестве этажей есть пропуски (меньше 1 процента)\n- В жилой площади 8 процентов пропусков.\n- В площади кухни 10 процентов пропусков.\n- В числе балконов 49 процентов пропусков. Скорее всего пропуски это отсутствие балкона.\n- В расстоянии до ближайшего аэропорта 23 процента пропусков.\n- В расстоянии до центр города 23 процента пропусков.\n- В колонке с количеством парков рядом 23 процента пропусков.\n- В колонке с расстоянием до ближайшего парка 66 процентов пропусков.\n- В колонке с количеством прудов 23 процента пропусков, скорее всего это отсутствие парков.\n- В колонке с расстоянием до ближайшего пруда 62 процента пропусков.\n- В колонке с количеством дней экспозиции 13 процентов пропусков.\n- В колонке с признаком является ли квартира апартаментом 88 процентов пропусков. Скорее всего эти квартиры не являются апартаментами.\n- В колонке с названием населенного пункта 49 пропущенных значений (меньше 1 процента)\n- Пропуски в колонках с количеством парков рядом, количеством прудов рядом,\n- Пропуски в количестве этажей совпадают с пропусками в признаке является ли квартира апартаментом\n- В количестве этаже пропуски зависят от признака является ли квартира студией.\nРекомендации:\n- Добавить контроль ввода слишком больших и слишком маленьких значений для цены, высоты потолка.\n- Добавить контроль ввода для количества комнат, чтобы исключить ввод нулевых значений.\n- Выяснить почему пропуски в колонках с количеством парков рядом, количеством прудов рядом,\nрасстоянием до центра, расстоянием до аэропорта в одних и тех же строках."
  },
  {
    "objectID": "projects/housing-ads-investigation/housing_ads_investigation.html#загрузка-библиотек",
    "href": "projects/housing-ads-investigation/housing_ads_investigation.html#загрузка-библиотек",
    "title": "Исследование объявлений о продаже квартир",
    "section": "Загрузка библиотек",
    "text": "Загрузка библиотек\n\n\nShow the code\n%load_ext autoreload\n%autoreload 2\nimport pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport pagri_data_tools  # type: ignore\npd.set_option('display.max_columns', None)"
  },
  {
    "objectID": "projects/housing-ads-investigation/housing_ads_investigation.html#описание-и-изучение-данных",
    "href": "projects/housing-ads-investigation/housing_ads_investigation.html#описание-и-изучение-данных",
    "title": "Исследование объявлений о продаже квартир",
    "section": "1. Описание и изучение данных",
    "text": "1. Описание и изучение данных\n\n1.1 Описание данных\nПо каждой квартире на продажу доступны два вида данных. Первые вписаны пользователем, вторые — получены автоматически на основе картографических данных.\nНапример, расстояние до центра, аэропорта, ближайшего парка и водоёма.\n\nairports_nearest - расстояние до ближайшего аэропорта в метрах (м)\nbalcony - число балконов\nceiling_height - высота потолков (м)\ncityCenters_nearest - расстояние до центра города (м)\ndays_exposition - сколько дней было размещено объявление (от публикации до снятия)\nfirst_day_exposition - дата публикации\nfloor - этаж\nfloors_total - всего этажей в доме\nis_apartment - апартаменты (булев тип)\nkitchen_area - площадь кухни в квадратных метрах (м²)\nlast_price - цена на момент снятия с публикации\nliving_area - жилая площадь в квадратных метрах(м²)\nlocality_name - название населённого пункта\nopen_plan - свободная планировка (булев тип)\nparks_around3000 - число парков в радиусе 3 км\nparks_nearest - расстояние до ближайшего парка (м)\nponds_around3000 - число водоёмов в радиусе 3 км\nponds_nearest - расстояние до ближайшего водоёма (м)\nrooms - число комнат\nstudio - квартира-студия (булев тип)\ntotal_area - площадь квартиры в квадратных метрах (м²)\ntotal_images - число фотографий квартиры в объявлении\n\n\n\n1.2 Изучение данных\n\n1.2.1 Изучение переменных\nОставим тип float, так как у нас пропуски в данных и мы не можем преобразовать нужные столбцы в int\n\n\nShow the code\ndtype = {'is_apartment': 'category', 'studio': 'category', 'open_plan': 'category'}\ndf = pd.read_csv('https://code.s3.yandex.net/datasets/real_estate_data.csv', dtype=dtype, sep='\\t'\n                , parse_dates=['first_day_exposition'], date_format='%Y-%m-%dT%H:%M:%S')\ndf.rename(columns={'cityCenters_nearest': 'city_centers_nearest'}, inplace=True)\ndf.sample(5, random_state=7)\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\nstudio\nopen_plan\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n6029\n7\n4200000.0\n42.00\n2017-12-05\n2\n2.58\n5.0\n28.5\n5\nNaN\nFalse\nFalse\n5.00\nNaN\nСанкт-Петербург\n36416.0\n9534.0\n2.0\n446.0\n3.0\n459.0\n18.0\n\n\n21836\n7\n3950000.0\n45.00\n2015-06-10\n2\nNaN\n9.0\n28.0\n7\nNaN\nFalse\nFalse\n7.00\n0.0\nСанкт-Петербург\n27880.0\n12138.0\n1.0\n638.0\n1.0\n593.0\n437.0\n\n\n5698\n7\n450000.0\n42.00\n2017-07-31\n2\nNaN\n1.0\n23.0\n1\nNaN\nFalse\nFalse\n5.80\nNaN\nгородской посёлок Будогощь\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n233.0\n\n\n9402\n11\n4900000.0\n55.00\n2017-06-19\n2\nNaN\n14.0\n32.0\n14\nNaN\nFalse\nFalse\n8.50\n2.0\nСанкт-Петербург\n39931.0\n12834.0\n0.0\nNaN\n0.0\nNaN\n15.0\n\n\n2519\n6\n3511000.0\n39.41\n2018-08-07\n1\n2.65\n27.0\nNaN\n12\nNaN\nFalse\nFalse\n11.28\n1.0\nпосёлок Мурино\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n60.0\n\n\n\n\n\n\n\nИзучим каждую колонку отдельно\n\n\nShow the code\ngen = pagri_data_tools.info_gen(df)\nnext(gen)\n\n\n\n\n\n\n\nTable 1: DataFrame\n\n\n\n\n\nRows\nFeatures\nRAM (Mb)\nDuplicates\nDupl (sub - origin)\n\n\n\n\n23 699\n22\n5\n---\n---\n\n\n\n\n\n\n\n\nНаблюдения:\n\nПолных дубликатов в датафрейме нет\n\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 2: first_day_exposition\n\n\n\n\n\nFirst date\n2014-11-27 00:00:00\n\nZeros\n---\n\nYears missing\n0%\n\n\n\nLast date\n2019-05-03 00:00:00\n\nMissing\n---\n\nMonths missing\n0%\n\n\n\nValues\n23 699 (100%)\n\nDistinct\n1 491 (6%)\n\nWeeks missing\n0%\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\nDuplicates\n22 208 (94%)\n\nDays missing\n8%\n\n\n\n\n\n\n\n\n\n        \n        \n\n\nНаблюдения:\n\nВ колонке с датой пропущенных значений нет.\nНет пропущенных годов и месяцев.\n8 процентов дней пропущено\n\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 3: total_images\n\n\n\n\n\nValues\n23 699 (100%)\n\nMax\n50\n\nAvg\n9.86\n\n10 (8%)\n\n\nMissing\n---\n\n95%\n20\n\nMode\n10\n\n9 (7%)\n\n\nDistinct\n38 (&lt;1%)\n\n75%\n14\n\nRange\n50\n\n20 (7%)\n\n\nDuplicates\n23 661 (99.8%)\n\nMedian\n9\n\niQR\n8\n\n8 (7%)\n\n\nZeros\n1 059 (4%)\n\n25%\n6\n\nstd\n5.68\n\n7 (6%)\n\n\nNegative\n---\n\n5%\n1\n\nkurt\n-0.34\n\n6 (6%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n0.26\n\n11 (6%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ колонке с количеством фотографий пропусков нет\n4 процента записей с нулями, это нормально, поскольку у части объявлений нет изображений.\nМаксимальное количество фотографий 50. Это многовато, нужно будет это проверить.\nМедианное значение 9, похоже на правду.\n7 процентов записей имеют 20 фотографий.\n\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 4: last_price\n\n\n\n\n\nValues\n23 699 (100%)\n\nMax\n763 000 000\n\nAvg\n6 541 548.77\n\n4 500 000 (1%)\n\n\nMissing\n---\n\n95%\n15 300 000\n\nMode\n4 500 000\n\n3 500 000 (1%)\n\n\nDistinct\n2 978 (13%)\n\n75%\n6 800 000\n\nRange\n762 987 810\n\n4 300 000 (1%)\n\n\nDuplicates\n20 721 (87%)\n\nMedian\n4 650 000\n\niQR\n3 400 000\n\n4 000 000 (1%)\n\n\nZeros\n---\n\n25%\n3 400 000\n\nstd\n10 887 013.27\n\n4 200 000 (1%)\n\n\nNegative\n---\n\n5%\n1 870 000\n\nkurt\n1277.68\n\n3 600 000 (1%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n12 190\n\nskew\n25.80\n\n3 300 000 (1%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ цене есть выбросы.\nМинимальное значение цены 12 190 и максимальное значение 763 млн выглядят подозрительно.\n\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 5: total_area\n\n\n\n\n\nValues\n23 699 (100%)\n\nMax\n900\n\nAvg\n60.35\n\n45 (2%)\n\n\nMissing\n---\n\n95%\n116\n\nMode\n45\n\n42 (2%)\n\n\nDistinct\n2 182 (9%)\n\n75%\n69.9\n\nRange\n888\n\n60 (1%)\n\n\nDuplicates\n21 517 (91%)\n\nMedian\n52\n\niQR\n29.9\n\n31 (1%)\n\n\nZeros\n---\n\n25%\n40\n\nstd\n35.65\n\n44 (1%)\n\n\nNegative\n---\n\n5%\n31\n\nkurt\n47.52\n\n40 (1%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n12\n\nskew\n4.77\n\n43 (1%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nМаксимальная площадь в 900 квадратов.\nТакже нужно проверить площадь 12 квадратов\n\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 6: rooms\n\n\n\n\n\nValues\n23 699 (100%)\n\nMax\n19\n\nAvg\n2.07\n\n1 (34%)\n\n\nMissing\n---\n\n95%\n4\n\nMode\n1\n\n2 (34%)\n\n\nDistinct\n17 (&lt;1%)\n\n75%\n3\n\nRange\n19\n\n3 (25%)\n\n\nDuplicates\n23 682 (99.9%)\n\nMedian\n2\n\niQR\n2\n\n4 (5%)\n\n\nZeros\n197 (1%)\n\n25%\n1\n\nstd\n1.08\n\n5 (1%)\n\n\nNegative\n---\n\n5%\n1\n\nkurt\n8.69\n\n0 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n1.52\n\n6 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nЕсть квартиры с 0 комнат, возможно так обозначили студии.\nМаксимальное количество комнат 19 нужно изучить.\nТреть квартир с 1 комнатой и треть квартир с двумя комнатами. Четверть с 3 комнатами.\nКвартир с 4 и более команд около 6 процентов.\n\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 7: ceiling_height\n\n\n\n\n\nValues\n14 504 (61%)\n\nMax\n100\n\nAvg\n2.77\n\n2.5 (24%)\n\n\nMissing\n9 195 (39%)\n\n95%\n3.3\n\nMode\n2.5\n\n2.6 (11%)\n\n\nDistinct\n183 (1%)\n\n75%\n2.8\n\nRange\n99\n\n2.7 (11%)\n\n\nDuplicates\n23 515 (99.2%)\n\nMedian\n2.65\n\niQR\n0.28\n\n3 (8%)\n\n\nZeros\n---\n\n25%\n2.52\n\nstd\n1.26\n\n2.8 (7%)\n\n\nNegative\n---\n\n5%\n2.5\n\nkurt\n2627.14\n\n2.55 (7%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1\n\nskew\n41.71\n\n2.75 (6%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ высоте потолков пропуски (39 процентов)\nЯвный выброс 100 в высоте потолков.\n\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 8: floors_total\n\n\n\n\n\nValues\n23 613 (99.6%)\n\nMax\n60\n\nAvg\n10.67\n\n5 (25%)\n\n\nMissing\n86 (&lt;1%)\n\n95%\n25\n\nMode\n5\n\n9 (16%)\n\n\nDistinct\n36 (&lt;1%)\n\n75%\n16\n\nRange\n59\n\n16 (6%)\n\n\nDuplicates\n23 662 (99.8%)\n\nMedian\n9\n\niQR\n11\n\n12 (6%)\n\n\nZeros\n---\n\n25%\n5\n\nstd\n6.6\n\n4 (5%)\n\n\nNegative\n---\n\n5%\n4\n\nkurt\n0.04\n\n10 (5%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1\n\nskew\n0.94\n\n25 (5%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ количестве этажей есть пропуски (меньше 1 процента)\nМаксимальное количество этаже 60 нужно проверить.\nБольше всего пятиэтажек (25 процентов)\n\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 9: living_area\n\n\n\n\n\nValues\n21 796 (92%)\n\nMax\n409.7\n\nAvg\n34.46\n\n18 (4%)\n\n\nMissing\n1 903 (8%)\n\n95%\n69\n\nMode\n18\n\n17 (3%)\n\n\nDistinct\n1 782 (8%)\n\n75%\n42.3\n\nRange\n407.7\n\n30 (3%)\n\n\nDuplicates\n21 916 (92%)\n\nMedian\n30\n\niQR\n23.7\n\n16 (2%)\n\n\nZeros\n---\n\n25%\n18.6\n\nstd\n22.03\n\n20 (2%)\n\n\nNegative\n---\n\n5%\n15.2\n\nkurt\n31.36\n\n28 (2%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n2\n\nskew\n3.91\n\n31 (2%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ жилой площади 8 процентов пропусков.\nНужно проверить минимальную и максимальную жилую площади.\n\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 10: floor\n\n\n\n\n\nValues\n23 699 (100%)\n\nMax\n33\n\nAvg\n5.89\n\n2 (14%)\n\n\nMissing\n---\n\n95%\n16\n\nMode\n2\n\n3 (13%)\n\n\nDistinct\n33 (&lt;1%)\n\n75%\n8\n\nRange\n32\n\n1 (12%)\n\n\nDuplicates\n23 666 (99.9%)\n\nMedian\n4\n\niQR\n6\n\n4 (12%)\n\n\nZeros\n---\n\n25%\n2\n\nstd\n4.89\n\n5 (11%)\n\n\nNegative\n---\n\n5%\n1\n\nkurt\n2.33\n\n6 (6%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1\n\nskew\n1.55\n\n7 (5%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nБольше всего квартир с 1 по 5 этаж. Это логично, учитывая, что у нас больше всего пятиэтажек.\n\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 11: kitchen_area\n\n\n\n\n\nValues\n21 421 (90%)\n\nMax\n112\n\nAvg\n10.57\n\n6 (6%)\n\n\nMissing\n2 278 (10%)\n\n95%\n20\n\nMode\n6\n\n10 (6%)\n\n\nDistinct\n971 (4%)\n\n75%\n12\n\nRange\n110.7\n\n8 (5%)\n\n\nDuplicates\n22 727 (96%)\n\nMedian\n9.1\n\niQR\n5\n\n9 (5%)\n\n\nZeros\n---\n\n25%\n7\n\nstd\n5.91\n\n7 (5%)\n\n\nNegative\n---\n\n5%\n5.5\n\nkurt\n33.76\n\n11 (4%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1.3\n\nskew\n4.21\n\n12 (3%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ площади кухни 10 процентов пропусков.\n\nНужно проверить опять же максимальные и минимальные кухонные площади.\n\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 12: balcony\n\n\n\n\n\nValues\n12 180 (51%)\n\nMax\n5\n\nAvg\n1.15\n\n1 (34%)\n\n\nMissing\n11 519 (49%)\n\n95%\n2\n\nMode\n1\n\n0 (31%)\n\n\nDistinct\n6 (&lt;1%)\n\n75%\n2\n\nRange\n5\n\n2 (30%)\n\n\nDuplicates\n23 692 (99.9%)\n\nMedian\n1\n\niQR\n2\n\n5 (2%)\n\n\nZeros\n3 758 (16%)\n\n25%\n0\n\nstd\n1.07\n\n4 (2%)\n\n\nNegative\n---\n\n5%\n0\n\nkurt\n2.51\n\n3 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n1.24\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ числе балконов 49 процентов пропусков. Скорее всего пропуски это отсутствие балкона.\n\nТреть квартир без балконов, также по трети квартир с 1 и 2 балконами.\n\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 13: airports_nearest\n\n\n\n\n\nValues\n18 157 (77%)\n\nMax\n84 869\n\nAvg\n28 793.67\n\n37 434 &lt;1%\n\n\nMissing\n5 542 (23%)\n\n95%\n51 340\n\nMode\n37 434\n\n21 928 &lt;1%\n\n\nDistinct\n8 275 (35%)\n\n75%\n37 273\n\nRange\n84 869\n\n44 870 &lt;1%\n\n\nDuplicates\n15 423 (65%)\n\nMedian\n26 726\n\niQR\n18 688\n\n39 946 &lt;1%\n\n\nZeros\n1 (&lt;1%)\n\n25%\n18 585\n\nstd\n12 630.88\n\n18 732 &lt;1%\n\n\nNegative\n---\n\n5%\n11 557.4\n\nkurt\n-0.29\n\n37 407 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n0.54\n\n39 140 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ расстоянии до ближайшего аэропорта 23 процента пропусков.\n1 нулевое значение\n\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 14: city_centers_nearest\n\n\n\n\n\nValues\n18 180 (77%)\n\nMax\n65 968\n\nAvg\n14 191.28\n\n8 460 &lt;1%\n\n\nMissing\n5 519 (23%)\n\n95%\n31 671.6\n\nMode\n8 460\n\n20 802 &lt;1%\n\n\nDistinct\n7 642 (32%)\n\n75%\n16 293\n\nRange\n65 787\n\n10 720 &lt;1%\n\n\nDuplicates\n16 056 (68%)\n\nMedian\n13 098.5\n\niQR\n7 055\n\n20 444 &lt;1%\n\n\nZeros\n---\n\n25%\n9 238\n\nstd\n8 608.39\n\n8 434 &lt;1%\n\n\nNegative\n---\n\n5%\n3 541\n\nkurt\n4.36\n\n8 370 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n181\n\nskew\n1.67\n\n10 364 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ расстоянии до центр города 23 процента пропусков.\n\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 15: parks_around3000\n\n\n\n\n\nValues\n18 181 (77%)\n\nMax\n3\n\nAvg\n0.61\n\n0 (56%)\n\n\nMissing\n5 518 (23%)\n\n95%\n2\n\nMode\n0\n\n1 (31%)\n\n\nDistinct\n4 (&lt;1%)\n\n75%\n1\n\nRange\n3\n\n2 (10%)\n\n\nDuplicates\n23 694 (99.9%)\n\nMedian\n0\n\niQR\n1\n\n3 (4%)\n\n\nZeros\n10 106 (43%)\n\n25%\n0\n\nstd\n0.8\n\n\n\n\nNegative\n---\n\n5%\n0\n\nkurt\n0.87\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n1.23\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ колонке с количеством парков рядом 23 процента пропусков.\n\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 16: parks_nearest\n\n\n\n\n\nValues\n8 079 (34%)\n\nMax\n3 190\n\nAvg\n490.8\n\n441 &lt;1%\n\n\nMissing\n15 620 (66%)\n\n95%\n968\n\nMode\n441\n\n173 &lt;1%\n\n\nDistinct\n995 (4%)\n\n75%\n612\n\nRange\n3 189\n\n392 &lt;1%\n\n\nDuplicates\n22 703 (96%)\n\nMedian\n455\n\niQR\n324\n\n456 &lt;1%\n\n\nZeros\n---\n\n25%\n288\n\nstd\n342.32\n\n471 &lt;1%\n\n\nNegative\n---\n\n5%\n95.9\n\nkurt\n12.22\n\n2 102 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1\n\nskew\n2.72\n\n541 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ колонке с расстоянием до ближайшего парка 66 процентов пропусков.\n\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 17: ponds_around3000\n\n\n\n\n\nValues\n18 181 (77%)\n\nMax\n3\n\nAvg\n0.77\n\n0 (50%)\n\n\nMissing\n5 518 (23%)\n\n95%\n3\n\nMode\n0\n\n1 (31%)\n\n\nDistinct\n4 (&lt;1%)\n\n75%\n1\n\nRange\n3\n\n2 (10%)\n\n\nDuplicates\n23 694 (99.9%)\n\nMedian\n1\n\niQR\n1\n\n3 (8%)\n\n\nZeros\n9 071 (38%)\n\n25%\n0\n\nstd\n0.94\n\n\n\n\nNegative\n---\n\n5%\n0\n\nkurt\n0.17\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n1.07\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ колонке с количеством прудов 23 процента пропусков, скорее всего это отсутствие парков.\n\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 18: ponds_nearest\n\n\n\n\n\nValues\n9 110 (38%)\n\nMax\n1 344\n\nAvg\n517.98\n\n427 &lt;1%\n\n\nMissing\n14 589 (62%)\n\n95%\n976.55\n\nMode\n427\n\n454 &lt;1%\n\n\nDistinct\n1 096 (5%)\n\n75%\n729\n\nRange\n1 331\n\n153 &lt;1%\n\n\nDuplicates\n22 602 (95%)\n\nMedian\n502\n\niQR\n435\n\n433 &lt;1%\n\n\nZeros\n---\n\n25%\n294\n\nstd\n277.72\n\n474 &lt;1%\n\n\nNegative\n---\n\n5%\n93\n\nkurt\n-0.73\n\n564 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n13\n\nskew\n0.22\n\n303 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ колонке с расстоянием до ближайшего пруда 62 процента пропусков.\n\n  Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 19: days_exposition\n\n\n\n\n\nValues\n20 518 (87%)\n\nMax\n1 580\n\nAvg\n180.89\n\n45.0 (4%)\n\n\nMissing\n3 181 (13%)\n\n95%\n647\n\nMode\n45.0\n\n60 (3%)\n\n\nDistinct\n1 141 (5%)\n\n75%\n232\n\nRange\n1 579\n\n7 (1%)\n\n\nDuplicates\n22 557 (95%)\n\nMedian\n95\n\niQR\n187\n\n30 (1%)\n\n\nZeros\n---\n\n25%\n45.0\n\nstd\n219.73\n\n90.0 &lt;1%\n\n\nNegative\n---\n\n5%\n9\n\nkurt\n6.28\n\n4 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1\n\nskew\n2.31\n\n3.0 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ среднем объявление находится в продаже 180 дней, но из за выбросов оно не совсем точно описывает ситуацию.\nЛучше использовать медиану. Она составляет 95 дней.\nЧаще всего объявления находятся в продаже 45 дней.\nВ колонке с количеством дней экспозиции 13 процентов пропусков.\nМаксимальное значение в 1580 дней похоже на выброс.\n\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 20: is_apartment\n\n\n\n\n\nValues\n2 775 (12%)\n\nFalse (98%)\n\n\nMissing\n20 924 (88%)\n\nTrue (2%)\n\n\nDistinct\n2 (&lt;1%)\n\n\n\n\nDuplicated origin\n23 696 (99.9%)\n\n\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ колонке с признаком является ли квартира апартаментом 88 процентов пропусков. Скорее всего эти квартиры не являются апартаментами.\n\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 21: studio\n\n\n\n\n\nValues\n23 699 (100%)\n\nFalse (99%)\n\n\nMissing\n---\n\nTrue &lt;1%\n\n\nDistinct\n2 (&lt;1%)\n\n\n\n\nDuplicated origin\n23 697 (99.9%)\n\n\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nСтудий меньше 1 процента.\n\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 22: open_plan\n\n\n\n\n\nValues\n23 699 (100%)\n\nFalse (100%)\n\n\nMissing\n---\n\nTrue &lt;1%\n\n\nDistinct\n2 (&lt;1%)\n\n\n\n\nDuplicated origin\n23 697 (99.9%)\n\n\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nПочти все квартиры с открытой планировкой.\n\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 23: locality_name\n\n\n\n\n\nValues\n23 650 (99.8%)\n\nСанкт-Петербург (66%)\n\n\nMissing\n49 (&lt;1%)\n\nпосёлок Мурино (2%)\n\n\nDistinct\n364 (2%)\n\nпосёлок Шушары (2%)\n\n\nDuplicated origin\n23 334 (98%)\n\nВсеволожск (2%)\n\n\nDupl (modify - origin)\n---\n\nПушкин (2%)\n\n\nEmpty\n---\n\nКолпино (1%)\n\n\nRAM (Mb)\n2\n\nпосёлок Парголово (1%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ колонке с названием населенного пункта 49 пропущенных значений (меньше 1 процента)\n\n\n\n1.2.2 Изучение дубликатов\nПосмотрим на дубли во всем датафрейме\n\n\nShow the code\npagri_data_tools.check_duplicated(df)\n\n\n'no duplicates'\n\n\nПолных дубликатов у нас нет.\nПосмотрим сколько у нас дублей в каждой колонке\n\n\nShow the code\nseries_duplicated = pagri_data_tools.find_columns_with_duplicates(df)\n\n\n\n\n\n\n\nTable 24: Duplicates\n\n\n\n\n\ntotal_images\n23661 (99.84%)\n\n\nlast_price\n20721 (87.43%)\n\n\ntotal_area\n21517 (90.79%)\n\n\nfirst_day_exposition\n22208 (93.71%)\n\n\nrooms\n23682 (99.93%)\n\n\nceiling_height\n23515 (99.22%)\n\n\nfloors_total\n23662 (99.84%)\n\n\nliving_area\n21916 (92.48%)\n\n\nfloor\n23666 (99.86%)\n\n\nis_apartment\n23696 (99.99%)\n\n\nstudio\n23697 (99.99%)\n\n\nopen_plan\n23697 (99.99%)\n\n\nkitchen_area\n22727 (95.90%)\n\n\nbalcony\n23692 (99.97%)\n\n\nlocality_name\n23334 (98.46%)\n\n\nairports_nearest\n15423 (65.08%)\n\n\ncity_centers_nearest\n16056 (67.75%)\n\n\nparks_around3000\n23694 (99.98%)\n\n\nparks_nearest\n22703 (95.80%)\n\n\nponds_around3000\n23694 (99.98%)\n\n\nponds_nearest\n22602 (95.37%)\n\n\ndays_exposition\n22557 (95.18%)\n\n\n\n\n\n\n\n\nУ нас нет столбцов, в которых данные должны быть уникальны, поэтому проверять на дубли нечего.\n\n\n1.2.3 Изучение пропусков\nПосмотрим на столбцы, в которых есть пропуски.\n\n\nShow the code\nseries_missed = pagri_data_tools.find_columns_with_missing_values(df)\n\n\n\n\n\n\n\nTable 25: Missings\n\n\n\n\n\nceiling_height\n9195 (38.80%)\n\n\nfloors_total\n86 (0.36%)\n\n\nliving_area\n1903 (8.03%)\n\n\nis_apartment\n20924 (88.29%)\n\n\nkitchen_area\n2278 (9.61%)\n\n\nbalcony\n11519 (48.61%)\n\n\nlocality_name\n49 (0.21%)\n\n\nairports_nearest\n5542 (23.38%)\n\n\ncity_centers_nearest\n5519 (23.29%)\n\n\nparks_around3000\n5518 (23.28%)\n\n\nparks_nearest\n15620 (65.91%)\n\n\nponds_around3000\n5518 (23.28%)\n\n\nponds_nearest\n14589 (61.56%)\n\n\ndays_exposition\n3181 (13.42%)\n\n\n\n\n\n\n\n\nУ нас есть пропуски в площадях. Посмотрим как они распределены.\nПосмотрим есть ли пропуски сразу во всех площадях.\n\n\nShow the code\ndf_na_in_both_columns = pagri_data_tools.check_na_in_both_columns(df, ['total_area', 'living_area', 'kitchen_area'])\ndf_na_in_both_columns.head()\n\n\n0 (0.00%) rows with missings simultaneously in ['total_area', 'living_area', 'kitchen_area']\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n\n\n0 rows × 22 columns\n\n\n\nПропусков одновременно во всех столбцах с площадями нет.\nПосмотрим на строки датафрейма, где пропуски во всех площадях.\n\n\nShow the code\nseries_missed['living_area'][['total_area', 'living_area', 'kitchen_area']].sample(10)\n\n\n\n\n\n\n\n\n\ntotal_area\nliving_area\nkitchen_area\n\n\n\n\n19819\n124.0\nNaN\nNaN\n\n\n3326\n91.0\nNaN\n12.0\n\n\n12740\n45.0\nNaN\nNaN\n\n\n3644\n43.0\nNaN\nNaN\n\n\n4308\n121.0\nNaN\n14.0\n\n\n18948\n91.6\nNaN\nNaN\n\n\n815\n62.3\nNaN\nNaN\n\n\n12752\n42.0\nNaN\nNaN\n\n\n4309\n53.0\nNaN\nNaN\n\n\n7036\n35.6\nNaN\nNaN\n\n\n\n\n\n\n\nУ нас нет пропусков в общей площади. Поэтому мы сможем заменить значения пропусков в площади кухни и жилой площади.\nМожно заметить, что количество пропусков в колонке с количеством парков рядом, количеством прудов рядом совпадает, расстоянием до центра, расстоянием до аэропорта примерно равны. Выдвигаем гипотезу, что пропуски в одних и тех же строках в обоих столбцах.\nПосмотрим сколько пропусков в обоих колонках вместе\n Вернуться к выводам\n\n\nShow the code\ndf_na_in_both_columns = pagri_data_tools.check_na_in_both_columns(df, ['airports_nearest', 'city_centers_nearest', 'parks_around3000', 'ponds_around3000'])\ndf_na_in_both_columns.head()\n\n\n5518 (23.28%) rows with missings simultaneously in ['airports_nearest', 'city_centers_nearest', 'parks_around3000', 'ponds_around3000']\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n5\n10\n2890000.0\n30.40\n2018-09-10\n1\nNaN\n12.0\n14.40\n5\nNaN\n...\n9.10\nNaN\nгородской посёлок Янино-1\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n55.0\n\n\n8\n20\n2900000.0\n33.16\n2018-05-23\n1\nNaN\n27.0\n15.43\n26\nNaN\n...\n8.81\nNaN\nпосёлок Мурино\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n189.0\n\n\n12\n10\n3890000.0\n54.00\n2016-06-30\n2\nNaN\n5.0\n30.00\n5\nNaN\n...\n9.00\n0.0\nСертолово\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n90.0\n\n\n22\n20\n5000000.0\n58.00\n2017-04-24\n2\n2.75\n25.0\n30.00\n15\nNaN\n...\n11.00\n2.0\nдеревня Кудрово\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n60.0\n\n\n30\n12\n2200000.0\n32.80\n2018-02-19\n1\nNaN\n9.0\nNaN\n2\nNaN\n...\nNaN\nNaN\nКоммунар\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n63.0\n\n\n\n\n5 rows × 22 columns\n\n\n\nГипотеза подтвердилась: - Пропуски в одних и тех же строках в колонках с количеством парков рядом, количеством прудов рядом совпадает, расстоянием до центра, расстоянием до аэропорта примерно равны\nПосмотрим как распределены пропуски по категориям в строках, где пропуски одновременно в этих столбцах.\n\n\nShow the code\ngen = pagri_data_tools.analyze_filtered_df_by_category(df, df_na_in_both_columns, 'df with na')\n\n\n\n\nShow the code\nnext(gen)\n\n\n\n\n\n\n\nTable 26: Value in \"df with na\" by category \"is_apartment\"\n\n\n\n\n\nis_apartment\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nFalse\n2725\n621\n22.8%\n11.3%\n11.5%\n-0.2%\n\n\nTrue\n50\n7\n14.0%\n0.1%\n0.2%\n-0.1%\n\n\nnan\n20924\n4890\n23.4%\n88.6%\n88.3%\n0.3%\n\n\n\n\n\n\n\n\n\n\nShow the code\nnext(gen)\n\n\n\n\n\n\n\nTable 27: Value in \"df with na\" by category \"studio\"\n\n\n\n\n\nstudio\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nFalse\n23550\n5461\n23.2%\n99.0%\n99.4%\n-0.4%\n\n\nTrue\n149\n57\n38.3%\n1.0%\n0.6%\n0.4%\n\n\n\n\n\n\n\n\n\n\nShow the code\nnext(gen)\n\n\n\n\n\n\n\nTable 28: Value in \"df with na\" by category \"open_plan\"\n\n\n\n\n\nopen_plan\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nFalse\n23632\n5488\n23.2%\n99.5%\n99.7%\n-0.3%\n\n\nTrue\n67\n30\n44.8%\n0.5%\n0.3%\n0.3%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nЯвных зависимостей от категорий не обнаружено\n\nИзучим пропуски по категориям\n Вернуться к выводам\n\n\nShow the code\npagri_data_tools.analyze_anomaly_by_category(df, series_missed, \"by_category\", \"floors_total\", \"is_apartment\")\n\n\n\n\n\n\n\nTable 29: Share in \"floors_total\" by category \"is_apartment\"\n\n\n\n\n\nis_apartment\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nFalse\n2725\n0\n0.0%\n0.0%\n11.5%\n-11.5%\n\n\nTrue\n50\n0\n0.0%\n0.0%\n0.2%\n-0.2%\n\n\nnan\n20924\n86\n0.4%\n100.0%\n88.3%\n11.7%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nПропуски в количестве этажей совпадают с пропусками в признаке является ли квартира апартаментом.\n\n Вернуться к выводам\n\n\nShow the code\npagri_data_tools.analyze_anomaly_by_category(df, series_missed, \"by_category\", \"floors_total\", \"studio\")\n\n\n\n\n\n\n\nTable 30: Share in \"floors_total\" by category \"studio\"\n\n\n\n\n\nstudio\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nFalse\n23550\n83\n0.4%\n96.5%\n99.4%\n-2.9%\n\n\nTrue\n149\n3\n2.0%\n3.5%\n0.6%\n2.9%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nВ количестве этаже пропуски зависят от признака является ли квартира студией.\n\nПочти все пропуски в квартирах, которые не являются студиями, даже учитывая общее количество пропорций.\n\n\n\nShow the code\npagri_data_tools.analyze_anomaly_by_category(df, series_missed, \"by_category\", \"kitchen_area\", \"studio\")\n\n\n\n\n\n\n\nTable 31: Share in \"kitchen_area\" by category \"studio\"\n\n\n\n\n\nstudio\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nFalse\n23550\n2129\n9.0%\n93.5%\n99.4%\n-5.9%\n\n\nTrue\n149\n149\n100.0%\n6.5%\n0.6%\n5.9%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nВ студиях в поле площадь кухни одни пропуски.\n\n\n\nShow the code\npagri_data_tools.analyze_anomaly_by_category(df, series_missed, \"by_category\", \"kitchen_area\", \"open_plan\")\n\n\n\n\n\n\n\nTable 32: Share in \"kitchen_area\" by category \"open_plan\"\n\n\n\n\n\nopen_plan\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nFalse\n23632\n2211\n9.4%\n97.1%\n99.7%\n-2.7%\n\n\nTrue\n67\n67\n100.0%\n2.9%\n0.3%\n2.7%\n\n\n\n\n\n\n\n\nНаблюдения:\n\nВ студиях в поле площадь кухни одни пропуски.\n\n\n\n1.2.4 Изучение выбросов\nСначала изучим потенциальные выбросы, которые мы выявили при изучении колонок.\nИзучим выброс с ценой 12190.0\n\n\nShow the code\ndf[df.last_price == 12190]\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n8793\n7\n12190.0\n109.0\n2019-03-20\n2\n2.75\n25.0\n32.0\n25\nNaN\n...\n40.5\nNaN\nСанкт-Петербург\n36421.0\n9176.0\n1.0\n805.0\n0.0\nNaN\n8.0\n\n\n\n\n1 rows × 22 columns\n\n\n\nНаблюдения:\n- Ничего особенно не обнаружено.\n- Скорее всего ошиблись не поставили нули.\nПосмотрим на выбросы с площадью квартиры.\n\n\nShow the code\ndf[df.total_area &gt; 500]\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n3117\n19\n140000000.0\n631.0\n2019-03-30\n7\nNaN\n5.0\nNaN\n5\nNaN\n...\n60.0\nNaN\nСанкт-Петербург\n25707.0\n4972.0\n0.0\nNaN\n2.0\n210.0\nNaN\n\n\n4237\n1\n50000000.0\n517.0\n2017-10-14\n7\nNaN\n4.0\n332.0\n3\nNaN\n...\n22.0\nNaN\nСанкт-Петербург\n22835.0\n1847.0\n2.0\n477.0\n2.0\n540.0\nNaN\n\n\n5358\n20\n65000000.0\n590.0\n2019-02-14\n15\n3.50\n6.0\n409.0\n3\nNaN\n...\n100.0\nNaN\nСанкт-Петербург\n24447.0\n4666.0\n1.0\n767.0\n0.0\nNaN\n14.0\n\n\n8018\n20\n84000000.0\n507.0\n2015-12-17\n5\n4.45\n7.0\n301.5\n7\nTrue\n...\n45.5\n1.0\nСанкт-Петербург\nNaN\n5735.0\n2.0\n110.0\n0.0\nNaN\n1078.0\n\n\n12859\n20\n140000000.0\n631.2\n2019-04-09\n7\n3.90\n4.0\n322.3\n4\nNaN\n...\n19.5\n1.0\nСанкт-Петербург\n25707.0\n4972.0\n0.0\nNaN\n2.0\n210.0\nNaN\n\n\n15651\n20\n300000000.0\n618.0\n2017-12-18\n7\n3.40\n7.0\n258.0\n5\nNaN\n...\n70.0\nNaN\nСанкт-Петербург\n32440.0\n5297.0\n0.0\nNaN\n2.0\n198.0\n111.0\n\n\n19540\n8\n420000000.0\n900.0\n2017-12-06\n12\n2.80\n25.0\n409.7\n25\nNaN\n...\n112.0\nNaN\nСанкт-Петербург\n30706.0\n7877.0\n0.0\nNaN\n2.0\n318.0\n106.0\n\n\n\n\n7 rows × 22 columns\n\n\n\nНаблюдения:\n- Не похоже на выбросы. Цена большая, количество комнат большое. Скорее всего просто большие дорогие квартиры.\n\n\nShow the code\ndf[df.total_area &lt; 15]\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n17961\n3\n1400000.0\n13.0\n2017-12-03\n1\n2.60\n9.0\nNaN\n1\nNaN\n...\nNaN\nNaN\nСанкт-Петербург\n14350.0\n15945.0\n0.0\nNaN\n1.0\n185.0\n410.0\n\n\n19546\n3\n1850000.0\n13.0\n2019-03-11\n1\n3.40\n5.0\nNaN\n2\nFalse\n...\nNaN\nNaN\nСанкт-Петербург\n24915.0\n5483.0\n1.0\n644.0\n0.0\nNaN\n24.0\n\n\n19558\n2\n1686000.0\n13.2\n2018-12-17\n1\nNaN\n5.0\nNaN\n1\nNaN\n...\nNaN\nNaN\nСанкт-Петербург\n19891.0\n4165.0\n1.0\n361.0\n1.0\n155.0\n19.0\n\n\n19642\n5\n1190000.0\n14.0\n2018-07-29\n1\nNaN\n5.0\n11.0\n1\nNaN\n...\n2.0\nNaN\nСанкт-Петербург\n9898.0\n11122.0\n0.0\nNaN\n0.0\nNaN\n4.0\n\n\n19807\n0\n3800000.0\n13.0\n2018-07-04\n1\nNaN\n5.0\n10.0\n3\nNaN\n...\nNaN\nNaN\nСанкт-Петербург\n21302.0\n1242.0\n1.0\n592.0\n3.0\n27.0\n9.0\n\n\n19904\n4\n2400000.0\n12.0\n2017-07-19\n1\n2.55\n5.0\n10.0\n2\nNaN\n...\nNaN\nNaN\nСанкт-Петербург\n21314.0\n964.0\n1.0\n886.0\n2.0\n45.0\n200.0\n\n\n\n\n6 rows × 22 columns\n\n\n\nНаблюдения:\n- Не похоже на выбросы. Скорее всего это мелко нарезанные студии. Тем более этаж низкий.\nИзучим выброс в высоте потолка.\n\n\nShow the code\ndf[df.ceiling_height &gt; 10].ceiling_height.value_counts()\n\n\nceiling_height\n27.0     8\n25.0     7\n32.0     2\n24.0     1\n26.0     1\n14.0     1\n20.0     1\n22.6     1\n27.5     1\n10.3     1\n100.0    1\nName: count, dtype: int64\n\n\n\n\nShow the code\ndf[df.ceiling_height &gt; 30]\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n3148\n14\n2900000.0\n75.0\n2018-11-12\n3\n32.0\n3.0\n53.0\n2\nNaN\n...\n8.0\nNaN\nВолхов\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n22336\n19\n9999000.0\n92.4\n2019-04-05\n2\n32.0\n6.0\n55.5\n5\nFalse\n...\n16.5\n4.0\nСанкт-Петербург\n18838.0\n3506.0\n0.0\nNaN\n3.0\n511.0\nNaN\n\n\n22869\n0\n15000000.0\n25.0\n2018-07-25\n1\n100.0\n5.0\n14.0\n5\nTrue\n...\n11.0\n5.0\nСанкт-Петербург\n34963.0\n8283.0\n1.0\n223.0\n3.0\n30.0\n19.0\n\n\n\n\n3 rows × 22 columns\n\n\n\nНаблюдения:\n- Значения от 20 до 32 скорее всего поставили не там запятую.\n- А вот значения 10 и 100 странные.\nИзучим выбросы в количестве этажей\n\n\nShow the code\ndf[df.floors_total &gt; 35]\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n397\n15\n5990000.0\n54.0\n2018-03-22\n2\nNaN\n36.0\n21.4\n28\nNaN\n...\n18.70\n1.0\nСанкт-Петербург\n18732.0\n20444.0\n0.0\nNaN\n3.0\n80.0\n11.0\n\n\n2253\n12\n3800000.0\n45.5\n2018-06-28\n2\n2.88\n60.0\n27.4\n4\nNaN\n...\n7.40\nNaN\nКронштадт\n67763.0\n49488.0\n2.0\n342.0\n3.0\n614.0\n166.0\n\n\n5807\n17\n8150000.0\n80.0\n2019-01-09\n2\n27.00\n36.0\n41.0\n13\nNaN\n...\n12.00\n5.0\nСанкт-Петербург\n18732.0\n20444.0\n0.0\nNaN\n3.0\n80.0\n38.0\n\n\n11079\n16\n9200000.0\n75.0\n2019-02-22\n2\n2.70\n36.0\n40.0\n29\nNaN\n...\n12.00\n2.0\nСанкт-Петербург\n18732.0\n20444.0\n0.0\nNaN\n3.0\n80.0\nNaN\n\n\n16731\n9\n3978000.0\n40.0\n2018-09-24\n1\n2.65\n52.0\n10.5\n18\nNaN\n...\n14.00\nNaN\nСанкт-Петербург\n20728.0\n12978.0\n1.0\n793.0\n0.0\nNaN\n45.0\n\n\n16934\n5\n4100000.0\n40.0\n2017-10-17\n1\n1.75\n37.0\n17.4\n5\nNaN\n...\n8.34\nNaN\nСанкт-Петербург\n18732.0\n20444.0\n0.0\nNaN\n3.0\n80.0\n71.0\n\n\n\n\n6 rows × 22 columns\n\n\n\nНаблюдения:\n- Так как в Санкт-Петербург есть здания такой высоты, то нет оснований считать это выбросами.\n\n\n1.2.5 Изучение отрицательных значений\nИзучаем отрицательные значения\n\n\nShow the code\nseries_negative = pagri_data_tools.find_columns_with_negative_values(df)\n\n\n\n\n  Negative\n  \n  \n  \n  \n\n\n\nУ нас нет отрицательных значений.\n\n\n1.2.6 Изучение нулевых значений\nИзучаем нулевые значения\n\n\nShow the code\nseries_zeros = pagri_data_tools.find_columns_with_zeros_values(df)\n\n\n\n\n\n\n\nTable 33: Zeros\n\n\n\n\n\ntotal_images\n1059 (4.47%)\n\n\nrooms\n197 (0.83%)\n\n\nbalcony\n3758 (15.86%)\n\n\nairports_nearest\n1 (0.00%)\n\n\nparks_around3000\n10106 (42.64%)\n\n\nponds_around3000\n9071 (38.28%)\n\n\n\n\n\n\n\n\nВсе кроме количества комнат и расстояния до ближайшего аэропорта может быть нулями, поэтому удалим их из текущего изучения.\n\n\nShow the code\nseries_zeros = series_zeros.loc[['rooms']]\n\n\nПосмотрим отдельно на нулевое значение в расстоянии до аэропорта.\n\n\nShow the code\ndf[df.airports_nearest == 0]\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n21085\n0\n7000000.0\n34.7\n2018-09-23\n1\n2.7\n9.0\n19.8\n3\nNaN\n...\n6.0\n2.0\nСанкт-Петербург\n0.0\n22801.0\n0.0\nNaN\n0.0\nNaN\n60.0\n\n\n\n\n1 rows × 22 columns\n\n\n\n\n\nShow the code\npagri_data_tools.analyze_anomaly_by_category(df, series_zeros, \"value_counts\", \"rooms\")\n\n\nValue counts in rooms (0.83%)\n\n\n\n\n\n\n\nTable 34: rooms\n\n\n\n\n\n \ncount\n\n\nrooms\n \n\n\n\n\n0\n197\n\n\n\n\n\n\n\n\nВыдвинем гипотезу, что 0 комнат у студий и однокомнатных.\nПроверим гипотезу по площади.\nПредположим, что площадь студий и однокомнатных квартир составляет не более 40 м2.\nПосмотрим на выборку из датафрейма\n\n\nShow the code\nseries_zeros['rooms'][['last_price', 'total_area', 'living_area', 'kitchen_area', 'studio', 'open_plan']].query('total_area &gt; 40')\n\n\n\n\n\n\n\n\n\nlast_price\ntotal_area\nliving_area\nkitchen_area\nstudio\nopen_plan\n\n\n\n\n3458\n7400000.0\n73.60\n50.0\nNaN\nTrue\nFalse\n\n\n7237\n2999000.0\n42.63\n25.7\nNaN\nFalse\nTrue\n\n\n10008\n5050000.0\n44.20\n32.2\nNaN\nTrue\nFalse\n\n\n13613\n8100000.0\n58.40\n33.0\nNaN\nTrue\nFalse\n\n\n15319\n5970000.0\n43.30\n28.2\nNaN\nTrue\nFalse\n\n\n16130\n5000000.0\n42.10\n30.0\nNaN\nTrue\nFalse\n\n\n19392\n71000000.0\n371.00\nNaN\nNaN\nFalse\nTrue\n\n\n20082\n16300000.0\n98.40\n60.5\nNaN\nTrue\nFalse\n\n\n21227\n8200000.0\n71.00\n68.0\nNaN\nTrue\nFalse\n\n\n\n\n\n\n\nНаблюдения:\n\nВидим, что почти все квартиры с 0 комнат имеют площадь до 40 кв.\n2 квартиры имеют открытую планировку\n\nМожно будет заменить 0 на 1.\n\n\n\nShow the code\npagri_data_tools.analyze_anomaly_by_category(df, series_zeros, \"by_category\", \"rooms\", 'studio')\n\n\n\n\n\n\n\nTable 35: Share in \"rooms\" by category \"studio\"\n\n\n\n\n\nstudio\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nFalse\n23550\n59\n0.3%\n29.9%\n99.4%\n-69.4%\n\n\nTrue\n149\n138\n92.6%\n70.1%\n0.6%\n69.4%\n\n\n\n\n\n\n\n\nНаблюдения:\n- Большая часть квартир с нулем комнат являются студиями.\n\n\n\n1.3 Промежуточный вывод\n\n8 процентов дней пропущено\nМинимальное значение цены 12 190 и максимальное значение 763 млн выглядят подозрительно.\nМаксимальная площадь в 900 квадратов.\nВ высоте потолков пропуски (39 процентов)\nВ высоте потолков много выбросов. Есть значение 100.\nВ количестве этажей есть пропуски (меньше 1 процента)\nБольше всего пятиэтажек (25 процентов)\nВ жилой площади 8 процентов пропусков.\nВ площади кухни 10 процентов пропусков.\n\nВ числе балконов 49 процентов пропусков. Скорее всего пропуски это отсутствие балкона.\n\nТреть квартир без балконов, также по трети квартир с 1 и 2 балконами.\nВ расстоянии до ближайшего аэропорта 23 процента пропусков.\nВ расстоянии до центр города 23 процента пропусков.\nВ колонке с количеством парков рядом 23 процента пропусков.\n\nВ колонке с расстоянием до ближайшего парка 66 процентов пропусков.\n\nВ колонке с количеством прудов 23 процента пропусков, скорее всего это отсутствие парков.\n\nВ колонке с расстоянием до ближайшего пруда 62 процента пропусков.\nВ среднем объявление находится в продаже 180 дней, но из за выбросов оно не совсем точно описывает ситуацию.\nВ колонке с количеством дней экспозиции 13 процентов пропусков.\nВ колонке с признаком является ли квартира апартаментом 88 процентов пропусков. Скорее всего эти квартиры не являются апартаментами.\n\nВ колонке с названием населенного пункта 49 пропущенных значений (меньше 1 процента)\nПропуски в одних и тех же строках в колонках с количеством парков рядом, количеством прудов рядом совпадает, расстоянием до центра, расстоянием до аэропорта примерно равны\nПропуски в количестве этажей совпадают с пропусками в признаке является ли квартира апартаментом.\nВ количестве этаже пропуски зависят от признака является ли квартира студией.\n\nПочти все пропуски в квартирах, которые не являются студиями, даже учитывая общее количество пропорций.\nВ студиях в поле площадь кухни одни пропуски."
  },
  {
    "objectID": "projects/housing-ads-investigation/housing_ads_investigation.html#предобработка-данных",
    "href": "projects/housing-ads-investigation/housing_ads_investigation.html#предобработка-данных",
    "title": "Исследование объявлений о продаже квартир",
    "section": "2. Предобработка данных",
    "text": "2. Предобработка данных\n\n2.1 Выбор нужных столбцов для дальнейшей работы\nСохраним исходный датафрейм в переменную df_origin, чтобы была возможность вернуться к нему\n\n\nShow the code\ndf_origin = df.copy()\n\n\n\n\n2.2 Обработка выбросов\nПосле изучения данных отрицательные значения не обнаружены, но есть колонки с нулевыми значениями, где их быть не должно.\nПосмотрим где у нас нулевые значения\n\n\nShow the code\npagri_data_tools.check_zeros_value_in_df(df)\n\n\n\n\n\n\n\n\n\nzeros\n\n\n\n\ntotal_images\n1059 (4.5%)\n\n\nrooms\n197 (0.8%)\n\n\nbalcony\n3758 (15.9%)\n\n\nairports_nearest\n1 (0.0%)\n\n\nparks_around3000\n10106 (42.6%)\n\n\nponds_around3000\n9071 (38.3%)\n\n\n\n\n\n\n\nНам нужно обработать нули в количестве комнат и в расстоянии до аэропорта.\n\n\nShow the code\ndf[df.airports_nearest == 0]\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n21085\n0\n7000000.0\n34.7\n2018-09-23\n1\n2.7\n9.0\n19.8\n3\nNaN\n...\n6.0\n2.0\nСанкт-Петербург\n0.0\n22801.0\n0.0\nNaN\n0.0\nNaN\n60.0\n\n\n\n\n1 rows × 22 columns\n\n\n\nТак как это всего одна запись и точно восстановить расстояние невозможно, то лучше удалить ее.\n\n\nShow the code\ndf.shape[0]\n\n\n23699\n\n\n\n\nShow the code\ndf = df[df.airports_nearest != 0]\n\n\n\n\nShow the code\ndf.shape[0]\n\n\n23698\n\n\nОбработаем нулевые значения в количестве комнат.\nТак как мы выяснили, что 0 комнат указано у студий и в открытой планировке, либо у квартир с площадью до 40 кв.,\nто заменим 0 на 1.\n\n\nShow the code\ntt = df.copy()\n\n\n\n\nShow the code\ntt.rooms = tt.rooms.apply(lambda x: 1 if x == 0 else x)\n\n\n\n\nShow the code\ndf.loc[:, 'rooms'] = df.rooms.apply(lambda x: 1 if x == 0 else x)\n\n\nУбедимся, что у нас не осталось нулевых и отрицательных значений где их быть не должно.\n\n\nShow the code\npagri_data_tools.check_negative_value_in_df(df)\n\n\n\n\n\n\n\n\n\nnegative\n\n\n\n\n\n\n\n\n\n\n\nShow the code\npagri_data_tools.check_zeros_value_in_df(df)\n\n\n\n\n\n\n\n\n\nzeros\n\n\n\n\ntotal_images\n1058 (4.5%)\n\n\nbalcony\n3758 (15.9%)\n\n\nparks_around3000\n10105 (42.6%)\n\n\nponds_around3000\n9070 (38.3%)\n\n\n\n\n\n\n\nУ нас в цене есть одна запись со значением 12190. Скорее всего не поставили нули, но сложно определить сколько именно нулей не поставили.\nТак как это всего 1 запись, то удалим ее.\n\n\nShow the code\ndf.shape[0]\n\n\n23698\n\n\n\n\nShow the code\ndf = df[df.last_price != 12190]\n\n\n\n\nShow the code\ndf.shape[0]\n\n\n23697\n\n\nОбработаем выбросы в высоте потолков.\nБудем считать, что высота потолков больше 5 метров является маловероятным.\nПосмотрим сколько у нас записей с высотой потолка больше 5 метров.\n\n\nShow the code\npagri_data_tools.count_share(df.ceiling_height &gt; 5)\n\n\n'36 (0.2%)'\n\n\nТак как их очень мало и мы не можем обработать эти выбросы, то удалим их.\n\n\nShow the code\ndf.shape[0]\n\n\n23697\n\n\n\n\nShow the code\ndf[df.ceiling_height &gt; 5].shape[0]\n\n\n36\n\n\n\n\nShow the code\ndf = df[~(df.ceiling_height &gt; 5)]\n\n\n\n\nShow the code\ndf.shape[0]\n\n\n23661\n\n\n\n\n2.3 Обработка пропусков\nПосмотрим где у нас пропуски.\n\n\nShow the code\npagri_data_tools.check_missed_value_in_df(df)\n\n\n\n\n\n\n\n\n\nmissed\n\n\n\n\nceiling_height\n9195 (38.9%)\n\n\nfloors_total\n86 (0.4%)\n\n\nliving_area\n1901 (8.0%)\n\n\nis_apartment\n20899 (88.3%)\n\n\nkitchen_area\n2269 (9.6%)\n\n\nbalcony\n11507 (48.6%)\n\n\nlocality_name\n49 (0.2%)\n\n\nairports_nearest\n5532 (23.4%)\n\n\ncity_centers_nearest\n5509 (23.3%)\n\n\nparks_around3000\n5508 (23.3%)\n\n\nparks_nearest\n15598 (65.9%)\n\n\nponds_around3000\n5508 (23.3%)\n\n\nponds_nearest\n14566 (61.6%)\n\n\ndays_exposition\n3173 (13.4%)\n\n\n\n\n\n\n\nМы выяснили, что у нас пропуски в столбцах ‘airports_nearest’, ‘center’, ‘around 3000’, ‘around 3000’\nв одних и тех же строчках.\nТак как количество пропусков большое, то заменять их нельзя.\nПоэтому оставим их как есть.\nПропуски в высоте потолков мы обрабатывать не можем, так как их сильно много.\nПропуски в количестве этажей удалим, так как их мало.\n\n\nShow the code\ndf.shape[0]\n\n\n23661\n\n\n\n\nShow the code\ndf = df.dropna(subset=['floors_total'])\n\n\n\n\nShow the code\ndf.shape[0]\n\n\n23575\n\n\nПропуски в жилой площади и в площади кухни обработаем с помощью коэффициентов отношения площадей.\nПри этом рассчитывать будем с учетом количества комнат, чтобы было точнее.\n\n\nShow the code\ndf[['total_area', 'living_area', 'rooms', 'kitchen_area', 'balcony']].sample(5)\n\n\n\n\n\n\n\n\n\ntotal_area\nliving_area\nrooms\nkitchen_area\nbalcony\n\n\n\n\n12965\n59.5\n31.71\n2\n10.2\nNaN\n\n\n12325\n66.0\n42.40\n3\n10.0\n1.0\n\n\n11638\n65.5\nNaN\n3\nNaN\nNaN\n\n\n5362\n45.0\n28.00\n2\n7.2\n1.0\n\n\n9673\n44.0\nNaN\n2\nNaN\nNaN\n\n\n\n\n\n\n\n\n\nShow the code\ndf.shape[0]\n\n\n23575\n\n\n\n\nShow the code\nkitchen_ratio = df.groupby('rooms')['kitchen_area'].transform(\n    lambda x: x.median() / df.loc[x.index, 'total_area'].median() \n    if len(x) &gt;= 30 \n    else df['kitchen_area'].median() / df['total_area'].median()\n)\n\nliving_ratio = df.groupby('rooms')['living_area'].transform(\n    lambda x: x.median() / df.loc[x.index, 'total_area'].median()\n    if len(x) &gt;= 30 \n    else df['living_area'].median() / df['total_area'].median()\n)\n\ndf['kitchen_area'] = df['kitchen_area'].fillna(df['total_area'] * kitchen_ratio)\ndf['living_area'] = df['living_area'].fillna(df['total_area'] * living_ratio)\n\n\n\n\nShow the code\ndf.shape[0]\n\n\n23575\n\n\nПризнак является ли квартира апартаментом имеет много пропусков.\nОпределить является ли квартира апартаментом мы не можем, поэтому заменим на значение “не указано”.\n\n\nShow the code\ndf['is_apartment'] = df.is_apartment.astype(str).map({'True': 'да', 'False': 'нет'}).fillna(\"не указано\").astype('category')\n\n\nПропуски в названии населенного пункта мы заменить не можем, и их очень мало, поэтому удалим их.\n\n\nShow the code\ndf = df.dropna(subset=['locality_name'])\n\n\n\n\nShow the code\ndf.shape[0] \n\n\n23527\n\n\n\n\nShow the code\npagri_data_tools.check_missed_value_in_df(df)\n\n\n\n\n\n\n\n\n\nmissed\n\n\n\n\nceiling_height\n9084 (38.6%)\n\n\nbalcony\n11463 (48.7%)\n\n\nairports_nearest\n5514 (23.4%)\n\n\ncity_centers_nearest\n5491 (23.3%)\n\n\nparks_around3000\n5490 (23.3%)\n\n\nparks_nearest\n15513 (65.9%)\n\n\nponds_around3000\n5490 (23.3%)\n\n\nponds_nearest\n14506 (61.7%)\n\n\ndays_exposition\n3163 (13.4%)\n\n\n\n\n\n\n\nОстальные пропуски оставим как есть, чтобы не исказить данные.\n\n\n2.4 Приведение данных к удобной форме\nИзменим значения в столбцах на более удобные\n\n\nShow the code\ndf.studio = df.studio.astype(str).map({'True': 'да', 'False': 'нет'}).astype('category')\n\n\n\n\nShow the code\ndf.open_plan = df.open_plan.astype(str).map({'True': 'да', 'False': 'нет'}).astype('category')\n\n\nИзменим типы данных на более подходящие.\nУбедимся, что у нас нет дробных чисел в цене.\n\n\nShow the code\n(df.last_price != df.last_price.astype(int)).sum()\n\n\nnp.int64(0)\n\n\nПриведем цену к целому типу.\n\n\nShow the code\ndf.last_price = df.last_price.astype(int)\n\n\n\n\n2.5 Промежуточный вывод\n\nМы выяснили, что 0 комнат указано у студий, либо в открытой планировке, либо у квартир с площадью до 40 кв.,\nпоэтому нули в количестве комнат заменили на 1.\nВ цене была одна запись со значением 12190. Скорее всего не поставили нули, но сложно определить сколько именно нулей не поставили.\nТак как это всего 1 запись, то удалили ее.\nУдалили 36 записей (0.2%) с высотой потолка больше 5 метров. Так как таких записей мало, а замена их может исказить анализ.\n\nВ высоте потолка пропусков слишком много, поэтому их не стали трогать.\n\nВ количестве этажей пропуски удалили, так как определить реальный этаж невозможно, а пропусков мало.\n\nПропуски в жилой площади и в площади кухни обработали с помощью коэффициентов отношения площадей.\nПри этом расчеты провели с учетом количества комнат, чтобы было точнее.\n\nПризнак является ли квартира апартаментом имеет много пропусков.\nОпределить является ли квартира апартаментом мы не можем, поэтому заменили на значение “не указано”.\nУдалили пропуски в названии населенных пунктов, так как их мало."
  },
  {
    "objectID": "projects/housing-ads-investigation/housing_ads_investigation.html#расчет-метрик",
    "href": "projects/housing-ads-investigation/housing_ads_investigation.html#расчет-метрик",
    "title": "Исследование надёжности заёмщиков",
    "section": "Расчет метрик",
    "text": "Расчет метрик\n\nМетрики продукта\n\nтут будут расчеты продуктовых метрик\n\n\n\nЭкономические метрики\n\nтут будут расчеты экономических метрик\n\n\nЕсли расчет метрик является важным аспектом вашего исследования и требует подробного описания, то создание отдельной главы будет лучшим решением.\nЕсли в этом разделе будет немного расчетов, то можно сделать расчеты метрик разделом предобработки данных\n\n\nРасчитываем разные метрики на основе имеющихся данных и тех, которыми смогли обогатить данные\n\n\nВажно следить за количеством недель в году, если мы создаем столбец месяца.\nПроверять чтобы у нас не появлялась неделя дополнительная, из за того, что мы захватили предыдущий год\n\n\n\nКогортный анализ\n\nНе забывать про когортный анализ. Если у нас есть параметр, по которому мы можем наши данные разбить на когорты, то\nнужно разложить на когорты и посмотреть динамику по когортам.\nКогорты это например, пользователи пришедшие в одни день или месяц.\nЕсли мы объеденим пользователей в когорты и посмотрим динамику какого-то параметра по месяцам например, то увидим как изменяется.\nТут также нужно помнить, что если значение например за 3 месяц больше значения за 4 месяц, то это ничего не значит само по себе.\nТак как мы имеем дело с выборкой, то нам нужно проверить статистически значимая это разница.\nТут нам понядобятся стат тесты.\n\n\n\nПромежуточный вывод"
  },
  {
    "objectID": "projects/housing-ads-investigation/housing_ads_investigation.html#анализ-корреляций-между-переменными",
    "href": "projects/housing-ads-investigation/housing_ads_investigation.html#анализ-корреляций-между-переменными",
    "title": "Исследование надёжности заёмщиков",
    "section": "Анализ корреляций между переменными",
    "text": "Анализ корреляций между переменными\nВАЖНО\nпроверить, что все категориальные переменные по прежнему имеют категориальный тип, чтобы при анализе они не поетрялись\n\n\nShow the code\ndf.dtypes\n\n\n\nИсследование корреляционных связей\n\nТоп n значений одного столбца по значениям в другом Сделать функцию, чтобы в столбцах, где бльше 20 уникльных значений посмотреть топ n значений по другой колонке.\nНапример, топ 10 покупателей по сумме покупок и прочее.\nИдея в том, что если в столбце до 20 уникальных значений, то мы проанализируем комбинации с другими стобцами на графиках.\nА вот если у нас столбец не числовой и в нем больше 20 уникальных значений, то на графике мы не сможем понять топ n.\n\n\nИзучаем топ n значений в категориальных столбцах датафрейма, где значений больше порогового, по значению в столбце value_column.\nТут можно делать разные топы, использовать разные функции.\nЗадача изучить то, что мы не сможем изучить на графиках из-за болшого количества занчений в категориальной переменной,\nпоэтому мы берем топ n значений.\n\n\n\nShow the code\ngen = pagri_data_tools.top_n_values_gen()\nnext(gen)\n\n\n\nЧтобы сравнить метрики между собой мы можем - использовать корреляционный анализ (Пирсена, Спирмена, Кенделла)\n\n\nheatmap_corr(df)\n\n\n\nShow the code\npagri_data_tools.pagri_data_tools.heatmap_corr(df)\n\n\n\nИспользование регрессии и случайного леса для определения влияния переменных\n\n\nКоэффициенты регрессии позволяют оценить влияние каждой переменной на целевую переменную, учитывая влияние других переменных,\nв то время как важные компоненты в случайном лесе позволяют оценить важность каждой переменной для предсказания целевой переменной.\n\n\nИспользуем регрессиию\n\n\nЧтобы построить регрессию и посмотреть стат значимость и коэффициенты удобно использовать модуль statsmodel\n\n\nVIF означает Variance Inflation Factor (Фактор инфляции дисперсии). Это статистическая метрика,\nиспользуемая для обнаружения мультиколлинеарности (сильной корреляции) между предикторами (фичами) в линейной регрессии.\n\n\nОбычно, VIF интерпретируется следующим образом:\n\nVIF &lt; 5: слабая мультиколлинеарность\n5 ≤ VIF &lt; 10: умеренная мультиколлинеарность\nVIF ≥ 10: сильная мультиколлинеарность\n\n\n\nСмотрим R2 (коэффициент детерминации) - использовать коэффициенты у регресси Мы строим регрессию и смотрим, у каких метрик больше коэффициенты. Таким образом мы поймем какие метрики сильнее зависят с целевой.\nВажно, чтобы независимые переменные некоррелировали по отдельности и вместе (мультиколлиниарность).\nПо отдельности смотрим матрицу корреляции.\nЧтобы определить коррелириуют ли вместе, береме независимые переменные,\nи перебираем их выбирая одну из них целевой и смотрим R2.\nЕсли R2 большой, то значит эта метрика (которая целевая на этом шаге) хорошо описывается другими и ее можно выбросить. Также не забываем поправки на гетероскедостичность (HC0, HC1, HC2, HC3) в статпакетах.\nНам нужно ответить на следующие вопросы - Влияет ли метрика на целевую? Оцениваем коэффициенты в уравнении регресси у каждой метрики.\n- Как влияет метрика на целевую? Смотрим R2 (коэффициент детерминации). И определяем какая часть целевой переменной определяется независимыми метриками.\n- Коэффициенты при метриках в уравнении статистически значим? При какаом уровне значимости? Смотрим в стат пакете p value для каждого коэффициента, что нам говорит значим ли этот коэффициент.\nТо есть мы не просто смотрим его абсолютное значение, а учитываем p value.\n- Дайте содержательную интерпретацию коэффицентам? При увеличении метрики k на 1, целевая метрика увеличивается на \\(b_{k} * 1\\) То есть нужно перевести коэффициенты в реальное сравнение, насколько увелчисться целевая метрика при изменении определенной метрики на 1 - Найдите 95 процентный доверительный интервал. В стат пакете смотрим значение и оно говорит, что если мы многократно повторим ноши вычисления с новыми данными, то 95 процентов наших\nполученных коэффицентов будут лежать в этом диапазоне.\n\n\nСтроим модель и изучаем результат\nlinear_regression_with_vif\n\n\n\nShow the code\npagri_data_tools.linear_regression_with_vif()\n\n\n\nИспльзовать коэффициенты у классификацию\nСтроим случайный лес какие метрики сильнее всего влияют на решения модели.\nplot_feature_importances_classifier\nplot_feature_importances_regression\n\n\nТут нужно подумать как использовать категориальные переменные тоже\nНужно их перевести в one hot encoding или подобное, чтобы также проверить силу их влияния на целевую перменную\n\n\n\nShow the code\ntitles_for_axis = dict(\n    debt = 'долга'\n    , children = 'Кол-во детей'\n    , age = 'Возраст'\n    , total_income = 'Доход'\n)\n\npagri_data_tools.plot_feature_importances_classifier(df, target='debt', titles_for_axis=titles_for_axis)\npagri_data_tools.plot_feature_importances_regression()\n\n\n\nНа основе полученных данных формулируем гипотезы, которые будем проверять в блоке проверки гипотез\n\n\nиспользуем быблиотеку shap, чтобы определить метрики, которые лучше других помогают предсказывать целевую перемменную\n\n\n\nПромежуточный вывод"
  },
  {
    "objectID": "projects/housing-ads-investigation/housing_ads_investigation.html#анализ-взаимосвязей-переменных-на-графиках",
    "href": "projects/housing-ads-investigation/housing_ads_investigation.html#анализ-взаимосвязей-переменных-на-графиках",
    "title": "Исследование надёжности заёмщиков",
    "section": "Анализ взаимосвязей переменных на графиках",
    "text": "Анализ взаимосвязей переменных на графиках\nЕсли у нас много значений в переменной, то мы агрегируем данные и можем построить бары.\nНо если мы агрегируем данные по переменной, в которой много значений и нам это нужно.\nТо мы не сможем построить бары, и тогда мы строим гистограмму. То есть мы берем, например, для каждой заправки считаем среднее время заправки и так как у нас много заправок,\nно мы хотим визуализировать среднее время по ним, и не агрегировать по другому параметру, то мы можем испльзовать гистограмму.\nВ данном случае гистограмма своего рода агрегация в бины, то есть мы получаем как бы новую переменную из бинов, в каждом бине будет агрегированы данные.\nЭто работает, когда нам нужно просто посмотреть колечество, так как в бинах будет количество. Таким образом мы получаем сколько у нас заправок имеют определенное среднее вермя заправки.\n\nПро размер графиков\nСтандартный размер графиков width=600, height=400\nДля более сложных графиков, когда требуется больше места для отображения данных, можно использовать размеры width=800, height=600 или width=1000, height=800\n\n\nСравнивать количество элементов нужно в абсолютных и относительных величинах.\nКогда мы сравниваем только в абсолютных величинах, мы не учитываем размеры групп.\nВ одной группе может быть элементов больше чем в другой и тогда сравнение будет не совсем точным.\nЕсли у нас 2 категориальные переменные, то мы можем сравнивать отностельные величины\nпо одной переменной, а можем по другой.\nЭто как сравнивать суммарный возраст в группах, это не дает полной картины и мы сравниваем средний возраст,\nчтобы размер группы не влиял.\n\n\nВАЖНО Анализ графиков и выводы для них должны полностью перекрывать постановку задачи и цель.\nЭто значит, что если цель проанализировать зависимость наличия долга, то мы в идеале должны проанализировать\nвлиянеие каждой переменной на наличие долга (числовой и категориальной)\nКончено нужно проанализировать все возможные зависимости.\nНо все зависимости с переменной в постновке задачи мы обязаны проверить и дать выводы. И о наличии и об отсутствие.\nВажные выводы делаем не только о наличие интересных моментов, но и об отсутствие.\n\n\nСначала раздел графиков\nНа основе графиков формируются гипотезы (например, у нас у мужчин зп больше) И после раздела графиков идет раздел проверки гипотез. Тут мы првоеряем разные гипотезы новые и те, что увидели на графиках.\nЭто правильная последовательность сначала изучили графики и потом на основе их сформировали гипоетзы Перед разделом про графики идет раздел с корреляцией и поиском главных компонет случайного леса.\nМы выбиарем переменную, для которой мы далее хотим посмотреть разыне зависимости и указываем ее целевой для сучайного леса\nИ смотрим какие фичи сильнее влияют.\nИ теперь можем построить графики с целевой перменно и этими главными фичами и в выводе можно указать про то что это важные компоненты случаного леса\n\n\nНа основе полученных данных формулируем гипотезы, которые будем проверять в блоке проверки гипотез\n\n\nАнализ временных зависимостей\nКогда мы хотим изучить верменную зависимость, то нам нуно создать новые переменные с обрезанными (trunc or round) значениям, чтобы можно было сгруппировать используя groupby or pivot_table\nпо этой обрезанной переменной и применить функцию агрегации и построить график, например, среднее время заправки на азс по часам.\nВот когда мы работаем с временем, нам нужно думать какие переменные создать, обрезая текущее время.\n\nСтроим когортный анализ, если есть возможность\n\n\nЕсли у нас есть даты, то мы можем посмотреть не просто абсолютные значения на каждую дату какой-то метрики,\nа посмотреть относительные значения относительно предыдущего значения.\nДля этого нужно составить таблицу, в которой будет изменение в процентах относительно предыдущего значения.\nИ затем визуализировать для каждой даты динамику этого показателя\n\n\n\nИзучение зависимостей между числовыми переменными\n\n\nShow the code\nПостроить hexbinplot\n\n\n\nИзучаем scatter plots\n\n\n\nShow the code\ntitles_for_axis = dict(\n    # numeric column\n    children = 'Кол-во детей'\n    , age = 'Возраст'\n    , total_income = 'Доход'    \n)\n\n\n\n\nShow the code\npagri_data_tools.pairplot(df, titles_for_axis=titles_for_axis, horizontal_spacing=0.12, height=400, width=1200, rows=1, cols=3).show(config=dict(displayModeBar=False, dpi=200), renderer=\"png\")\n# если нужно интерактивый график, то\nfig = pagri_data_tools.pairplot(df, titles_for_axis=titles_for_axis, horizontal_spacing=0.12, height=800, width=800)    \nfig.show()\n\n\n\n\nИзучение зависимостей между категориальными переменными\n\n\nShow the code\ngen = pagri_graphs.categorical_graph_analys_gen(df)\n\n\n\n\nShow the code\nnext(gen)\n\n\n\nСтроим матрицу тепловой карты для категориальных переменных и изучаем зависимости\ncategorical_heatmap_matrix_gen\n\n\nПосмотрим на распределение количества элементов между группами\n\n\nНужно подумать как отобразить не только процент от всего количества, но и пороцент в группе\nТо есть у нас есть значение в ячейке, сумма всех, сумма по категории на оси x и сумма по категории на оси Y\nВот нужно как-то отобразить процент от суммы, процент от одной категории и от другой категории\n\n\n\nShow the code\n12 (0.5% of total, 20% of row, 15% of col) \n\n\n\nМожно сделать кнопки, чтобы можно было подсветку делать внури колонок и строк\n\n\nМожно сделать кнопки (процент от общего) (процент от тут указывается название оси x) (аналогично для второй оси)\n\n\n\nShow the code\ntitles_for_axis = dict(\n    # numeric column\n    children = ['Количество детей', 'количество детей', 0]\n    , age = ['Возраст, лет', 'возраст', 1]\n    , total_income = ['Ежемесячный доход', 'ежемесячный доход', 1]    \n     # category column\n    , education = ['Уровень образования', 'уровня образования']\n    , family_status = ['Семейное положение', 'семейного положения']\n    , gender = ['Пол', 'пола']\n    , income_type = ['Тип занятости', 'типа занятости']\n    , debt = ['Задолженность', 'задолженности']\n    , purpose = ['Цель получения кредита', 'цели получения кредита']\n    , has_child = ['Наличие детей', 'наличия детей']\n    , age_cat = ['Возрастная категория, лет', 'возрастной категории']\n    , total_income_cat = ['Категория дохода', 'категории дохода']\n)\n\n\n\n\nShow the code\npagri_data_tools.categorical_graph_analys_gen()\n\n\n\nСтроим treemap\ntreemap\ntreemap_dash\napp = treemap_dash(df)\nif __name__ == '__main__':\n   app.run_server(debug=True)\n\n\n\nShow the code\npagri_data_tools.treemap()\n\n\n\n\nShow the code\napp = pagri_data_tools.treemap_dash(df)\nif __name__ == '__main__':\n    app.run_server(debug=True)\n\n\n\nСтроим parallel_categories\nparallel_categories\nparallel_categories_dash\napp = treemap_dash(df)\nif __name__ == '__main__':\n   app.run_server(debug=True)\n\n\n\nShow the code\npagri_data_tools.parallel_categories()\n\n\n\n\nShow the code\napp = pagri_data_tools.parallel_categories_dash(df)\nif __name__ == '__main__':\n    app.run_server(debug=True)\n\n\n\nСтроим Sankey\nsankey\nsankey_dash\napp = treemap_dash(df)\nif __name__ == '__main__':\n   app.run_server(debug=True)\n\n\n\nShow the code\npagri_data_tools.sankey()\n\n\n\n\nShow the code\napp = pagri_data_tools.sankey_dash(df)\nif __name__ == '__main__':\n    app.run_server(debug=True)\n\n\n\n\nИзучение зависимостей между числовыми и категориальными переменными\n\nМожно добавить кнопку среднее и количество\nЧтобы можно было посмотртеть распределение по количеству, когда смотрить среднее.\n\n\ngraph_analysis\n\n\n\nShow the code\ngen = pagri_data_tools.graph_analysis()\n\n\n\nКогда выбрали нужные графики, то стоим их\n\n\nЧтобы автоматически генерировались подписи осей и заголовок графика, нужно заполшнить такой словарь.\nПервый элемент списка - это подпись оси\nВторой элемент списка - это как это название будет отображаться в заголовке графика\nДля числовых столбцов также указывается род, чтобы правильно выбрать (Середнее, средний, средняя) (0 - средний род, 1 - мужской род, 2 - женский род)\n\n\n\nShow the code\nf'Среднее / Медианное / Суммарное {numeric} в зависимости от {category} и {category}'  \n\n\n\n\nShow the code\ntitles_for_axis = dict(\n    # numeric column (0 - средний род, 1 - мужской род, 2 - женский род) (Середнее образовние, средний доход, средняя температура) )\n    children = ['Количество детей', 'количество детей', 0]\n    , age = ['Возраст, лет', 'возраст', 1]\n    , total_income = ['Ежемесячный доход', 'ежемесячный доход', 1]    \n     # category column\n    , education = ['Уровень образования', 'уровня образования']\n    , family_status = ['Семейное положение', 'семейного положения']\n    , gender = ['Пол', 'пола']\n    , income_type = ['Тип занятости', 'типа занятости']\n    , debt = ['Задолженность (1 - имеется, 0 - нет)', 'задолженности']\n    , purpose = ['Цель получения кредита', 'цели получения кредита']\n    , dob_cat = ['Возрастная категория, лет', 'возрастной категории']\n    , total_income_cat = ['Категория дохода', 'категории дохода']\n)\n\n\n\n\nShow the code\nsummory = []\ncolumns = []\n\n\n\n\nShow the code\ngen = pagri_data_tools.graph_analysis_gen(df)\n\n\n\nСначала запускаем код через 1 ячейку columns = next(gen),\nчтобы появлися график и в colunns появились текущие названия колонок\nДалее пишем наблюдения, если хотим сохранить график и выполняем ячейку ниже.\nЕсли сохранять не хотим, то просто выполняем дальше columns = next(gen)\n\n\n\nShow the code\nsummory.append(dict(\n    columns = columns\n    , observations =\n'''\n**Наблюдения:**  \n- 21\n- Размер больше\n- 1\n- Сильнее других\n- \n'''))\n\n\n\n\nShow the code\ncolumns = next(gen)\n\n\n\nВ summory находятся названия колонок и наблюдения для графиков, которые стоит построить\n\n\nВАЖНО\nПосле построеня всех графиков и коппирования комментариев из summory\nМы в предваретельном выводе после раздела графиков вставляем выводы из summory\nЧтобы их не собирать вручную у каждого графика\n\n\n\nShow the code\ndef gen_temp():\n    for item in summory:\n        colunns = item['columns']\n        observations = item['observations'] \n        print(observations)\n        yield colunns\n\n\n\n\nShow the code\ngen = gen_temp()\n\n\n\n\nShow the code\ncolunns = next(gen)\n\n\n\n**Наблюдения:**  \n- 21\n- Размер больше\n- 1\n- Сильнее других\n- \n\n\n\n\nЧтобы построить график без category- просто закоментируй строку с category.\n\n\n\nShow the code\nconfig = dict(df = df\n    , x = colunns[1]\n    , y = colunns[0]\n    , category = colunns[2]\n    # , width = 800\n    # , orientation = 'h'\n)  \npagri_data_tools.bar(config, titles_for_axis)\n\n\nНаблюдения: - У мужчин средний доход выше\nНаблюдения: - текст\n\n\nПромежуточный вывод"
  },
  {
    "objectID": "projects/housing-ads-investigation/housing_ads_investigation.html#формулирование-и-провера-гипотез",
    "href": "projects/housing-ads-investigation/housing_ads_investigation.html#формулирование-и-провера-гипотез",
    "title": "Исследование объявлений о продаже квартир",
    "section": "5. Формулирование и провера гипотез",
    "text": "5. Формулирование и провера гипотез\n\n5.1 Формулирование гипотез\nНа основе проведенного анализа данных сформулируем следующие гипотезы:\nГипотеза 1: Нет зависимости между количеством публикаций и днем недели.\nГипотеза 2: Удаленность от центра не влияет на количество публикаций.\nГипотеза 3: Площадь квартир не зависит от времени.\nГипотеза 4: Площадь квартиры не зависит от ценового сегмента.\nГипотеза 5: Количество дней экспозиции не зависит от удаленности от центра.\n\n\n5.2 Проверка гипотез\nПроверим сформулированные гипотезы.\n\n\nShow the code\ntitles_for_axis = dict(\n    total_area = ['Общая площадь', 'общей площади'],\n    price_per_sqm = ['Цена кв метра', 'цены кв метра'],\n    days_exposition = ['Число дней размещения', 'числа дней размещения'],\n)\n\n\nГипотеза 1: Нет зависимости между количеством публикаций и днем недели.\nH0: День недели не влияет на количество объявлений\nH1: День недели влияет на количество объявлений\n\n\nShow the code\ndaily_counts = df['publication_weekday'].value_counts().sort_index()\ndaily_counts\n\n\npublication_weekday\nПонедельник    3591\nВторник        4157\nСреда          3940\nЧетверг        4270\nПятница        3970\nСуббота        1918\nВоскресенье    1681\nName: count, dtype: int64\n\n\n\n\nShow the code\npagri_data_tools.chisquare(daily_counts)\n\n\nХи-квадрат Пирсона\nalpha =  0.05\np-value =  0.0\nОтклоняем нулевую гипотезу, поскольку p-value меньше уровня значимости\n\n\nРезультат:\nНа уровне значимости 0.05 гипотеза, что есть зависимость между количеством публикаций и днем недели подтвердилась.\nГипотеза 2: Удаленность от центра не влияет на количество публикаций.\nH0: Удаленность от центра не влияет на количество объявлений\nH1: Удаленность от центра влияет на количество объявлений\n\n\nShow the code\nzone_counts = df['location_zone'].value_counts().sort_index()\nzone_counts\n\n\nlocation_zone\nЦентр                   2475\nСредняя удаленность    12998\nОкраина                 2563\nне указано              5491\nName: count, dtype: int64\n\n\n\n\nShow the code\npagri_data_tools.chisquare(zone_counts)\n\n\nХи-квадрат Пирсона\nalpha =  0.05\np-value =  0.0\nОтклоняем нулевую гипотезу, поскольку p-value меньше уровня значимости\n\n\nРезультат:\nНа уровне значимости 0.05 гипотеза, что удаленность от центра влияет на количество публикаций, подтвердилась.\nГипотеза 3: Площадь квартир не зависит от времени.\nH0: Площадь квартир не зависит от времени.\nH1: Площадь квартир зависит от времени.\nПосмотрим на распределение площади квартир.\n\n\nShow the code\npagri_data_tools.histogram(df.total_area, titles_for_axis)\n\n\n                                                \n\n\nТак как у нас не нормальное распределение, то используем непараметрический критерий Краскела-Уоллиса.\nУровень значимости alpha выберем 0.05\n\n\nShow the code\npagri_data_tools.kruskal_df(df[['publication_month_year', 'total_area']])\n\n\nWarning: Sample size is less than 30 for one or more samples. Results may be unreliable.\nТест Краскела-Уоллиса (H-критерий)\nalpha =  0.05\np-value =  4.573162293436599e-35\nОтклоняем нулевую гипотезу, поскольку p-value меньше уровня значимости\n\n\nРезультат:\nНа уровне значимости 0.05 гипотеза, что площадь квартир не зависит от времени, не подтвердилась.\nНужно учесть, что в одной из групп меньше 30 элементов. Есть основания не доверять результатам.\nГипотеза 4: Площадь квартиры не зависит от ценового сегмента.\nH0: Площадь квартиры не зависит от ценового сегмента.\nH1: Площадь квартиры зависит от ценового сегмента.\nТак как у нас не нормальное распределение, то используем непараметрический критерий Краскела-Уоллиса.\nУровень значимости alpha выберем 0.05\n\n\nShow the code\npagri_data_tools.kruskal_df(df[['price_segment', 'total_area']])\n\n\nТест Краскела-Уоллиса (H-критерий)\nalpha =  0.05\np-value =  0.0\nОтклоняем нулевую гипотезу, поскольку p-value меньше уровня значимости\n\n\nРезультат:\nНа уровне значимости 0.05 гипотеза, что площадь квартиры зависит от ценового сегмента, подтвердилась.\nГипотеза 5: Количество дней экспозиции не зависит от удаленности от центра.\nH0: Количество дней экспозиции не зависит от удаленности от центра.\nH1: Количество дней экспозиции зависит от удаленности от центра.\nПосмотрим на распределение количества дней экспозиции.\n\n\nShow the code\npagri_data_tools.histogram(df.days_exposition, titles_for_axis)\n\n\n                                                \n\n\nТак как у нас не нормальное распределение, то используем непараметрический критерий Краскела-Уоллиса.\nУровень значимости alpha выберем 0.05\nТак как у нас есть пропуски, то для проведения теста их удалим.\nБудем полагать, что пропуски носят случайный характер и не повлияют на результат теста.\n\n\nShow the code\npagri_data_tools.kruskal_df(df[['location_zone', 'days_exposition']].dropna())\n\n\nТест Краскела-Уоллиса (H-критерий)\nalpha =  0.05\np-value =  2.135280354786305e-54\nОтклоняем нулевую гипотезу, поскольку p-value меньше уровня значимости\n\n\nРезультат:\nНа уровне значимости 0.05 гипотеза, что количество дней экспозиции зависит от удаленности от центра, подтвердилась.\n\n\n5.3 Промежуточный вывод\n\nНа уровне значимости 0.05 гипотеза, что есть зависимость между количеством публикаций и днем недели подтвердилась.\n\nНа уровне значимости 0.05 гипотеза, что удаленность от центра влияет на количество публикаций, подтвердилась.\n\nНа уровне значимости 0.05 гипотеза, что площадь квартир не зависит от времени, не подтвердилась.\nНужно учесть, что в одной из групп меньше 30 элементов. Есть основания не доверять результатам.\nНа уровне значимости 0.05 гипотеза, что площадь квартиры зависит от ценового сегмента, подтвердилась.\n\nНа уровне значимости 0.05 гипотеза, что количество дней экспозиции зависит от удаленности от центра, подтвердилась."
  },
  {
    "objectID": "projects/housing-ads-investigation/housing_ads_investigation.html#общий-вывод",
    "href": "projects/housing-ads-investigation/housing_ads_investigation.html#общий-вывод",
    "title": "Исследование объявлений о продаже квартир",
    "section": "6. Общий вывод",
    "text": "6. Общий вывод\nВыводы:\n- Сильная положительная корреляция между жилой площадью и общей площадью\n- Сильная положительная корреляция между числом комнат и общей площадью\n- Сильная положительная корреляция между числом комнат и жилой площадью\n- Сильная отрицательная корреляция между отношением площади кухни к общей площади и отношением жилой площади к общей площади\n- Умеренная положительная корреляция между площадью кухни и общей площадью\n- Умеренная положительная корреляция между ценой и общей площадью\n- Умеренная положительная корреляция между ценой и жилой площадью\n- Умеренная положительная корреляция между ценой и площадью кухни\n- Умеренная положительная корреляция между ценой и жилой площадью\n- Общая площадь является самым значимым признаком для предсказания цены квартиры. Число дней экспозиции находится на втором месте.\n- Есть небольшая зависимость между ценой и количеством этажей. Чем больше цена, тем меньше этажей.\nЭто скорее всего связано с тем, что старые дома имеют меньше этажей и загородные дома имеют также меньше этажей.\n- Можно заметить, что чем ближе к центру или парку, тем дороже стоит квартира.\n- В среднем объявление находится в продаже 180 дней.\n- Чем больше число комнат, тем больше общая площадь.\n- Чем больше число комнат, тем больше жилая площадь.\n- В воскресенье и субботу меньше всего публикаций\n- Больше всего объявлений со средней удаленностью от центра.\n- Есть тренд на увеличение количества фотографий по годам.\n- Медианная цена квартиры не сильно изменяется со временем\n- Медианная площадь квартир не сильно меняется со временем\n- Медианная стоимость квадратного метра практически не меняется со временем\n- В премиуме среднее количество комнат больше на всех этажах\n- У премиум площадь квартир больше на всех этажах\n- В центре медианная стоимость квартир выше\n- В центре медианная площадь квартир больше\n- В центре медианное количество комнат больше\n- В центре медианная высота потолков выше.\n- Самые высокие дома находятся на средней удаленности от центра\n- В центре медианное количество дней экспозиции больше.\n- Среднее и медиана в центре для цены выше почти в 2 раза, чем во всем датафрейме.\n- Общая площадь в центре больше, чем во всем датафрейме.\n- Высота потолков в центре больше, чем во всем датафрейме\n- В центре меньше балконов, чем во всем датафрейме.\n- В центре объявления дольше находятся в экспозиции.\n- В центре меньше эконома и больше премиум квартир.\n- Санкт–Петербург, Пушкин и деревня Кудрово имеют самую большую цену квадратного метра.\nАномалии и особенности в данных:\n- Минимальное значение цены 12 190 является аномальным.\n- В высоте потолков есть пропуски (39 процентов)\n- В высоте потолков много выбросов. Есть значение 100.\n- В количестве этажей есть пропуски (меньше 1 процента)\n- В жилой площади 8 процентов пропусков.\n- В площади кухни 10 процентов пропусков.\n- В числе балконов 49 процентов пропусков. Скорее всего пропуски это отсутствие балкона.\n- В расстоянии до ближайшего аэропорта 23 процента пропусков.\n- В расстоянии до центр города 23 процента пропусков.\n- В колонке с количеством парков рядом 23 процента пропусков.\n- В колонке с расстоянием до ближайшего парка 66 процентов пропусков.\n- В колонке с количеством прудов 23 процента пропусков, скорее всего это отсутствие парков.\n- В колонке с расстоянием до ближайшего пруда 62 процента пропусков.\n- В колонке с количеством дней экспозиции 13 процентов пропусков.\n- В колонке с признаком является ли квартира апартаментом 88 процентов пропусков. Скорее всего эти квартиры не являются апартаментами.\n- В колонке с названием населенного пункта 49 пропущенных значений (меньше 1 процента)\n- Пропуски в колонках с количеством парков рядом, количеством прудов рядом,\nрасстоянием до центра, расстоянием до аэропорта совпадают.\n- Пропуски в количестве этажей совпадают с пропусками в признаке является ли квартира апартаментом.\n- В количестве этаже пропуски зависят от признака является ли квартира студией.\n- Почти все пропуски в квартирах, которые не являются студиями, даже учитывая общее количество пропорций.\n- В студиях в поле площадь кухни одни пропуски.\nРезультаты предобработки данных:\n- Мы выяснили, что 0 комнат указано у студий, либо в открытой планировке, либо у квартир с площадью до 40 кв.,\nпоэтому нули в количестве комнат заменили на 1.\n- В цене была одна запись со значением 12190. Скорее всего не поставили нули, но сложно определить сколько именно нулей не поставили.\nТак как это всего 1 запись, то удалили ее. - Удалили 36 записей (0.2%) с высотой потолка больше 5 метров. Так как таких записей мало, а замена их может исказить анализ.\n- В количестве этажей пропуски удалили, так как определить реальный этаж невозможно, а пропусков мало.\n- Пропуски в жилой площади и в площади кухни обработали с помощью коэффициентов отношения площадей.\nПри этом расчеты провели с учетом количества комнат, чтобы было точнее.\nРезультаты проверки гипотез:\n- Гипотеза 1: Нет зависимости между количеством публикаций и днем недели.\nРезультат: на уровне значимости 0.05 гипотеза не подтвердилась.\n- Гипотеза 2: Удаленность от центра не влияет на количество публикаций.\nРезультат: на уровне значимости 0.05 гипотеза не подтвердилась.\n- Гипотеза 3: Площадь квартир не зависит от времени.\nРезультат: на уровне значимости 0.05 гипотеза не подтвердилась.\n- Гипотеза 4: Площадь квартиры не зависит от ценового сегмента.\nРезультат: на уровне значимости 0.05 гипотеза не подтвердилась.\n- Гипотеза 5: Количество дней экспозиции не зависит от удаленности от центра.\nРезультат: на уровне значимости 0.05 гипотеза не подтвердилась.\nРекомендации:\n- Добавить контроль ввода слишком больших и слишком маленьких значений для цены, высоты потолка.\n- Добавить контроль ввода для количества комнат, чтобы исключить ввод нулевых значений.\n- Выяснить почему пропуски в колонках с количеством парков рядом, количеством прудов рядом,\nрасстоянием до центра, расстоянием до аэропорта в одних и тех же строках."
  },
  {
    "objectID": "projects/housing-ads-investigation/housing_ads_investigation.html#обогащение-данных-и-создание-новых-переменных",
    "href": "projects/housing-ads-investigation/housing_ads_investigation.html#обогащение-данных-и-создание-новых-переменных",
    "title": "Исследование объявлений о продаже квартир",
    "section": "3. Обогащение данных и создание новых переменных",
    "text": "3. Обогащение данных и создание новых переменных\n\n3.1 Создание новых числовых переменных\nСоздадим переменную соотношение жилой и общей площади\n\n\nShow the code\ndf['living_total_ratio'] = round(df['living_area'] / df['total_area'],2)\n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'living_total_ratio')\n\n\n\n        \n            \n\n\n\n\nTable 36: living_total_ratio\n\n\n\n\n\nValues\n23 527 (100%)\n\nMax\n1\n\nAvg\n0.56\n\n0.58 (6%)\n\n\nMissing\n---\n\n95%\n0.72\n\nMode\n0.58\n\n0.62 (5%)\n\n\nDistinct\n91 (&lt;1%)\n\n75%\n0.63\n\nRange\n0.98\n\n0.48 (5%)\n\n\nDuplicates\n23 436 (99.6%)\n\nMedian\n0.57\n\niQR\n0.14\n\n0.56 (4%)\n\n\nZeros\n---\n\n25%\n0.49\n\nstd\n0.1\n\n0.55 (4%)\n\n\nNegative\n---\n\n5%\n0.4\n\nkurt\n0.32\n\n0.6 (4%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0.02\n\nskew\n-0.14\n\n0.64 (3%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nСоздадим переменную отношения площади кухни к общей.\n\n\nShow the code\ndf['kitchen_total_ratio'] = round(df['kitchen_area'] / df['total_area'],2)\n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'kitchen_total_ratio')\n\n\n\n        \n            \n\n\n\n\nTable 37: kitchen_total_ratio\n\n\n\n\n\nValues\n23 527 (100%)\n\nMax\n0.79\n\nAvg\n0.19\n\n0.16 (9%)\n\n\nMissing\n---\n\n95%\n0.31\n\nMode\n0.16\n\n0.13 (7%)\n\n\nDistinct\n66 (&lt;1%)\n\n75%\n0.24\n\nRange\n0.76\n\n0.25 (7%)\n\n\nDuplicates\n23 461 (99.7%)\n\nMedian\n0.17\n\niQR\n0.11\n\n0.14 (6%)\n\n\nZeros\n---\n\n25%\n0.13\n\nstd\n0.07\n\n0.12 (6%)\n\n\nNegative\n---\n\n5%\n0.1\n\nkurt\n2.81\n\n0.15 (6%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0.03\n\nskew\n1.18\n\n0.11 (6%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nСоздадим переменную цена квадратного метра\n\n\nShow the code\ndf['price_per_sqm'] = (df['last_price'] / df['total_area']).astype(int)\n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'kitchen_total_ratio')\n\n\n\n        \n            \n\n\n\n\nTable 38: kitchen_total_ratio\n\n\n\n\n\nValues\n23 527 (100%)\n\nMax\n0.79\n\nAvg\n0.19\n\n0.16 (9%)\n\n\nMissing\n---\n\n95%\n0.31\n\nMode\n0.16\n\n0.13 (7%)\n\n\nDistinct\n66 (&lt;1%)\n\n75%\n0.24\n\nRange\n0.76\n\n0.25 (7%)\n\n\nDuplicates\n23 461 (99.7%)\n\nMedian\n0.17\n\niQR\n0.11\n\n0.14 (6%)\n\n\nZeros\n---\n\n25%\n0.13\n\nstd\n0.07\n\n0.12 (6%)\n\n\nNegative\n---\n\n5%\n0.1\n\nkurt\n2.81\n\n0.15 (6%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0.03\n\nskew\n1.18\n\n0.11 (6%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nСоздадим новую переменную - расстояние до центра километрах.\n\n\nShow the code\ndf['city_centers_nearest_km'] = round(df.city_centers_nearest / 1000)\n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'city_centers_nearest_km')\n\n\n\n        \n            \n\n\n\n\nTable 39: city_centers_nearest_km\n\n\n\n\n\nValues\n18 036 (77%)\n\nMax\n66\n\nAvg\n14.19\n\n12 (9%)\n\n\nMissing\n5 491 (23%)\n\n95%\n32\n\nMode\n12\n\n15 (9%)\n\n\nDistinct\n61 (&lt;1%)\n\n75%\n16\n\nRange\n66\n\n13 (8%)\n\n\nDuplicates\n23 465 (99.7%)\n\nMedian\n13\n\niQR\n7\n\n14 (7%)\n\n\nZeros\n27 (&lt;1%)\n\n25%\n9\n\nstd\n8.62\n\n16 (7%)\n\n\nNegative\n---\n\n5%\n4\n\nkurt\n4.34\n\n11 (6%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n1.67\n\n5 (5%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\n\n\n3.2 Категоризация данных\n\n\nShow the code\ndf.head(1)\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\nliving_total_ratio\nkitchen_total_ratio\nprice_per_sqm\ncity_centers_nearest_km\n\n\n\n\n0\n20\n13000000\n108.0\n2019-03-07\n3\n2.7\n16.0\n51.0\n8\nне указано\n...\n16028.0\n1.0\n482.0\n2.0\n755.0\nNaN\n0.47\n0.23\n120370\n16.0\n\n\n\n\n1 rows × 26 columns\n\n\n\nСоздадим новую категориальную переменную из этажа.\nСделаем 3 значения - первый, последний и другой\n\n\nShow the code\ndf['floor_position'] = df.apply(lambda x: 'первый' if x['floor'] == 1 else 'последний' if x['floor'] == x['floors_total'] else 'другой', axis=1).astype('category')\n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'floor_position')\n\n\n\n        \n            \n\n\n\n\nTable 40: floor_position\n\n\n\n\n\nValues\n23 527 (100%)\n\nдругой (74%)\n\n\nMissing\n---\n\nпоследний (14%)\n\n\nDistinct\n3 (&lt;1%)\n\nпервый (12%)\n\n\nDuplicated origin\n23 524 (99.9%)\n\n\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nСоздадим новую категориальную переменную из цены\n\n\nShow the code\npagri_data_tools.quantiles_columns(df.last_price)\n\n\n\n\n\n\n\nTable 41: Quantiles\n\n\n\n\n\nMax\n763 000 000\n\n\n5\n1 860 000\n\n\n25\n3 400 000\n\n\n50\n4 646 000\n\n\n75\n6 790 000\n\n\n95\n15 253 200.0\n\n\nMin\n430 000\n\n\n\n\n\n\n\n\n\n\nShow the code\nlabels = ['эконом', 'комфорт', 'премиум']\nbins = [-np.inf, 4_000_000, 10_000_000, np.inf]\n\n\n\n\nShow the code\ndf['price_segment'] = pagri_data_tools.create_category_column(df.last_price, labels=labels, bins=bins).astype('category')\n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'price_segment')\n\n\n\n        \n            \n\n\n\n\nTable 42: price_segment\n\n\n\n\n\nValues\n23 527 (100%)\n\nкомфорт (50%)\n\n\nMissing\n---\n\nэконом (38%)\n\n\nDistinct\n3 (&lt;1%)\n\nпремиум (11%)\n\n\nDuplicated origin\n23 524 (99.9%)\n\n\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nСоздадим переменные день недели, месяц и год публикации объявления.\n\n\nShow the code\nweekday_dict = {\n    'Monday': 'Понедельник',\n    'Tuesday': 'Вторник',\n    'Wednesday': 'Среда',\n    'Thursday': 'Четверг',\n    'Friday': 'Пятница',\n    'Saturday': 'Суббота',\n    'Sunday': 'Воскресенье'\n}\nmonth_dict = {\n    1: 'Январь',\n    2: 'Февраль',\n    3: 'Март',\n    4: 'Апрель',\n    5: 'Май',\n    6: 'Июнь',\n    7: 'Июль',\n    8: 'Август',\n    9: 'Сентябрь',\n    10: 'Октябрь',\n    11: 'Ноябрь',\n    12: 'Декабрь'\n}\n\n\n\n\nShow the code\ndf['publication_weekday'] = df['first_day_exposition'].dt.day_name().map(weekday_dict).astype('category')\ndf['publication_month'] = df['first_day_exposition'].dt.month.map(month_dict).astype('category')\ndf['publication_year'] = df['first_day_exposition'].dt.year.astype(str).astype('category')\n# Задаем порядок для weekdays\nweekday_order = ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье']\ndf['publication_weekday'] = df['publication_weekday'].cat.reorder_categories(weekday_order, ordered=True)\n\n# Задаем порядок для months\nmonth_order = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\ndf['publication_month'] = df['publication_month'].cat.reorder_categories(month_order, ordered=True)\n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'publication_weekday')\n\n\n\n        \n            \n\n\n\n\nTable 43: publication_weekday\n\n\n\n\n\nValues\n23 527 (100%)\n\nЧетверг (18%)\n\n\nMissing\n---\n\nВторник (18%)\n\n\nDistinct\n7 (&lt;1%)\n\nПятница (17%)\n\n\nDuplicated origin\n23 520 (99.9%)\n\nСреда (17%)\n\n\nDupl (modify - origin)\n---\n\nПонедельник (15%)\n\n\nEmpty\n---\n\nСуббота (8%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nВоскресенье (7%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'publication_month')\n\n\n\n        \n            \n\n\n\n\nTable 44: publication_month\n\n\n\n\n\nValues\n23 527 (100%)\n\nФевраль (11%)\n\n\nMissing\n---\n\nМарт (11%)\n\n\nDistinct\n12 (&lt;1%)\n\nНоябрь (10%)\n\n\nDuplicated origin\n23 515 (99.9%)\n\nАпрель (10%)\n\n\nDupl (modify - origin)\n---\n\nОктябрь (9%)\n\n\nEmpty\n---\n\nСентябрь (8%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nИюнь (7%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'publication_year')\n\n\n\n        \n            \n\n\n\n\nTable 45: publication_year\n\n\n\n\n\nValues\n23 527 (100%)\n\n2018 (36%)\n\n\nMissing\n---\n\n2017 (35%)\n\n\nDistinct\n6 (&lt;1%)\n\n2019 (12%)\n\n\nDuplicated origin\n23 521 (99.9%)\n\n2016 (12%)\n\n\nDupl (modify - origin)\n---\n\n2015 (5%)\n\n\nEmpty\n---\n\n2014 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nСоздадим новую категориальную переменную месяц-год\n\n\nShow the code\n# Словарь для замены месяцев\nmonths_translation = {\n    'Jan': 'Янв',\n    'Feb': 'Фев',\n    'Mar': 'Мар',\n    'Apr': 'Апр',\n    'May': 'Май',\n    'Jun': 'Июн',\n    'Jul': 'Июл',\n    'Aug': 'Авг',\n    'Sep': 'Сен',\n    'Oct': 'Окт',\n    'Nov': 'Ноя',\n    'Dec': 'Дек'\n}\n# Получаем отдельно месяц и год\nmonths = df['first_day_exposition'].dt.strftime('%b').astype('category').cat.reorder_categories(list(months_translation.keys()), ordered=True)\nyears = df['first_day_exposition'].dt.strftime('%y')\nmonths_years = pd.concat([months, years], axis=1)\nmonths_years.columns = ['month', 'year']\n# Создаем список уникальных (год, месяц) и сортируем\nunique_months = months_years.drop_duplicates().sort_values(by=['year', 'month'])\n\n# Создаем список для порядка\nmonth_year_order = []\n\n# Формируем month_year_order на основе уникальных (год, месяц)\nfor _, row in unique_months.iterrows():\n    year = row['year']\n    month = row['month']\n    month_year_order.append(f\"{months_translation[month]}'{str(year)[-2:]}\")\n\n# Заменяем месяцы и соединяем с годом\ndf['publication_month_year'] = months.astype(str).map(months_translation) + \"'\" + years\ndf['publication_month_year'] = df['publication_month_year'].astype('category')\ndf['publication_month_year'] = df['publication_month_year'].cat.reorder_categories(month_year_order, ordered=True)\ndf['publication_month_year']\n\n\n0        Мар'19\n1        Дек'18\n2        Авг'15\n3        Июл'15\n4        Июн'18\n          ...  \n23694    Мар'17\n23695    Янв'18\n23696    Фев'18\n23697    Мар'17\n23698    Июл'17\nName: publication_month_year, Length: 23527, dtype: category\nCategories (55, object): ['Ноя'14' &lt; 'Дек'14' &lt; 'Янв'15' &lt; 'Фев'15' ... 'Фев'19' &lt; 'Мар'19' &lt; 'Апр'19' &lt; 'Май'19']\n\n\nСоздадим новую категориальную переменную из расстояния до центра.\nЧтобы определить границы зон, построим график зависимости цены от расстояния до центра.\n\n\nShow the code\nconfig = dict(\n    df = df[df['locality_name'] == 'Санкт-Петербург']\n    , x = 'city_centers_nearest_km'  \n    , x_axis_label = 'Расстояние до центра, км'\n    , y = 'last_price'\n    , y_axis_label = 'Цена'\n    , title = 'Цена в зависимости от расстояния до центра'\n    , func = 'median'\n    , width = 700\n    , height = 400\n)\npagri_data_tools.line(config)\n\n\n                                                \n\n\nМожно заметить, что на 5 км от центра падение цены замедляется.\nВыберем 5 км как границу для центра.\nИ выберем 20 км как зону окраины\n\n\nShow the code\nlabels = ['Центр', 'Средняя удаленность', 'Окраина']\nbins = [-np.inf, 5, 20, np.inf]\n\n\n\n\nShow the code\ndf.head()\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nliving_total_ratio\nkitchen_total_ratio\nprice_per_sqm\ncity_centers_nearest_km\nfloor_position\nprice_segment\npublication_weekday\npublication_month\npublication_year\npublication_month_year\n\n\n\n\n0\n20\n13000000\n108.0\n2019-03-07\n3\n2.70\n16.0\n51.000000\n8\nне указано\n...\n0.47\n0.23\n120370\n16.0\nдругой\nпремиум\nЧетверг\nМарт\n2019\nМар'19\n\n\n1\n7\n3350000\n40.4\n2018-12-04\n1\nNaN\n11.0\n18.600000\n1\nне указано\n...\n0.46\n0.27\n82920\n19.0\nпервый\nэконом\nВторник\nДекабрь\n2018\nДек'18\n\n\n2\n10\n5196000\n56.0\n2015-08-20\n2\nNaN\n5.0\n34.300000\n4\nне указано\n...\n0.61\n0.15\n92785\n14.0\nдругой\nкомфорт\nЧетверг\nАвгуст\n2015\nАвг'15\n\n\n3\n0\n64900000\n159.0\n2015-07-24\n3\nNaN\n14.0\n98.215511\n9\nне указано\n...\n0.62\n0.13\n408176\n7.0\nдругой\nпремиум\nПятница\nИюль\n2015\nИюл'15\n\n\n4\n2\n10000000\n100.0\n2018-06-19\n2\n3.03\n14.0\n32.000000\n13\nне указано\n...\n0.32\n0.41\n100000\n8.0\nдругой\nкомфорт\nВторник\nИюнь\n2018\nИюн'18\n\n\n\n\n5 rows × 32 columns\n\n\n\n\n\nShow the code\ndf['location_zone'] = pagri_data_tools.create_category_column(df.city_centers_nearest_km, labels=labels, bins=bins, fillnavalue=\"не указано\")\n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'location_zone')\n\n\n\n        \n            \n\n\n\n\nTable 46: location_zone\n\n\n\n\n\nValues\n23 527 (100%)\n\nСредняя удаленность (55%)\n\n\nMissing\n---\n\nне указано (23%)\n\n\nDistinct\n4 (&lt;1%)\n\nОкраина (11%)\n\n\nDuplicated origin\n23 523 (99.9%)\n\nЦентр (11%)\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\n\n\n3.3 Промежуточный вывод\n\nСоздали переменную соотношение жилой и общей площади\nСоздали переменную отношения площади кухни к общей.\nСоздали переменную цена квадратного метра\nСоздали новую переменную - расстояние до центра километрах.\nСоздадим новую категориальную переменную позиция этажа. Сделали 3 значения - первый, последний и другой\nИз цены создали новую категориальную переменную - сегмент цены. Сделали 3 значения - эконом, комфорт, премиум.\n\nСоздали переменные день недели, месяц, год и месяц-год публикации объявления.\nСоздали новую категориальную переменную из расстояния до центра. Сделали значения - центр, окраина, средняя удаленность"
  },
  {
    "objectID": "projects/housing-ads-investigation/housing_ads_investigation.html#визуализация-взаимосвязей-переменных",
    "href": "projects/housing-ads-investigation/housing_ads_investigation.html#визуализация-взаимосвязей-переменных",
    "title": "Исследование объявлений о продаже квартир",
    "section": "4. Визуализация взаимосвязей переменных",
    "text": "4. Визуализация взаимосвязей переменных\n\n4.1 Исследование корреляционных связей\nПостроим матрицу корреляции.\n\n\nShow the code\ndf.select_dtypes(include=['category']).columns\n\n\nIndex(['is_apartment', 'studio', 'open_plan', 'floor_position',\n       'price_segment', 'publication_weekday', 'publication_month',\n       'publication_year', 'publication_month_year', 'location_zone'],\n      dtype='object')\n\n\n\n\nShow the code\ntitles_for_axis= dict(\n        \n        total_images = 'число фотографий',\n        last_price = 'цена',\n        total_area = 'общая площадь',\n        rooms = 'число комнат',\n        ceiling_height = 'высота потолков',\n        floors_total = 'всего этажей',\n        living_area = 'жилая площадь',\n        floor = 'этаж',\n        kitchen_area = 'площадь кухни',\n        balcony = 'число балконов',\n        airports_nearest = 'расстояние до аэропорта, м',\n        city_centers_nearest = 'расстояние до центра, м',\n        parks_around3000 = 'число парков',\n        parks_nearest = 'расстояние до парка, м',\n        ponds_around3000 = 'число водоёмов',\n        ponds_nearest = 'расстояние водоёма, м',\n        days_exposition = 'число дней размещения',\n        city_centers_nearest_km = 'расстояние до центра, км',\n        living_total_ratio = 'жилая/общая площадь',\n        kitchen_total_ratio = 'кухня/общая площадь',\n        price_per_sqm = 'цена кв метра',\n        is_apartment = 'является ли апартаментом',\n        studio = 'является ли студией',\n        open_plan = 'открытая ли планировка',\n        floor_position = 'позиция этажа',\n        price_segment = 'секмент цены',\n        publication_weekday = 'день  недели публикации',\n        publication_month = 'месяц публикации',\n        publication_year = 'год публикации',\n        publication_month_year = 'месяц и год публикации',\n        location_zone = 'локация'\n)\n\n\n Вернуться к выводам\n\n\nShow the code\ngen = pagri_data_tools.heatmap_corr_gen(df, part_size=10, titles_for_axis=titles_for_axis)\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nСильная положительная корреляция между жилой площадью и общей площадью\nСильная положительная корреляция между числом комнат и общей площадью\nСильная положительная корреляция между числом комнат и жилой площадью\nУмеренная положительная корреляция между площадью кухни и общей площадью\nУмеренная положительная корреляция между ценой и общей площадью\nУмеренная положительная корреляция между ценой и жилой площадью\nУмеренная положительная корреляция между ценой и площадью кухни\nУмеренная положительная корреляция между ценой и жилой площадью\n\n\n\nShow the code\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nСильная отрицательная корреляция между отношением площади кухни к общей площади и отношением жилой площади к общей площади\nУмеренная положительная корреляция между числом комнат и отношением жилой площади к общей площади\n\nПостроим модель случайного леса для определения цены и посмотрим какие переменные сильнее всего влияют на решения модели.\n Вернуться к выводам\n\n\nShow the code\ntitle = 'График важности признаков для предсказания цены'\npagri_data_tools.plot_feature_importances_regression(df.drop('price_per_sqm', axis=1), target='last_price', titles_for_axis=titles_for_axis, title=title)\n\n\n                                                \n\n\nНаблюдения:\n\nОбщая площадь является самым значимым признаком для предсказания цены квартиры.\n\nЧисло дней экспозиции находится на втором месте.\n\n\n4.2 Изучение зависимостей между числовыми переменными\nИзучим зависимости между числовыми переменными, используя графики рассеяния.\n Вернуться к выводам\n\n\nShow the code\n\npairs = {('last_price', 'total_area'): {'last_price': [np.int64(430000), np.int64(763000000)], 'total_area': [np.float64(12.0), np.float64(900.0)]}, ('last_price', 'living_area'): {'last_price': [np.int64(430000), np.int64(763000000)], 'living_area': [np.float64(2.0), np.float64(427.55)]}, ('last_price', 'kitchen_area'): {'last_price': [np.int64(430000), np.int64(763000000)], 'kitchen_area': [np.float64(1.3), np.float64(122.57)]}, ('last_price', 'floors_total'): {'last_price': [np.int64(430000), np.int64(763000000)], 'floors_total': [np.float64(1.0), np.float64(60.0)]}, ('last_price', 'city_centers_nearest'): {'last_price': [np.int64(430000), np.int64(763000000)], 'city_centers_nearest': [np.float64(181.0), np.float64(65968.0)]}, ('last_price', 'parks_nearest'): {'last_price': [np.int64(430000), np.int64(763000000)], 'parks_nearest': [np.float64(1.0), np.float64(3190.0)]}, ('total_area', 'rooms'): {'total_area': [np.float64(12.0), np.float64(900.0)], 'rooms': [np.int64(1), np.int64(19)]}, ('total_area', 'city_centers_nearest'): {'total_area': [np.float64(12.0), np.float64(900.0)], 'city_centers_nearest': [np.float64(181.0), np.float64(65968.0)]}, ('rooms', 'living_area'): {'rooms': [np.int64(1), np.int64(19)], 'living_area': [np.float64(2.0), np.float64(427.55)]}}\npagri_data_tools.pairplot_pairs(df, pairs, titles_for_axis=titles_for_axis, horizontal_spacing=0.12, rows=3, cols=3, density_mode='count') #.show(config=dict(displayModeBar=False, dpi=200), renderer=\"png\")\n\n\n                                                \n\n\nНаблюдения:\n\nС ростом цены растет общая площадь, жилая площадь и площадь кухни.\nЕсть небольшая зависимость между ценой и количеством этажей. Чем больше цена, тем меньше этажей.\nЭто скорее всего связано с тем, что старые дома имеют меньше этажей и загородные дома имеют также меньше этажей.\nМожно заметить, что чем ближе к центру или парку, тем дороже стоит квартира.\nЧем больше число комнат, тем больше общая площадь, что логично.\n\nЧем ближе к центру, тем меньше общая площадь. Скорее всего это связано с тем, что в центре больше студий.\n\nЧем больше число комнат, тем больше жилая площадь, что логично.\n\n\n\n4.3 Изучение зависимостей между категориальными переменными\nИзучим распределение долей в категориальных переменных.\n\n\nShow the code\ntitles_for_axis = dict(\n    # numeric\n    total_images = ['Число фотографий', 'число фотографий', 0],\n    last_price = ['Цена', 'цена', 2],\n    total_area = ['Общая площадь', 'общая площадь', 2],\n    rooms = ['Число комнат', 'число комнат', 0],\n    ceiling_height = ['Высота потолков', 'высота потолков', 2],\n    floors_total = ['Всего этажей', 'количество этажей', 0],\n    living_area = ['Жилая площадь', 'жилая площадь', 2],\n    floor = ['Этаж', 'этаж', 1],\n    kitchen_area = ['Площадь кухни', 'площадь кухни', 2],\n    balcony = ['Число балконов', 'число балконов', 0],\n    airports_nearest = ['Расстояние до аэропорта, м', 'расстояние до аэропорта', 0],\n    city_centers_nearest = ['Расстояние до центра, м', 'расстояние до центра', 0],\n    parks_around3000 = ['Число парков', 'число парков', 0],\n    parks_nearest = ['Расстояние до парка, м', 'расстояние до парка', 0],\n    ponds_around3000 = ['Число водоёмов', 'число водоёмов', 0],\n    ponds_nearest = ['Расстояние до водоёма, м', 'расстояние до водоёма', 0],\n    days_exposition = ['Число дней размещения', 'число дней размещения', 0],\n    city_centers_nearest_km = ['Расстояние до центра, км', 'расстояние до центра', 0],\n    living_total_ratio = ['Жилая/общая площадь', 'жилая/общая площадь', 2],\n    kitchen_total_ratio = ['Кухня/общая площадь', 'кухня/общая площадь', 2],\n    price_per_sqm = ['Цена кв метра', 'цена кв метра', 2],\n    # categorical\n    is_apartment = ['Является ли апартаментом', 'является ли апартаментом', 0],\n    studio = ['Является ли студией', 'является ли студией', 0],\n    open_plan = ['Открытая ли планировка', 'планировки', 0],\n    floor_position = ['Позиция этажа', 'позиции этажа', 1],\n    price_segment = ['Сегмент цены', 'сегмента цены', 1],\n    publication_weekday = ['День недели публикации', 'дня недели публикации', 1],\n    publication_month = ['Месяц публикации', 'месяца публикации', 1],\n    publication_year = ['Год публикации', 'года публикации', 1],\n    publication_month_year = ['Месяц и год публикации', 'месяца и года публикации', 1],\n    location_zone = ['Локация', 'локации', 2]\n)\n\n\n\n\nShow the code\n\nconfig = dict(\n    df = df\n    , column_for_axis = 'floor_position'\n    , column_for_legend = 'price_segment'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , normalized_mode = 'all'\n    , text = True\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar_categories(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nВ этажах кроме первого и последнего комфорта больше всего.\n\nПосмотрим на распределение количества элементов между группами\n\n\nShow the code\npagri_data_tools.categorical_heatmap_matrix(df, 'floor_position', 'price_segment', titles_for_axis=titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nБольше всего квартир комфорт класса с этажом не первым и не последним.\n\n Вернуться к выводам\n\n\nShow the code\npagri_data_tools.categorical_heatmap_matrix(df, 'publication_weekday', 'price_segment', titles_for_axis=titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nВ воскресенье и субботу меньше всего публикаций\n\n\n\nShow the code\npagri_data_tools.categorical_heatmap_matrix(df, 'location_zone', 'price_segment', titles_for_axis=titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nБольше всего объявлений со средней удаленностью от центра.\n\n\n\n4.4 Анализ временных зависимостей\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'publication_year'\n    , y = 'total_images'\n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = False\n    , showgrid_y = True\n    , sort = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nЕсть тренд на увеличение количества фотографий по годам.\n\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'publication_month_year'\n    , y = 'last_price'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = False\n    , showgrid_y = True     \n    , sort = False                                           \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nМедианная цена квартиры не сильно изменяется со временем\n\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'publication_month_year'\n    , y = 'total_area'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = False\n    , showgrid_y = True   \n    , sort = False                                             \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nМедианная площадь квартир не сильно меняется со временем\n\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'publication_month_year'\n    , y = 'price_per_sqm'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = False\n    , showgrid_y = True     \n    , sort = False                                           \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nМедианная стоимость квадратного метра практически не меняется со временем\n\n\n\n4.5 Изучение зависимостей между числовыми и категориальными переменными\nПосмотрим на взаимосвязи между числовыми и категориальными переменными.\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'floor_position'\n    , y = 'rooms'  \n    , category = 'price_segment' \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'mean'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nВ премиуме среднее количество комнат больше на всех этажах\n\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'floor_position'\n    , y = 'living_area'  \n    , category = 'price_segment' \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'mean'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nУ премиум площадь квартир больше на всех этажах\n\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'location_zone'\n    , y = 'last_price'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nВ центре медианная стоимость квартир выше\n\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'location_zone'\n    , y = 'total_area'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nВ центре медианная площадь квартир больше\n\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'location_zone'\n    , y = 'rooms'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nВ центре медианное количество комнат больше\n\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'location_zone'\n    , y = 'ceiling_height'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nВ центре медианная высота потолков выше.\n\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'location_zone'\n    , y = 'floors_total'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nСамые высокие дома находятся на средней удаленности от центра\n\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'location_zone'\n    , y = 'days_exposition'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nВ центре медианное количество дней экспозиции больше.\n\n\n\n4.6 Анализ срезов данных\nИзучим объявления в центре и сравним их с объявлениями в целом.\n\n\nShow the code\ndf[df.location_zone == 'Центр'].head()\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_total_ratio\nprice_per_sqm\ncity_centers_nearest_km\nfloor_position\nprice_segment\npublication_weekday\npublication_month\npublication_year\npublication_month_year\nlocation_zone\n\n\n\n\n24\n8\n6500000\n97.2\n2015-10-31\n2\nNaN\n3.0\n46.5\n1\nне указано\n...\n0.20\n66872\n2.0\nпервый\nкомфорт\nСуббота\nОктябрь\n2015\nОкт'15\nЦентр\n\n\n35\n6\n15500000\n149.0\n2017-06-26\n5\nNaN\n5.0\n104.0\n4\nне указано\n...\n0.11\n104026\n4.0\nдругой\nпремиум\nПонедельник\nИюнь\n2017\nИюн'17\nЦентр\n\n\n61\n18\n7990000\n74.0\n2017-08-24\n2\nNaN\n4.0\n43.0\n4\nне указано\n...\n0.27\n107972\n4.0\nпоследний\nкомфорт\nЧетверг\nАвгуст\n2017\nАвг'17\nЦентр\n\n\n63\n2\n20000000\n118.0\n2018-09-11\n3\n3.0\n9.0\n68.0\n7\nне указано\n...\n0.14\n169491\n5.0\nдругой\nпремиум\nВторник\nСентябрь\n2018\nСен'18\nЦентр\n\n\n99\n32\n9600000\n90.0\n2017-09-26\n4\nNaN\n5.0\n67.0\n2\nне указано\n...\n0.09\n106666\n3.0\nдругой\nкомфорт\nВторник\nСентябрь\n2017\nСен'17\nЦентр\n\n\n\n\n5 rows × 33 columns\n\n\n\n\n\nShow the code\ndf_sliced = df[df.location_zone == 'Центр']\ngen_slice = pagri_data_tools.info_gen(df_sliced)\ngen = pagri_data_tools.info_gen(df)\n\n\n Вернуться к выводам\n\n\nShow the code\nprint('Срез датафрейма')\npagri_data_tools.info_column(df_sliced, 'last_price')\nprint('Весь датафрейм')\npagri_data_tools.info_column(df, 'last_price')\n\n\nСрез датафрейма\n\n\n\n        \n            \n\n\n\n\nTable 47: last_price\n\n\n\n\n\nValues\n2 475 (100%)\n\nMax\n763 000 000\n\nAvg\n14 750 097.08\n\n8 500 000 (1%)\n\n\nMissing\n---\n\n95%\n35 619 999.0\n\nMode\n---\n\n7 500 000 (1%)\n\n\nDistinct\n834 (34%)\n\n75%\n14 200 000\n\nRange\n761 400 000\n\n8 000 000 (1%)\n\n\nDuplicates\n1 641 (66%)\n\nMedian\n9 500 000\n\niQR\n7 250 000\n\n12 000 000 (1%)\n\n\nZeros\n---\n\n25%\n6 950 000\n\nstd\n26 020 216.07\n\n9 500 000 (1%)\n\n\nNegative\n---\n\n5%\n4 700 000\n\nkurt\n322.93\n\n9 000 000 (1%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1 600 000\n\nskew\n14.31\n\n10 000 000 (1%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nВесь датафрейм\n\n\n\n        \n            \n\n\n\n\nTable 48: last_price\n\n\n\n\n\nValues\n23 527 (100%)\n\nMax\n763 000 000\n\nAvg\n6 525 185.56\n\n4 500 000 (1%)\n\n\nMissing\n---\n\n95%\n15 253 200.0\n\nMode\n4 500 000\n\n3 500 000 (1%)\n\n\nDistinct\n2 920 (12%)\n\n75%\n6 790 000\n\nRange\n762 570 000\n\n4 000 000 (1%)\n\n\nDuplicates\n20 607 (88%)\n\nMedian\n4 646 000\n\niQR\n3 390 000\n\n4 300 000 (1%)\n\n\nZeros\n---\n\n25%\n3 400 000\n\nstd\n10 836 761.82\n\n4 200 000 (1%)\n\n\nNegative\n---\n\n5%\n1 860 000\n\nkurt\n1309.24\n\n3 600 000 (1%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n430 000\n\nskew\n26.19\n\n3 300 000 (1%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nСреднее и медиана в центре для цены выше почти в 2 раза, чем во всем датафрейме.\n\n Вернуться к выводам\n\n\nShow the code\nprint('Срез датафрейма')\npagri_data_tools.info_column(df_sliced, 'total_area')\nprint('Весь датафрейм')\npagri_data_tools.info_column(df, 'total_area')\n\n\nСрез датафрейма\n\n\n\n        \n            \n\n\n\n\nTable 49: total_area\n\n\n\n\n\nValues\n2 475 (100%)\n\nMax\n631.2\n\nAvg\n95.49\n\n60 (1%)\n\n\nMissing\n---\n\n95%\n197.93\n\nMode\n60\n\n70 (1%)\n\n\nDistinct\n947 (38%)\n\n75%\n112\n\nRange\n619.2\n\n50 (1%)\n\n\nDuplicates\n1 528 (62%)\n\nMedian\n82\n\niQR\n51.95\n\n80 (1%)\n\n\nZeros\n---\n\n25%\n60.05\n\nstd\n58.86\n\n72 &lt;1%\n\n\nNegative\n---\n\n5%\n38.07\n\nkurt\n16.81\n\n110 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n12\n\nskew\n3.09\n\n85 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nВесь датафрейм\n\n\n\n        \n            \n\n\n\n\nTable 50: total_area\n\n\n\n\n\nValues\n23 527 (100%)\n\nMax\n900\n\nAvg\n60.29\n\n45 (2%)\n\n\nMissing\n---\n\n95%\n116\n\nMode\n45\n\n42 (2%)\n\n\nDistinct\n2 155 (9%)\n\n75%\n69.7\n\nRange\n888\n\n31 (1%)\n\n\nDuplicates\n21 372 (91%)\n\nMedian\n52\n\niQR\n29.7\n\n60 (1%)\n\n\nZeros\n---\n\n25%\n40\n\nstd\n35.53\n\n44 (1%)\n\n\nNegative\n---\n\n5%\n31\n\nkurt\n48.04\n\n40 (1%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n12\n\nskew\n4.78\n\n43 (1%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nОбщая площадь в центре больше, чем во всем датафрейме.\n\n Вернуться к выводам\n\n\nShow the code\nprint('Срез датафрейма')\npagri_data_tools.info_column(df_sliced, 'ceiling_height')\nprint('Весь датафрейм')\npagri_data_tools.info_column(df, 'ceiling_height')\n\n\nСрез датафрейма\n\n\n\n        \n            \n\n\n\n\nTable 51: ceiling_height\n\n\n\n\n\nValues\n1 639 (66%)\n\nMax\n4.9\n\nAvg\n3.14\n\n3 (19%)\n\n\nMissing\n836 (34%)\n\n95%\n3.8\n\nMode\n3\n\n3.2 (9%)\n\n\nDistinct\n130 (5%)\n\n75%\n3.34\n\nRange\n2.5\n\n3.5 (6%)\n\n\nDuplicates\n2 344 (95%)\n\nMedian\n3.1\n\niQR\n0.43\n\n2.7 (5%)\n\n\nZeros\n---\n\n25%\n2.91\n\nstd\n0.35\n\n3.1 (5%)\n\n\nNegative\n---\n\n5%\n2.7\n\nkurt\n1.32\n\n3.3 (4%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n2.4\n\nskew\n0.83\n\n2.8 (4%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nВесь датафрейм\n\n\n\n        \n            \n\n\n\n\nTable 52: ceiling_height\n\n\n\n\n\nValues\n14 443 (61%)\n\nMax\n5\n\nAvg\n2.72\n\n2.5 (24%)\n\n\nMissing\n9 084 (39%)\n\n95%\n3.27\n\nMode\n2.5\n\n2.6 (11%)\n\n\nDistinct\n164 (1%)\n\n75%\n2.8\n\nRange\n4\n\n2.7 (11%)\n\n\nDuplicates\n23 362 (99.3%)\n\nMedian\n2.65\n\niQR\n0.29\n\n3 (8%)\n\n\nZeros\n---\n\n25%\n2.51\n\nstd\n0.27\n\n2.8 (7%)\n\n\nNegative\n---\n\n5%\n2.5\n\nkurt\n6.65\n\n2.55 (7%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1\n\nskew\n2.07\n\n2.75 (6%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВысота потолков в центре больше, чем во всем датафрейме\n\n Вернуться к выводам\n\n\nShow the code\nprint('Срез датафрейма')\npagri_data_tools.info_column(df_sliced, 'balcony')\nprint('Весь датафрейм')\npagri_data_tools.info_column(df, 'balcony')\n\n\nСрез датафрейма\n\n\n\n        \n            \n\n\n\n\nTable 53: balcony\n\n\n\n\n\nValues\n931 (38%)\n\nMax\n5\n\nAvg\n0.7\n\n0 (57%)\n\n\nMissing\n1 544 (62%)\n\n95%\n2\n\nMode\n0\n\n1 (24%)\n\n\nDistinct\n6 (&lt;1%)\n\n75%\n1\n\nRange\n5\n\n2 (15%)\n\n\nDuplicates\n2 468 (99.7%)\n\nMedian\n0\n\niQR\n1\n\n4 (2%)\n\n\nZeros\n531 (21%)\n\n25%\n0\n\nstd\n1.0\n\n5 (1%)\n\n\nNegative\n---\n\n5%\n0\n\nkurt\n3.78\n\n3 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n1.79\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nВесь датафрейм\n\n\n\n        \n            \n\n\n\n\nTable 54: balcony\n\n\n\n\n\nValues\n12 064 (51%)\n\nMax\n5\n\nAvg\n1.16\n\n1 (35%)\n\n\nMissing\n11 463 (49%)\n\n95%\n2\n\nMode\n1\n\n0 (30%)\n\n\nDistinct\n6 (&lt;1%)\n\n75%\n2\n\nRange\n5\n\n2 (30%)\n\n\nDuplicates\n23 520 (99.9%)\n\nMedian\n1\n\niQR\n2\n\n5 (2%)\n\n\nZeros\n3 677 (16%)\n\n25%\n0\n\nstd\n1.07\n\n4 (2%)\n\n\nNegative\n---\n\n5%\n0\n\nkurt\n2.51\n\n3 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n1.24\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ центре меньше балконов, чем во всем датафрейме.\n\n\n\nShow the code\nprint('Срез датафрейма')\npagri_data_tools.info_column(df_sliced, 'parks_around3000')\nprint('Весь датафрейм')\npagri_data_tools.info_column(df, 'parks_around3000')\n\n\nСрез датафрейма\n\n\n\n        \n            \n\n\n\n\nTable 55: parks_around3000\n\n\n\n\n\nValues\n2 475 (100%)\n\nMax\n3\n\nAvg\n1.03\n\n1 (36%)\n\n\nMissing\n---\n\n95%\n3\n\nMode\n1\n\n0 (35%)\n\n\nDistinct\n4 (&lt;1%)\n\n75%\n2\n\nRange\n3\n\n2 (18%)\n\n\nDuplicates\n2 471 (99.8%)\n\nMedian\n1\n\niQR\n2\n\n3 (10%)\n\n\nZeros\n873 (35%)\n\n25%\n0\n\nstd\n0.97\n\n\n\n\nNegative\n---\n\n5%\n0\n\nkurt\n-0.64\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n0.61\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nВесь датафрейм\n\n\n\n        \n            \n\n\n\n\nTable 56: parks_around3000\n\n\n\n\n\nValues\n18 037 (77%)\n\nMax\n3\n\nAvg\n0.61\n\n0 (56%)\n\n\nMissing\n5 490 (23%)\n\n95%\n2\n\nMode\n0\n\n1 (31%)\n\n\nDistinct\n4 (&lt;1%)\n\n75%\n1\n\nRange\n3\n\n2 (10%)\n\n\nDuplicates\n23 522 (99.9%)\n\nMedian\n0\n\niQR\n1\n\n3 (4%)\n\n\nZeros\n10 027 (43%)\n\n25%\n0\n\nstd\n0.8\n\n\n\n\nNegative\n---\n\n5%\n0\n\nkurt\n0.87\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n1.23\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ центре больше парков.\n\n\n\nShow the code\nprint('Срез датафрейма')\npagri_data_tools.info_column(df_sliced, 'days_exposition')\nprint('Весь датафрейм')\npagri_data_tools.info_column(df, 'days_exposition')\n\n\nСрез датафрейма\n\n\n\n        \n            \n\n\n\n\nTable 57: days_exposition\n\n\n\n\n\nValues\n2 063 (83%)\n\nMax\n1 572\n\nAvg\n263.26\n\n90.0 (3%)\n\n\nMissing\n412 (17%)\n\n95%\n885.8\n\nMode\n90.0\n\n60 (3%)\n\n\nDistinct\n697 (28%)\n\n75%\n369.5\n\nRange\n1 569\n\n30 &lt;1%\n\n\nDuplicates\n1 777 (72%)\n\nMedian\n150\n\niQR\n308.5\n\n4 &lt;1%\n\n\nZeros\n---\n\n25%\n61\n\nstd\n286.65\n\n61 &lt;1%\n\n\nNegative\n---\n\n5%\n12.0\n\nkurt\n2.68\n\n89.0 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n3.0\n\nskew\n1.69\n\n9 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nВесь датафрейм\n\n\n\n        \n            \n\n\n\n\nTable 58: days_exposition\n\n\n\n\n\nValues\n20 364 (87%)\n\nMax\n1 580\n\nAvg\n180.74\n\n45.0 (4%)\n\n\nMissing\n3 163 (13%)\n\n95%\n647.85\n\nMode\n45.0\n\n60 (3%)\n\n\nDistinct\n1 139 (5%)\n\n75%\n231\n\nRange\n1 579\n\n7 (1%)\n\n\nDuplicates\n22 387 (95%)\n\nMedian\n95\n\niQR\n186\n\n30 (1%)\n\n\nZeros\n---\n\n25%\n45.0\n\nstd\n219.76\n\n90.0 &lt;1%\n\n\nNegative\n---\n\n5%\n9\n\nkurt\n6.28\n\n4 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1\n\nskew\n2.31\n\n3.0 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ центре объявления дольше находятся в экспозиции.\n\n Вернуться к выводам\n\n\nShow the code\nprint('Срез датафрейма')\npagri_data_tools.info_column(df_sliced, 'price_segment')\nprint('Весь датафрейм')\npagri_data_tools.info_column(df, 'price_segment')\n\n\nСрез датафрейма\n\n\n\n        \n            \n\n\n\n\nTable 59: price_segment\n\n\n\n\n\nValues\n2 475 (100%)\n\nкомфорт (52%)\n\n\nMissing\n---\n\nпремиум (45%)\n\n\nDistinct\n3 (&lt;1%)\n\nэконом (3%)\n\n\nDuplicated origin\n2 472 (99.9%)\n\n\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nВесь датафрейм\n\n\n\n        \n            \n\n\n\n\nTable 60: price_segment\n\n\n\n\n\nValues\n23 527 (100%)\n\nкомфорт (50%)\n\n\nMissing\n---\n\nэконом (38%)\n\n\nDistinct\n3 (&lt;1%)\n\nпремиум (11%)\n\n\nDuplicated origin\n23 524 (99.9%)\n\n\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ центре меньше эконома и больше премиум квартир.\n\nПосмотрим на цену квадратного метра в 10 населенных пунктах с наибольшим количеством объявлений.\n\n\nShow the code\nselected_cities = df.groupby('locality_name').size().rename('count').sort_values(ascending=False).to_frame().head(10)\nselected_cities\n\n\n\n\n\n\n\n\n\ncount\n\n\nlocality_name\n\n\n\n\n\nСанкт-Петербург\n15625\n\n\nпосёлок Мурино\n518\n\n\nпосёлок Шушары\n439\n\n\nВсеволожск\n398\n\n\nПушкин\n369\n\n\nКолпино\n338\n\n\nпосёлок Парголово\n327\n\n\nГатчина\n306\n\n\nдеревня Кудрово\n299\n\n\nВыборг\n237\n\n\n\n\n\n\n\n\n\nShow the code\nselected_cities = selected_cities.index\n\n\nПосмотрим на среднюю цену квадратного метра в этих населённых пунктах.\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df[df.locality_name.isin(selected_cities)]\n    , x = 'locality_name'\n    , x_axis_label = 'Название населённого пункта'\n    , y = 'price_per_sqm'\n    , y_axis_label = 'Цена квадратного метра'\n    , title = 'Цена кв метра в зависимости от населенного пункта'\n    , func = 'mean'\n    , width = None\n    , height = None\n    , orientation = 'v'\n)\npagri_data_tools.bar(config)\n\n\n                                                \n\n\nНаблюдения:\n\nСанкт–Петербург, Пушкин и деревня Кудрово имеют самую большую цену квадратного метра.\n\n\n\n4.7 Промежуточный вывод\n\nСильная положительная корреляция между жилой площадью и общей площадью\nСильная положительная корреляция между числом комнат и общей площадью\nСильная положительная корреляция между числом комнат и жилой площадью\nСильная отрицательная корреляция между отношением площади кухни к общей площади и отношением жилой площади к общей площади\nУмеренная положительная корреляция между площадью кухни и общей площадью\nУмеренная положительная корреляция между ценой и общей площадью\nУмеренная положительная корреляция между ценой и жилой площадью\nУмеренная положительная корреляция между ценой и площадью кухни\nУмеренная положительная корреляция между ценой и жилой площадью\nОбщая площадь является самым значимым признаком для предсказания цены квартиры. Число дней экспозиции находится на втором месте.\nС ростом цены растет общая площадь, жилая площадь и площадь кухни.\nЕсть небольшая зависимость между ценой и количеством этажей. Чем больше цена, тем меньше этажей.\nЭто скорее всего связано с тем, что старые дома имеют меньше этажей и загородные дома имеют также меньше этажей.\nМожно заметить, что чем ближе к центру или парку, тем дороже стоит квартира.\nЧем больше число комнат, тем больше общая площадь.\n\nЧем больше число комнат, тем больше жилая площадь.\n\nВ воскресенье и субботу меньше всего публикаций\nБольше всего объявлений со средней удаленностью от центра.\nЕсть тренд на увеличение количества фотографий по годам.\nМедианная цена квартиры не сильно изменяется со временем\nМедианная площадь квартир не сильно меняется со временем\nМедианная стоимость квадратного метра практически не меняется со временем\nВ премиуме среднее количество комнат больше на всех этажах\nУ премиум площадь квартир больше на всех этажах\nВ центре медианная стоимость квартир выше\nВ центре медианная площадь квартир больше\nВ центре медианное количество комнат больше\nВ центре медианная высота потолков выше.\nСамые высокие дома находятся на средней удаленности от центра\nВ центре медианное количество дней экспозиции больше.\nСреднее и медиана в центре для цены выше почти в 2 раза, чем во всем датафрейме.\nОбщая площадь в центре больше, чем во всем датафрейме.\nВысота потолков в центре больше, чем во всем датафрейме\nВ центре меньше балконов, чем во всем датафрейме.\nВ центре объявления дольше находятся в экспозиции.\nВ центре меньше эконома и больше премиум квартир.\n\nСанкт–Петербург, Пушкин и деревня Кудрово имеют самую большую цену квадратного метра."
  },
  {
    "objectID": "projects/housing-ads-investigation/housing_ads_investigation.html#оглавление",
    "href": "projects/housing-ads-investigation/housing_ads_investigation.html#оглавление",
    "title": "Исследование объявлений о продаже квартир",
    "section": "Оглавление",
    "text": "Оглавление\n\n\nРекомендации:\n- Добавить контроль ввода слишком больших и слишком маленьких значений для цены, высоты потолка.\n- Добавить контроль ввода для количества комнат, чтобы исключить ввод нулевых значений.\n- Выяснить почему пропуски в колонках с количеством парков рядом, количеством прудов рядом,\nрасстоянием до центра, расстоянием до аэропорта в одних и тех же строках.\n\n1. Загрузка библиотек\n\n\nShow the code\n%load_ext autoreload\n%autoreload 2\nimport pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport pagri_data_tools  # type: ignore\n\n\n\n\n2. Описание и изучение данных\n\n2.1 Описание данных\nПо каждой квартире на продажу доступны два вида данных. Первые вписаны пользователем, вторые — получены автоматически на основе картографических данных.\nНапример, расстояние до центра, аэропорта, ближайшего парка и водоёма.\n\nairports_nearest - расстояние до ближайшего аэропорта в метрах (м)\nbalcony - число балконов\nceiling_height - высота потолков (м)\ncityCenters_nearest - расстояние до центра города (м)\ndays_exposition - сколько дней было размещено объявление (от публикации до снятия)\nfirst_day_exposition - дата публикации\nfloor - этаж\nfloors_total - всего этажей в доме\nis_apartment - апартаменты (булев тип)\nkitchen_area - площадь кухни в квадратных метрах (м²)\nlast_price - цена на момент снятия с публикации\nliving_area - жилая площадь в квадратных метрах(м²)\nlocality_name - название населённого пункта\nopen_plan - свободная планировка (булев тип)\nparks_around3000 - число парков в радиусе 3 км\nparks_nearest - расстояние до ближайшего парка (м)\nponds_around3000 - число водоёмов в радиусе 3 км\nponds_nearest - расстояние до ближайшего водоёма (м)\nrooms - число комнат\nstudio - квартира-студия (булев тип)\ntotal_area - площадь квартиры в квадратных метрах (м²)\ntotal_images - число фотографий квартиры в объявлении\n\n\n\n2.2 Изучение данных\n\n2.2.1 Изучение переменных\nОставим тип float, так как у нас пропуски в данных и мы не можем преобразовать нужные столбцы в int\n\n\nShow the code\ndtype = {'is_apartment': 'category', 'studio': 'category', 'open_plan': 'category'}\ndf = pd.read_csv('https://code.s3.yandex.net/datasets/real_estate_data.csv', dtype=dtype, sep='\\t'\n                , parse_dates=['first_day_exposition'], date_format='%Y-%m-%dT%H:%M:%S')\ndf.rename(columns={'cityCenters_nearest': 'city_centers_nearest'}, inplace=True)\ndf.sample(5, random_state=7)\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n6029\n7\n4200000.0\n42.00\n2017-12-05\n2\n2.58\n5.0\n28.5\n5\nNaN\n...\n5.00\nNaN\nСанкт-Петербург\n36416.0\n9534.0\n2.0\n446.0\n3.0\n459.0\n18.0\n\n\n21836\n7\n3950000.0\n45.00\n2015-06-10\n2\nNaN\n9.0\n28.0\n7\nNaN\n...\n7.00\n0.0\nСанкт-Петербург\n27880.0\n12138.0\n1.0\n638.0\n1.0\n593.0\n437.0\n\n\n5698\n7\n450000.0\n42.00\n2017-07-31\n2\nNaN\n1.0\n23.0\n1\nNaN\n...\n5.80\nNaN\nгородской посёлок Будогощь\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n233.0\n\n\n9402\n11\n4900000.0\n55.00\n2017-06-19\n2\nNaN\n14.0\n32.0\n14\nNaN\n...\n8.50\n2.0\nСанкт-Петербург\n39931.0\n12834.0\n0.0\nNaN\n0.0\nNaN\n15.0\n\n\n2519\n6\n3511000.0\n39.41\n2018-08-07\n1\n2.65\n27.0\nNaN\n12\nNaN\n...\n11.28\n1.0\nпосёлок Мурино\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n60.0\n\n\n\n\n5 rows × 22 columns\n\n\n\nИзучим каждую колонку отдельно\n\n\nShow the code\ngen = pagri_data_tools.info_gen(df)\nnext(gen)\n\n\n\n\n\n\n\nTable 1: DataFrame\n\n\n\n\n\nRows\nFeatures\nRAM (Mb)\nDuplicates\nDupl (sub - origin)\n\n\n\n\n23 699\n22\n5\n---\n---\n\n\n\n\n\n\n\n\nНаблюдения: - Полных дубликатов в датафрейме нет\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 2: first_day_exposition\n\n\n\n\n\nFirst date\n2014-11-27 00:00:00\n\nZeros\n---\n\nYears missing\n0%\n\n\n\nLast date\n2019-05-03 00:00:00\n\nMissing\n---\n\nMonths missing\n0%\n\n\n\nValues\n23 699 (100%)\n\nDistinct\n1 491 (6%)\n\nWeeks missing\n0%\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\nDuplicates\n22 208 (94%)\n\nDays missing\n8%\n\n\n\n\n\n\n\n\n\n        \n        \n\n\nНаблюдения: - В колонке с датой пропущенных значений нет. - Нет пропущенных годов и месяцев. - 8 процентов дней пропущено\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 3: total_images\n\n\n\n\n\nValues\n23 699 (100%)\n\nMax\n50\n\nAvg\n9.86\n\n10 (8%)\n\n\nMissing\n---\n\n95%\n20\n\nMode\n10\n\n9 (7%)\n\n\nDistinct\n38 (&lt;1%)\n\n75%\n14\n\nRange\n50\n\n20 (7%)\n\n\nDuplicates\n23 661 (99.8%)\n\nMedian\n9\n\niQR\n8\n\n8 (7%)\n\n\nZeros\n1 059 (4%)\n\n25%\n6\n\nstd\n5.68\n\n7 (6%)\n\n\nNegative\n---\n\n5%\n1\n\nkurt\n-0.34\n\n6 (6%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n0.26\n\n11 (6%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - В колонке с количеством фотографий пропусков нет - 4 процента записей с нулями, это нормально, поскольку у части объявлений нет изображений. - Максимальное количество фотографий 50. Это многовато, нужно будет это проверить. - Медианное значение 9, похоже на правду. - 7 процентов записей имеют 20 фотографий.\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 4: last_price\n\n\n\n\n\nValues\n23 699 (100%)\n\nMax\n763 000 000\n\nAvg\n6 541 548.77\n\n4 500 000 (1%)\n\n\nMissing\n---\n\n95%\n15 300 000\n\nMode\n4 500 000\n\n3 500 000 (1%)\n\n\nDistinct\n2 978 (13%)\n\n75%\n6 800 000\n\nRange\n762 987 810\n\n4 300 000 (1%)\n\n\nDuplicates\n20 721 (87%)\n\nMedian\n4 650 000\n\niQR\n3 400 000\n\n4 000 000 (1%)\n\n\nZeros\n---\n\n25%\n3 400 000\n\nstd\n10 887 013.27\n\n4 200 000 (1%)\n\n\nNegative\n---\n\n5%\n1 870 000\n\nkurt\n1277.68\n\n3 600 000 (1%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n12 190\n\nskew\n25.80\n\n3 300 000 (1%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - В цене есть выбросы. - Минимальное значение цены 12 190 и максимальное значение 763 млн выглядят подозрительно.\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 5: total_area\n\n\n\n\n\nValues\n23 699 (100%)\n\nMax\n900\n\nAvg\n60.35\n\n45 (2%)\n\n\nMissing\n---\n\n95%\n116\n\nMode\n45\n\n42 (2%)\n\n\nDistinct\n2 182 (9%)\n\n75%\n69.9\n\nRange\n888\n\n60 (1%)\n\n\nDuplicates\n21 517 (91%)\n\nMedian\n52\n\niQR\n29.9\n\n31 (1%)\n\n\nZeros\n---\n\n25%\n40\n\nstd\n35.65\n\n44 (1%)\n\n\nNegative\n---\n\n5%\n31\n\nkurt\n47.52\n\n40 (1%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n12\n\nskew\n4.77\n\n43 (1%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - Максимальная площадь в 900 квадратов. - Также нужно проверить площадь 12 квадратов\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 6: rooms\n\n\n\n\n\nValues\n23 699 (100%)\n\nMax\n19\n\nAvg\n2.07\n\n1 (34%)\n\n\nMissing\n---\n\n95%\n4\n\nMode\n1\n\n2 (34%)\n\n\nDistinct\n17 (&lt;1%)\n\n75%\n3\n\nRange\n19\n\n3 (25%)\n\n\nDuplicates\n23 682 (99.9%)\n\nMedian\n2\n\niQR\n2\n\n4 (5%)\n\n\nZeros\n197 (1%)\n\n25%\n1\n\nstd\n1.08\n\n5 (1%)\n\n\nNegative\n---\n\n5%\n1\n\nkurt\n8.69\n\n0 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n1.52\n\n6 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - Есть квартиры с 0 комнат, возможно так обозначили студии. - Максимальное количество комнат 19 нужно изучить. - Треть квартир с 1 комнатой и треть квартир с двумя комнатами. Четверть с 3 комнатами. - Квартир с 4 и более команд около 6 процентов.\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 7: ceiling_height\n\n\n\n\n\nValues\n14 504 (61%)\n\nMax\n100\n\nAvg\n2.77\n\n2.5 (24%)\n\n\nMissing\n9 195 (39%)\n\n95%\n3.3\n\nMode\n2.5\n\n2.6 (11%)\n\n\nDistinct\n183 (1%)\n\n75%\n2.8\n\nRange\n99\n\n2.7 (11%)\n\n\nDuplicates\n23 515 (99.2%)\n\nMedian\n2.65\n\niQR\n0.28\n\n3 (8%)\n\n\nZeros\n---\n\n25%\n2.52\n\nstd\n1.26\n\n2.8 (7%)\n\n\nNegative\n---\n\n5%\n2.5\n\nkurt\n2627.14\n\n2.55 (7%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1\n\nskew\n41.71\n\n2.75 (6%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - В высоте потолков пропуски (39 процентов) - Явный выброс 100 в высоте потолков.\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 8: floors_total\n\n\n\n\n\nValues\n23 613 (99.6%)\n\nMax\n60\n\nAvg\n10.67\n\n5 (25%)\n\n\nMissing\n86 (&lt;1%)\n\n95%\n25\n\nMode\n5\n\n9 (16%)\n\n\nDistinct\n36 (&lt;1%)\n\n75%\n16\n\nRange\n59\n\n16 (6%)\n\n\nDuplicates\n23 662 (99.8%)\n\nMedian\n9\n\niQR\n11\n\n12 (6%)\n\n\nZeros\n---\n\n25%\n5\n\nstd\n6.6\n\n4 (5%)\n\n\nNegative\n---\n\n5%\n4\n\nkurt\n0.04\n\n10 (5%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1\n\nskew\n0.94\n\n25 (5%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - В количестве этажей есть пропуски (меньше 1 процента) - Максимальное количество этаже 60 нужно проверить. - Больше всего пятиэтажек (25 процентов)\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 9: living_area\n\n\n\n\n\nValues\n21 796 (92%)\n\nMax\n409.7\n\nAvg\n34.46\n\n18 (4%)\n\n\nMissing\n1 903 (8%)\n\n95%\n69\n\nMode\n18\n\n17 (3%)\n\n\nDistinct\n1 782 (8%)\n\n75%\n42.3\n\nRange\n407.7\n\n30 (3%)\n\n\nDuplicates\n21 916 (92%)\n\nMedian\n30\n\niQR\n23.7\n\n16 (2%)\n\n\nZeros\n---\n\n25%\n18.6\n\nstd\n22.03\n\n20 (2%)\n\n\nNegative\n---\n\n5%\n15.2\n\nkurt\n31.36\n\n28 (2%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n2\n\nskew\n3.91\n\n31 (2%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - В жилой площади 8 процентов пропусков. - Нужно проверить минимальную и максимальную жилую площади.\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 10: floor\n\n\n\n\n\nValues\n23 699 (100%)\n\nMax\n33\n\nAvg\n5.89\n\n2 (14%)\n\n\nMissing\n---\n\n95%\n16\n\nMode\n2\n\n3 (13%)\n\n\nDistinct\n33 (&lt;1%)\n\n75%\n8\n\nRange\n32\n\n1 (12%)\n\n\nDuplicates\n23 666 (99.9%)\n\nMedian\n4\n\niQR\n6\n\n4 (12%)\n\n\nZeros\n---\n\n25%\n2\n\nstd\n4.89\n\n5 (11%)\n\n\nNegative\n---\n\n5%\n1\n\nkurt\n2.33\n\n6 (6%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1\n\nskew\n1.55\n\n7 (5%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - Больше всего квартир с 1 по 5 этаж. Это логично, учитывая, что у нас больше всего пятиэтажек.\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 11: kitchen_area\n\n\n\n\n\nValues\n21 421 (90%)\n\nMax\n112\n\nAvg\n10.57\n\n6 (6%)\n\n\nMissing\n2 278 (10%)\n\n95%\n20\n\nMode\n6\n\n10 (6%)\n\n\nDistinct\n971 (4%)\n\n75%\n12\n\nRange\n110.7\n\n8 (5%)\n\n\nDuplicates\n22 727 (96%)\n\nMedian\n9.1\n\niQR\n5\n\n9 (5%)\n\n\nZeros\n---\n\n25%\n7\n\nstd\n5.91\n\n7 (5%)\n\n\nNegative\n---\n\n5%\n5.5\n\nkurt\n33.76\n\n11 (4%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1.3\n\nskew\n4.21\n\n12 (3%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - В площади кухни 10 процентов пропусков.\n- Нужно проверить опять же максимальные и минимальные кухонные площади.\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 12: balcony\n\n\n\n\n\nValues\n12 180 (51%)\n\nMax\n5\n\nAvg\n1.15\n\n1 (34%)\n\n\nMissing\n11 519 (49%)\n\n95%\n2\n\nMode\n1\n\n0 (31%)\n\n\nDistinct\n6 (&lt;1%)\n\n75%\n2\n\nRange\n5\n\n2 (30%)\n\n\nDuplicates\n23 692 (99.9%)\n\nMedian\n1\n\niQR\n2\n\n5 (2%)\n\n\nZeros\n3 758 (16%)\n\n25%\n0\n\nstd\n1.07\n\n4 (2%)\n\n\nNegative\n---\n\n5%\n0\n\nkurt\n2.51\n\n3 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n1.24\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - В числе балконов 49 процентов пропусков. Скорее всего пропуски это отсутствие балкона.\n- Треть квартир без балконов, также по трети квартир с 1 и 2 балконами.\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 13: airports_nearest\n\n\n\n\n\nValues\n18 157 (77%)\n\nMax\n84 869\n\nAvg\n28 793.67\n\n37 434 &lt;1%\n\n\nMissing\n5 542 (23%)\n\n95%\n51 340\n\nMode\n37 434\n\n21 928 &lt;1%\n\n\nDistinct\n8 275 (35%)\n\n75%\n37 273\n\nRange\n84 869\n\n44 870 &lt;1%\n\n\nDuplicates\n15 423 (65%)\n\nMedian\n26 726\n\niQR\n18 688\n\n39 946 &lt;1%\n\n\nZeros\n1 (&lt;1%)\n\n25%\n18 585\n\nstd\n12 630.88\n\n18 732 &lt;1%\n\n\nNegative\n---\n\n5%\n11 557.4\n\nkurt\n-0.29\n\n37 407 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n0.54\n\n39 140 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - В расстоянии до ближайшего аэропорта 23 процента пропусков. - 1 нулевое значение\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 14: city_centers_nearest\n\n\n\n\n\nValues\n18 180 (77%)\n\nMax\n65 968\n\nAvg\n14 191.28\n\n8 460 &lt;1%\n\n\nMissing\n5 519 (23%)\n\n95%\n31 671.6\n\nMode\n8 460\n\n20 802 &lt;1%\n\n\nDistinct\n7 642 (32%)\n\n75%\n16 293\n\nRange\n65 787\n\n10 720 &lt;1%\n\n\nDuplicates\n16 056 (68%)\n\nMedian\n13 098.5\n\niQR\n7 055\n\n20 444 &lt;1%\n\n\nZeros\n---\n\n25%\n9 238\n\nstd\n8 608.39\n\n8 434 &lt;1%\n\n\nNegative\n---\n\n5%\n3 541\n\nkurt\n4.36\n\n8 370 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n181\n\nskew\n1.67\n\n10 364 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - В расстоянии до центр города 23 процента пропусков.\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 15: parks_around3000\n\n\n\n\n\nValues\n18 181 (77%)\n\nMax\n3\n\nAvg\n0.61\n\n0 (56%)\n\n\nMissing\n5 518 (23%)\n\n95%\n2\n\nMode\n0\n\n1 (31%)\n\n\nDistinct\n4 (&lt;1%)\n\n75%\n1\n\nRange\n3\n\n2 (10%)\n\n\nDuplicates\n23 694 (99.9%)\n\nMedian\n0\n\niQR\n1\n\n3 (4%)\n\n\nZeros\n10 106 (43%)\n\n25%\n0\n\nstd\n0.8\n\n\n\n\nNegative\n---\n\n5%\n0\n\nkurt\n0.87\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n1.23\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - В колонке с количеством парков рядом 23 процента пропусков.\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 16: parks_nearest\n\n\n\n\n\nValues\n8 079 (34%)\n\nMax\n3 190\n\nAvg\n490.8\n\n441 &lt;1%\n\n\nMissing\n15 620 (66%)\n\n95%\n968\n\nMode\n441\n\n173 &lt;1%\n\n\nDistinct\n995 (4%)\n\n75%\n612\n\nRange\n3 189\n\n392 &lt;1%\n\n\nDuplicates\n22 703 (96%)\n\nMedian\n455\n\niQR\n324\n\n456 &lt;1%\n\n\nZeros\n---\n\n25%\n288\n\nstd\n342.32\n\n471 &lt;1%\n\n\nNegative\n---\n\n5%\n95.9\n\nkurt\n12.22\n\n2 102 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1\n\nskew\n2.72\n\n541 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - В колонке с расстоянием до ближайшего парка 66 процентов пропусков.\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 17: ponds_around3000\n\n\n\n\n\nValues\n18 181 (77%)\n\nMax\n3\n\nAvg\n0.77\n\n0 (50%)\n\n\nMissing\n5 518 (23%)\n\n95%\n3\n\nMode\n0\n\n1 (31%)\n\n\nDistinct\n4 (&lt;1%)\n\n75%\n1\n\nRange\n3\n\n2 (10%)\n\n\nDuplicates\n23 694 (99.9%)\n\nMedian\n1\n\niQR\n1\n\n3 (8%)\n\n\nZeros\n9 071 (38%)\n\n25%\n0\n\nstd\n0.94\n\n\n\n\nNegative\n---\n\n5%\n0\n\nkurt\n0.17\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n1.07\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - В колонке с количеством прудов 23 процента пропусков, скорее всего это отсутствие парков.\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 18: ponds_nearest\n\n\n\n\n\nValues\n9 110 (38%)\n\nMax\n1 344\n\nAvg\n517.98\n\n427 &lt;1%\n\n\nMissing\n14 589 (62%)\n\n95%\n976.55\n\nMode\n427\n\n454 &lt;1%\n\n\nDistinct\n1 096 (5%)\n\n75%\n729\n\nRange\n1 331\n\n153 &lt;1%\n\n\nDuplicates\n22 602 (95%)\n\nMedian\n502\n\niQR\n435\n\n433 &lt;1%\n\n\nZeros\n---\n\n25%\n294\n\nstd\n277.72\n\n474 &lt;1%\n\n\nNegative\n---\n\n5%\n93\n\nkurt\n-0.73\n\n564 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n13\n\nskew\n0.22\n\n303 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - В колонке с расстоянием до ближайшего пруда 62 процента пропусков.\n  Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 19: days_exposition\n\n\n\n\n\nValues\n20 518 (87%)\n\nMax\n1 580\n\nAvg\n180.89\n\n45.0 (4%)\n\n\nMissing\n3 181 (13%)\n\n95%\n647\n\nMode\n45.0\n\n60 (3%)\n\n\nDistinct\n1 141 (5%)\n\n75%\n232\n\nRange\n1 579\n\n7 (1%)\n\n\nDuplicates\n22 557 (95%)\n\nMedian\n95\n\niQR\n187\n\n30 (1%)\n\n\nZeros\n---\n\n25%\n45.0\n\nstd\n219.73\n\n90.0 &lt;1%\n\n\nNegative\n---\n\n5%\n9\n\nkurt\n6.28\n\n4 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1\n\nskew\n2.31\n\n3.0 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - В среднем объявление находится в продаже 180 дней, но из за выбросов оно не совсем точно описывает ситуацию. - Лучше использовать медиану. Она составляет 95 дней. - Чаще всего объявления находятся в продаже 45 дней. - В колонке с количеством дней экспозиции 13 процентов пропусков. - Максимальное значение в 1580 дней похоже на выброс.\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 20: is_apartment\n\n\n\n\n\nValues\n2 775 (12%)\n\nFalse (98%)\n\n\nMissing\n20 924 (88%)\n\nTrue (2%)\n\n\nDistinct\n2 (&lt;1%)\n\n\n\n\nDuplicated origin\n23 696 (99.9%)\n\n\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - В колонке с признаком является ли квартира апартаментом 88 процентов пропусков. Скорее всего эти квартиры не являются апартаментами.\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 21: studio\n\n\n\n\n\nValues\n23 699 (100%)\n\nFalse (99%)\n\n\nMissing\n---\n\nTrue &lt;1%\n\n\nDistinct\n2 (&lt;1%)\n\n\n\n\nDuplicated origin\n23 697 (99.9%)\n\n\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - Студий меньше 1 процента.\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 22: open_plan\n\n\n\n\n\nValues\n23 699 (100%)\n\nFalse (100%)\n\n\nMissing\n---\n\nTrue &lt;1%\n\n\nDistinct\n2 (&lt;1%)\n\n\n\n\nDuplicated origin\n23 697 (99.9%)\n\n\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - Почти все квартиры с открытой планировкой.\n Вернуться к выводам\n\n\nShow the code\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 23: locality_name\n\n\n\n\n\nValues\n23 650 (99.8%)\n\nСанкт-Петербург (66%)\n\n\nMissing\n49 (&lt;1%)\n\nпосёлок Мурино (2%)\n\n\nDistinct\n364 (2%)\n\nпосёлок Шушары (2%)\n\n\nDuplicated origin\n23 334 (98%)\n\nВсеволожск (2%)\n\n\nDupl (modify - origin)\n---\n\nПушкин (2%)\n\n\nEmpty\n---\n\nКолпино (1%)\n\n\nRAM (Mb)\n2\n\nпосёлок Парголово (1%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения: - В колонке с названием населенного пункта 49 пропущенных значений (меньше 1 процента)\n\n\n2.2.2 Изучение дубликатов\nПосмотрим на дубли во всем датафрейме\n\n\nShow the code\npagri_data_tools.check_duplicated(df)\n\n\n'no duplicates'\n\n\nПолных дубликатов у нас нет.\nПосмотрим сколько у нас дублей в каждой колонке\n\n\nShow the code\nseries_duplicated = pagri_data_tools.find_columns_with_duplicates(df)\n\n\n\n\n\n\n\nTable 24: Duplicates\n\n\n\n\n\ntotal_images\n23661 (99.84%)\n\n\nlast_price\n20721 (87.43%)\n\n\ntotal_area\n21517 (90.79%)\n\n\nfirst_day_exposition\n22208 (93.71%)\n\n\nrooms\n23682 (99.93%)\n\n\nceiling_height\n23515 (99.22%)\n\n\nfloors_total\n23662 (99.84%)\n\n\nliving_area\n21916 (92.48%)\n\n\nfloor\n23666 (99.86%)\n\n\nis_apartment\n23696 (99.99%)\n\n\nstudio\n23697 (99.99%)\n\n\nopen_plan\n23697 (99.99%)\n\n\nkitchen_area\n22727 (95.90%)\n\n\nbalcony\n23692 (99.97%)\n\n\nlocality_name\n23334 (98.46%)\n\n\nairports_nearest\n15423 (65.08%)\n\n\ncity_centers_nearest\n16056 (67.75%)\n\n\nparks_around3000\n23694 (99.98%)\n\n\nparks_nearest\n22703 (95.80%)\n\n\nponds_around3000\n23694 (99.98%)\n\n\nponds_nearest\n22602 (95.37%)\n\n\ndays_exposition\n22557 (95.18%)\n\n\n\n\n\n\n\n\nУ нас нет столбцов, в которых данные должны быть уникальны, поэтому проверять на дубли нечего.\n\n\n2.2.3 Изучение пропусков\nПосмотрим на столбцы, в которых есть пропуски.\n\n\nShow the code\nseries_missed = pagri_data_tools.find_columns_with_missing_values(df)\n\n\n\n\n\n\n\nTable 25: Missings\n\n\n\n\n\nceiling_height\n9195 (38.80%)\n\n\nfloors_total\n86 (0.36%)\n\n\nliving_area\n1903 (8.03%)\n\n\nis_apartment\n20924 (88.29%)\n\n\nkitchen_area\n2278 (9.61%)\n\n\nbalcony\n11519 (48.61%)\n\n\nlocality_name\n49 (0.21%)\n\n\nairports_nearest\n5542 (23.38%)\n\n\ncity_centers_nearest\n5519 (23.29%)\n\n\nparks_around3000\n5518 (23.28%)\n\n\nparks_nearest\n15620 (65.91%)\n\n\nponds_around3000\n5518 (23.28%)\n\n\nponds_nearest\n14589 (61.56%)\n\n\ndays_exposition\n3181 (13.42%)\n\n\n\n\n\n\n\n\nУ нас есть пропуски в площадях. Посмотрим как они распределены.\nПосмотрим есть ли пропуски сразу во всех площадях.\n\n\nShow the code\ndf_na_in_both_columns = pagri_data_tools.check_na_in_both_columns(df, ['total_area', 'living_area', 'kitchen_area'])\ndf_na_in_both_columns.head()\n\n\n0 (0.00%) rows with missings simultaneously in ['total_area', 'living_area', 'kitchen_area']\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n\n\n0 rows × 22 columns\n\n\n\nПропусков одновременно во всех столбцах с площадями нет.\nПосмотрим на строки датафрейма, где пропуски во всех площадях.\n\n\nShow the code\nseries_missed['living_area'][['total_area', 'living_area', 'kitchen_area']].sample(10)\n\n\n\n\n\n\n\n\n\ntotal_area\nliving_area\nkitchen_area\n\n\n\n\n1673\n38.0\nNaN\nNaN\n\n\n6934\n95.0\nNaN\nNaN\n\n\n1484\n43.6\nNaN\nNaN\n\n\n14540\n134.0\nNaN\nNaN\n\n\n5787\n88.0\nNaN\nNaN\n\n\n9701\n114.0\nNaN\nNaN\n\n\n8111\n70.2\nNaN\n24.7\n\n\n11007\n64.8\nNaN\nNaN\n\n\n17858\n120.0\nNaN\nNaN\n\n\n18919\n40.0\nNaN\nNaN\n\n\n\n\n\n\n\nУ нас нет пропусков в общей площади. Поэтому мы сможем заменить значения пропусков в площади кухни и жилой площади.\nМожно заметить, что количество пропусков в колонке с количеством парков рядом, количеством прудов рядом совпадает, расстоянием до центра, расстоянием до аэропорта примерно равны. Выдвигаем гипотезу, что пропуски в одних и тех же строках в обоих столбцах.\nПосмотрим сколько пропусков в обоих колонках вместе\n Вернуться к выводам\n\n\nShow the code\ndf_na_in_both_columns = pagri_data_tools.check_na_in_both_columns(df, ['airports_nearest', 'city_centers_nearest', 'parks_around3000', 'ponds_around3000'])\ndf_na_in_both_columns.head()\n\n\n5518 (23.28%) rows with missings simultaneously in ['airports_nearest', 'city_centers_nearest', 'parks_around3000', 'ponds_around3000']\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n5\n10\n2890000.0\n30.40\n2018-09-10\n1\nNaN\n12.0\n14.40\n5\nNaN\n...\n9.10\nNaN\nгородской посёлок Янино-1\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n55.0\n\n\n8\n20\n2900000.0\n33.16\n2018-05-23\n1\nNaN\n27.0\n15.43\n26\nNaN\n...\n8.81\nNaN\nпосёлок Мурино\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n189.0\n\n\n12\n10\n3890000.0\n54.00\n2016-06-30\n2\nNaN\n5.0\n30.00\n5\nNaN\n...\n9.00\n0.0\nСертолово\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n90.0\n\n\n22\n20\n5000000.0\n58.00\n2017-04-24\n2\n2.75\n25.0\n30.00\n15\nNaN\n...\n11.00\n2.0\nдеревня Кудрово\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n60.0\n\n\n30\n12\n2200000.0\n32.80\n2018-02-19\n1\nNaN\n9.0\nNaN\n2\nNaN\n...\nNaN\nNaN\nКоммунар\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n63.0\n\n\n\n\n5 rows × 22 columns\n\n\n\nГипотеза подтвердилась: - Пропуски в одних и тех же строках в колонках с количеством парков рядом, количеством прудов рядом совпадает, расстоянием до центра, расстоянием до аэропорта примерно равны\nПосмотрим как распределены пропуски по категориям в строках, где пропуски одновременно в этих столбцах.\n\n\nShow the code\ngen = pagri_data_tools.analyze_filtered_df_by_category(df, df_na_in_both_columns, 'df with na')\n\n\n\n\nShow the code\nnext(gen)\n\n\n\n\n\n\n\nTable 26: Value in \"df with na\" by category \"is_apartment\"\n\n\n\n\n\nis_apartment\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nFalse\n2725\n621\n22.8%\n11.3%\n11.5%\n-0.2%\n\n\nTrue\n50\n7\n14.0%\n0.1%\n0.2%\n-0.1%\n\n\nnan\n20924\n4890\n23.4%\n88.6%\n88.3%\n0.3%\n\n\n\n\n\n\n\n\n\n\nShow the code\nnext(gen)\n\n\n\n\n\n\n\nTable 27: Value in \"df with na\" by category \"studio\"\n\n\n\n\n\nstudio\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nFalse\n23550\n5461\n23.2%\n99.0%\n99.4%\n-0.4%\n\n\nTrue\n149\n57\n38.3%\n1.0%\n0.6%\n0.4%\n\n\n\n\n\n\n\n\n\n\nShow the code\nnext(gen)\n\n\n\n\n\n\n\nTable 28: Value in \"df with na\" by category \"open_plan\"\n\n\n\n\n\nopen_plan\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nFalse\n23632\n5488\n23.2%\n99.5%\n99.7%\n-0.3%\n\n\nTrue\n67\n30\n44.8%\n0.5%\n0.3%\n0.3%\n\n\n\n\n\n\n\n\nНаблюдения: - Явных зависимостей от категорий не обнаружено\nИзучим пропуски по категориям\n Вернуться к выводам\n\n\nShow the code\npagri_data_tools.analyze_anomaly_by_category(df, series_missed, \"by_category\", \"floors_total\", \"is_apartment\")\n\n\n\n\n\n\n\nTable 29: Share in \"floors_total\" by category \"is_apartment\"\n\n\n\n\n\nis_apartment\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nFalse\n2725\n0\n0.0%\n0.0%\n11.5%\n-11.5%\n\n\nTrue\n50\n0\n0.0%\n0.0%\n0.2%\n-0.2%\n\n\nnan\n20924\n86\n0.4%\n100.0%\n88.3%\n11.7%\n\n\n\n\n\n\n\n\nНаблюдения: - Пропуски в количестве этажей совпадают с пропусками в признаке является ли квартира апартаментом.\n Вернуться к выводам\n\n\nShow the code\npagri_data_tools.anфalyze_anomaly_by_category(df, series_missed, \"by_category\", \"floors_total\", \"studio\")\n\n\n\n\n\n\n\nTable 30: Share in \"floors_total\" by category \"studio\"\n\n\n\n\n\nstudio\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nFalse\n23550\n83\n0.4%\n96.5%\n99.4%\n-2.9%\n\n\nTrue\n149\n3\n2.0%\n3.5%\n0.6%\n2.9%\n\n\n\n\n\n\n\n\nНаблюдения: - В количестве этаже пропуски зависят от признака является ли квартира студией.\n- Почти все пропуски в квартирах, которые не являются студиями, даже учитывая общее количество пропорций.\n\n\nShow the code\npagri_data_tools.analyze_anomaly_by_category(df, series_missed, \"by_category\", \"kitchen_area\", \"studio\")\n\n\n\n\n\n\n\nTable 31: Share in \"kitchen_area\" by category \"studio\"\n\n\n\n\n\nstudio\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nFalse\n23550\n2129\n9.0%\n93.5%\n99.4%\n-5.9%\n\n\nTrue\n149\n149\n100.0%\n6.5%\n0.6%\n5.9%\n\n\n\n\n\n\n\n\nНаблюдения: - В студиях в поле площадь кухни одни пропуски.\n\n\nShow the code\npagri_data_tools.analyze_anomaly_by_category(df, series_missed, \"by_category\", \"kitchen_area\", \"open_plan\")\n\n\n\n\n\n\n\nTable 32: Share in \"kitchen_area\" by category \"open_plan\"\n\n\n\n\n\nopen_plan\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nFalse\n23632\n2211\n9.4%\n97.1%\n99.7%\n-2.7%\n\n\nTrue\n67\n67\n100.0%\n2.9%\n0.3%\n2.7%\n\n\n\n\n\n\n\n\nНаблюдения: - В студиях в поле площадь кухни одни пропуски.\n\n\n2.2.4 Изучение выбросов\nСначала изучим потенциальные выбросы, которые мы выявили при изучении колонок.\nИзучим выброс с ценой 12190.0\n\n\nShow the code\ndf[df.last_price == 12190]\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n8793\n7\n12190.0\n109.0\n2019-03-20\n2\n2.75\n25.0\n32.0\n25\nNaN\n...\n40.5\nNaN\nСанкт-Петербург\n36421.0\n9176.0\n1.0\n805.0\n0.0\nNaN\n8.0\n\n\n\n\n1 rows × 22 columns\n\n\n\nНаблюдения:\n- Ничего особенно не обнаружено.\n- Скорее всего ошиблись не поставили нули.\nПосмотрим на выбросы с площадью квартиры.\n\n\nShow the code\ndf[df.total_area &gt; 500]\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n3117\n19\n140000000.0\n631.0\n2019-03-30\n7\nNaN\n5.0\nNaN\n5\nNaN\n...\n60.0\nNaN\nСанкт-Петербург\n25707.0\n4972.0\n0.0\nNaN\n2.0\n210.0\nNaN\n\n\n4237\n1\n50000000.0\n517.0\n2017-10-14\n7\nNaN\n4.0\n332.0\n3\nNaN\n...\n22.0\nNaN\nСанкт-Петербург\n22835.0\n1847.0\n2.0\n477.0\n2.0\n540.0\nNaN\n\n\n5358\n20\n65000000.0\n590.0\n2019-02-14\n15\n3.50\n6.0\n409.0\n3\nNaN\n...\n100.0\nNaN\nСанкт-Петербург\n24447.0\n4666.0\n1.0\n767.0\n0.0\nNaN\n14.0\n\n\n8018\n20\n84000000.0\n507.0\n2015-12-17\n5\n4.45\n7.0\n301.5\n7\nTrue\n...\n45.5\n1.0\nСанкт-Петербург\nNaN\n5735.0\n2.0\n110.0\n0.0\nNaN\n1078.0\n\n\n12859\n20\n140000000.0\n631.2\n2019-04-09\n7\n3.90\n4.0\n322.3\n4\nNaN\n...\n19.5\n1.0\nСанкт-Петербург\n25707.0\n4972.0\n0.0\nNaN\n2.0\n210.0\nNaN\n\n\n15651\n20\n300000000.0\n618.0\n2017-12-18\n7\n3.40\n7.0\n258.0\n5\nNaN\n...\n70.0\nNaN\nСанкт-Петербург\n32440.0\n5297.0\n0.0\nNaN\n2.0\n198.0\n111.0\n\n\n19540\n8\n420000000.0\n900.0\n2017-12-06\n12\n2.80\n25.0\n409.7\n25\nNaN\n...\n112.0\nNaN\nСанкт-Петербург\n30706.0\n7877.0\n0.0\nNaN\n2.0\n318.0\n106.0\n\n\n\n\n7 rows × 22 columns\n\n\n\nНаблюдения:\n- Не похоже на выбросы. Цена большая, количество комнат большое. Скорее всего просто большие дорогие квартиры.\n\n\nShow the code\ndf[df.total_area &lt; 15]\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n17961\n3\n1400000.0\n13.0\n2017-12-03\n1\n2.60\n9.0\nNaN\n1\nNaN\n...\nNaN\nNaN\nСанкт-Петербург\n14350.0\n15945.0\n0.0\nNaN\n1.0\n185.0\n410.0\n\n\n19546\n3\n1850000.0\n13.0\n2019-03-11\n1\n3.40\n5.0\nNaN\n2\nFalse\n...\nNaN\nNaN\nСанкт-Петербург\n24915.0\n5483.0\n1.0\n644.0\n0.0\nNaN\n24.0\n\n\n19558\n2\n1686000.0\n13.2\n2018-12-17\n1\nNaN\n5.0\nNaN\n1\nNaN\n...\nNaN\nNaN\nСанкт-Петербург\n19891.0\n4165.0\n1.0\n361.0\n1.0\n155.0\n19.0\n\n\n19642\n5\n1190000.0\n14.0\n2018-07-29\n1\nNaN\n5.0\n11.0\n1\nNaN\n...\n2.0\nNaN\nСанкт-Петербург\n9898.0\n11122.0\n0.0\nNaN\n0.0\nNaN\n4.0\n\n\n19807\n0\n3800000.0\n13.0\n2018-07-04\n1\nNaN\n5.0\n10.0\n3\nNaN\n...\nNaN\nNaN\nСанкт-Петербург\n21302.0\n1242.0\n1.0\n592.0\n3.0\n27.0\n9.0\n\n\n19904\n4\n2400000.0\n12.0\n2017-07-19\n1\n2.55\n5.0\n10.0\n2\nNaN\n...\nNaN\nNaN\nСанкт-Петербург\n21314.0\n964.0\n1.0\n886.0\n2.0\n45.0\n200.0\n\n\n\n\n6 rows × 22 columns\n\n\n\nНаблюдения:\n- Не похоже на выбросы. Скорее всего это мелко нарезанные студии. Тем более этаж низкий.\nИзучим выброс в высоте потолка.\n\n\nShow the code\ndf[df.ceiling_height &gt; 10].ceiling_height.value_counts()\n\n\nceiling_height\n27.0     8\n25.0     7\n32.0     2\n24.0     1\n26.0     1\n14.0     1\n20.0     1\n22.6     1\n27.5     1\n10.3     1\n100.0    1\nName: count, dtype: int64\n\n\n\n\nShow the code\ndf[df.ceiling_height &gt; 30]\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n3148\n14\n2900000.0\n75.0\n2018-11-12\n3\n32.0\n3.0\n53.0\n2\nNaN\n...\n8.0\nNaN\nВолхов\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n22336\n19\n9999000.0\n92.4\n2019-04-05\n2\n32.0\n6.0\n55.5\n5\nFalse\n...\n16.5\n4.0\nСанкт-Петербург\n18838.0\n3506.0\n0.0\nNaN\n3.0\n511.0\nNaN\n\n\n22869\n0\n15000000.0\n25.0\n2018-07-25\n1\n100.0\n5.0\n14.0\n5\nTrue\n...\n11.0\n5.0\nСанкт-Петербург\n34963.0\n8283.0\n1.0\n223.0\n3.0\n30.0\n19.0\n\n\n\n\n3 rows × 22 columns\n\n\n\nНаблюдения:\n- Значения от 20 до 32 скорее всего поставили не там запятую.\n- А вот значения 10 и 100 странные.\nИзучим выбросы в количестве этажей\n\n\nShow the code\ndf[df.floors_total &gt; 35]\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n397\n15\n5990000.0\n54.0\n2018-03-22\n2\nNaN\n36.0\n21.4\n28\nNaN\n...\n18.70\n1.0\nСанкт-Петербург\n18732.0\n20444.0\n0.0\nNaN\n3.0\n80.0\n11.0\n\n\n2253\n12\n3800000.0\n45.5\n2018-06-28\n2\n2.88\n60.0\n27.4\n4\nNaN\n...\n7.40\nNaN\nКронштадт\n67763.0\n49488.0\n2.0\n342.0\n3.0\n614.0\n166.0\n\n\n5807\n17\n8150000.0\n80.0\n2019-01-09\n2\n27.00\n36.0\n41.0\n13\nNaN\n...\n12.00\n5.0\nСанкт-Петербург\n18732.0\n20444.0\n0.0\nNaN\n3.0\n80.0\n38.0\n\n\n11079\n16\n9200000.0\n75.0\n2019-02-22\n2\n2.70\n36.0\n40.0\n29\nNaN\n...\n12.00\n2.0\nСанкт-Петербург\n18732.0\n20444.0\n0.0\nNaN\n3.0\n80.0\nNaN\n\n\n16731\n9\n3978000.0\n40.0\n2018-09-24\n1\n2.65\n52.0\n10.5\n18\nNaN\n...\n14.00\nNaN\nСанкт-Петербург\n20728.0\n12978.0\n1.0\n793.0\n0.0\nNaN\n45.0\n\n\n16934\n5\n4100000.0\n40.0\n2017-10-17\n1\n1.75\n37.0\n17.4\n5\nNaN\n...\n8.34\nNaN\nСанкт-Петербург\n18732.0\n20444.0\n0.0\nNaN\n3.0\n80.0\n71.0\n\n\n\n\n6 rows × 22 columns\n\n\n\nНаблюдения:\n- Так как в Санкт-Петербург есть здания такой высоты, то нет оснований считать это выбросами.\n\n\n2.2.5 Изучение отрицательных значений\nИзучаем отрицательные значения\n\n\nShow the code\nseries_negative = pagri_data_tools.find_columns_with_negative_values(df)\n\n\n\n\n  Negative\n  \n  \n  \n  \n\n\n\nУ нас нет отрицательных значений.\n\n\n2.2.6 Изучение нулевых значений\nИзучаем нулевые значения\n\n\nShow the code\nseries_zeros = pagri_data_tools.find_columns_with_zeros_values(df)\n\n\n\n\n\n\n\nTable 33: Zeros\n\n\n\n\n\ntotal_images\n1059 (4.47%)\n\n\nrooms\n197 (0.83%)\n\n\nbalcony\n3758 (15.86%)\n\n\nairports_nearest\n1 (0.00%)\n\n\nparks_around3000\n10106 (42.64%)\n\n\nponds_around3000\n9071 (38.28%)\n\n\n\n\n\n\n\n\nВсе кроме количества комнат и расстояния до ближайшего аэропорта может быть нулями, поэтому удалим их из текущего изучения.\n\n\nShow the code\nseries_zeros = series_zeros.loc[['rooms']]\n\n\nПосмотрим отдельно на нулевое значение в расстоянии до аэропорта.\n\n\nShow the code\ndf[df.airports_nearest == 0]\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n21085\n0\n7000000.0\n34.7\n2018-09-23\n1\n2.7\n9.0\n19.8\n3\nNaN\n...\n6.0\n2.0\nСанкт-Петербург\n0.0\n22801.0\n0.0\nNaN\n0.0\nNaN\n60.0\n\n\n\n\n1 rows × 22 columns\n\n\n\n\n\nShow the code\npagri_data_tools.analyze_anomaly_by_category(df, series_zeros, \"value_counts\", \"rooms\")\n\n\nValue counts in rooms (0.83%)\n\n\n\n\n\n\n\nTable 34: rooms\n\n\n\n\n\n \ncount\n\n\nrooms\n \n\n\n\n\n0\n197\n\n\n\n\n\n\n\n\nВыдвинем гипотезу, что 0 комнат у студий и однокомнатных.\nПроверим гипотезу по площади.\nПредположим, что площадь студий и однокомнатных квартир составляет не более 40 м2.\nПосмотрим на выборку из датафрейма\n\n\nShow the code\nseries_zeros['rooms'][['last_price', 'total_area', 'living_area', 'kitchen_area', 'studio', 'open_plan']].query('total_area &gt; 40')\n\n\n\n\n\n\n\n\n\nlast_price\ntotal_area\nliving_area\nkitchen_area\nstudio\nopen_plan\n\n\n\n\n3458\n7400000.0\n73.60\n50.0\nNaN\nTrue\nFalse\n\n\n7237\n2999000.0\n42.63\n25.7\nNaN\nFalse\nTrue\n\n\n10008\n5050000.0\n44.20\n32.2\nNaN\nTrue\nFalse\n\n\n13613\n8100000.0\n58.40\n33.0\nNaN\nTrue\nFalse\n\n\n15319\n5970000.0\n43.30\n28.2\nNaN\nTrue\nFalse\n\n\n16130\n5000000.0\n42.10\n30.0\nNaN\nTrue\nFalse\n\n\n19392\n71000000.0\n371.00\nNaN\nNaN\nFalse\nTrue\n\n\n20082\n16300000.0\n98.40\n60.5\nNaN\nTrue\nFalse\n\n\n21227\n8200000.0\n71.00\n68.0\nNaN\nTrue\nFalse\n\n\n\n\n\n\n\nНаблюдения:\n- Видим, что почти все квартиры с 0 комнат имеют площадь до 40 кв. - 2 квартиры имеют открытую планировку\n- Можно будет заменить 0 на 1.\n\n\nShow the code\npagri_data_tools.analyze_anomaly_by_category(df, series_zeros, \"by_category\", \"rooms\", 'studio')\n\n\n\n\n\n\n\nTable 35: Share in \"rooms\" by category \"studio\"\n\n\n\n\n\nstudio\ntotal\ncount\ncount_in_total_pct\ncount_in_sum_count_pct\ntotal_in_sum_total_pct\ndiff_sum_pct\n\n\n\n\nFalse\n23550\n59\n0.3%\n29.9%\n99.4%\n-69.4%\n\n\nTrue\n149\n138\n92.6%\n70.1%\n0.6%\n69.4%\n\n\n\n\n\n\n\n\nНаблюдения:\n- Большая часть квартир с нулем комнат являются студиями.\n\n\n\n2.3 Промежуточный вывод\n\n8 процентов дней пропущено\nМинимальное значение цены 12 190 и максимальное значение 763 млн выглядят подозрительно.\nМаксимальная площадь в 900 квадратов.\nВ высоте потолков пропуски (39 процентов)\nВ высоте потолков много выбросов. Есть значение 100.\nВ количестве этажей есть пропуски (меньше 1 процента)\nБольше всего пятиэтажек (25 процентов)\nВ жилой площади 8 процентов пропусков.\nВ площади кухни 10 процентов пропусков.\n\nВ числе балконов 49 процентов пропусков. Скорее всего пропуски это отсутствие балкона.\n\nТреть квартир без балконов, также по трети квартир с 1 и 2 балконами.\nВ расстоянии до ближайшего аэропорта 23 процента пропусков.\nВ расстоянии до центр города 23 процента пропусков.\nВ колонке с количеством парков рядом 23 процента пропусков.\n\nВ колонке с расстоянием до ближайшего парка 66 процентов пропусков.\n\nВ колонке с количеством прудов 23 процента пропусков, скорее всего это отсутствие парков.\n\nВ колонке с расстоянием до ближайшего пруда 62 процента пропусков.\nВ среднем объявление находится в продаже 180 дней, но из за выбросов оно не совсем точно описывает ситуацию.\nВ колонке с количеством дней экспозиции 13 процентов пропусков.\nВ колонке с признаком является ли квартира апартаментом 88 процентов пропусков. Скорее всего эти квартиры не являются апартаментами.\n\nВ колонке с названием населенного пункта 49 пропущенных значений (меньше 1 процента)\nПропуски в одних и тех же строках в колонках с количеством парков рядом, количеством прудов рядом совпадает, расстоянием до центра, расстоянием до аэропорта примерно равны\nПропуски в количестве этажей совпадают с пропусками в признаке является ли квартира апартаментом.\nВ количестве этаже пропуски зависят от признака является ли квартира студией.\n\nПочти все пропуски в квартирах, которые не являются студиями, даже учитывая общее количество пропорций.\nВ студиях в поле площадь кухни одни пропуски.\n\n\n\n\n3. Предобработка данных\n\n3.1 Выбор нужных столбцов для дальнейшей работы\nСохраним исходный датафрейм в переменную df_origin, чтобы была возможность вернуться к нему\n\n\nShow the code\ndf_origin = df.copy()\n\n\n\n\n3.2 Обработка выбросов\nПосле изучения данных отрицательные значения не обнаружены, но есть колонки с нулевыми значениями, где их быть не должно.\nПосмотрим где у нас нулевые значения\n\n\nShow the code\npagri_data_tools.check_zeros_value_in_df(df)\n\n\n\n\n\n\n\n\n\nzeros\n\n\n\n\ntotal_images\n1059 (4.5%)\n\n\nrooms\n197 (0.8%)\n\n\nbalcony\n3758 (15.9%)\n\n\nairports_nearest\n1 (0.0%)\n\n\nparks_around3000\n10106 (42.6%)\n\n\nponds_around3000\n9071 (38.3%)\n\n\n\n\n\n\n\nНам нужно обработать нули в количестве комнат и в расстоянии до аэропорта.\n\n\nShow the code\ndf[df.airports_nearest == 0]\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_area\nbalcony\nlocality_name\nairports_nearest\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\n\n\n\n\n21085\n0\n7000000.0\n34.7\n2018-09-23\n1\n2.7\n9.0\n19.8\n3\nNaN\n...\n6.0\n2.0\nСанкт-Петербург\n0.0\n22801.0\n0.0\nNaN\n0.0\nNaN\n60.0\n\n\n\n\n1 rows × 22 columns\n\n\n\nТак как это всего одна запись и точно восстановить расстояние невозможно, то лучше удалить ее.\n\n\nShow the code\ndf.shape[0]\n\n\n23699\n\n\n\n\nShow the code\ndf = df[df.airports_nearest != 0]\n\n\n\n\nShow the code\ndf.shape[0]\n\n\n23698\n\n\nОбработаем нулевые значения в количестве комнат.\nТак как мы выяснили, что 0 комнат указано у студий и в открытой планировке, либо у квартир с площадью до 40 кв.,\nто заменим 0 на 1.\n\n\nShow the code\ntt = df.copy()\n\n\n\n\nShow the code\ntt.rooms = tt.rooms.apply(lambda x: 1 if x == 0 else x)\n\n\n\n\nShow the code\ndf.loc[:, 'rooms'] = df.rooms.apply(lambda x: 1 if x == 0 else x)\n\n\nУбедимся, что у нас не осталось нулевых и отрицательных значений где их быть не должно.\n\n\nShow the code\npagri_data_tools.check_negative_value_in_df(df)\n\n\n\n\n\n\n\n\n\nnegative\n\n\n\n\n\n\n\n\n\n\n\nShow the code\npagri_data_tools.check_zeros_value_in_df(df)\n\n\n\n\n\n\n\n\n\nzeros\n\n\n\n\ntotal_images\n1058 (4.5%)\n\n\nbalcony\n3758 (15.9%)\n\n\nparks_around3000\n10105 (42.6%)\n\n\nponds_around3000\n9070 (38.3%)\n\n\n\n\n\n\n\nУ нас в цене есть одна запись со значением 12190. Скорее всего не поставили нули, но сложно определить сколько именно нулей не поставили.\nТак как это всего 1 запись, то удалим ее.\n\n\nShow the code\ndf.shape[0]\n\n\n23698\n\n\n\n\nShow the code\ndf = df[df.last_price != 12190]\n\n\n\n\nShow the code\ndf.shape[0]\n\n\n23697\n\n\nОбработаем выбросы в высоте потолков.\nБудем считать, что высота потолков больше 5 метров является маловероятным.\nПосмотрим сколько у нас записей с высотой потолка больше 5 метров.\n\n\nShow the code\npagri_data_tools.count_share(df.ceiling_height &gt; 5)\n\n\n'36 (0.2%)'\n\n\nТак как их очень мало и мы не можем обработать эти выбросы, то удалим их.\n\n\nShow the code\ndf.shape[0]\n\n\n23697\n\n\n\n\nShow the code\ndf[df.ceiling_height &gt; 5].shape[0]\n\n\n36\n\n\n\n\nShow the code\ndf = df[~(df.ceiling_height &gt; 5)]\n\n\n\n\nShow the code\ndf.shape[0]\n\n\n23661\n\n\n\n\n3.3 Обработка пропусков\nПосмотрим где у нас пропуски.\n\n\nShow the code\npagri_data_tools.check_missed_value_in_df(df)\n\n\n\n\n\n\n\n\n\nmissed\n\n\n\n\nceiling_height\n9195 (38.9%)\n\n\nfloors_total\n86 (0.4%)\n\n\nliving_area\n1901 (8.0%)\n\n\nis_apartment\n20899 (88.3%)\n\n\nkitchen_area\n2269 (9.6%)\n\n\nbalcony\n11507 (48.6%)\n\n\nlocality_name\n49 (0.2%)\n\n\nairports_nearest\n5532 (23.4%)\n\n\ncity_centers_nearest\n5509 (23.3%)\n\n\nparks_around3000\n5508 (23.3%)\n\n\nparks_nearest\n15598 (65.9%)\n\n\nponds_around3000\n5508 (23.3%)\n\n\nponds_nearest\n14566 (61.6%)\n\n\ndays_exposition\n3173 (13.4%)\n\n\n\n\n\n\n\nМы выяснили, что у нас пропуски в столбцах ‘airports_nearest’, ‘center’, ‘around 3000’, ‘around 3000’\nв одних и тех же строчках.\nТак как количество пропусков большое, то заменять их нельзя.\nПоэтому оставим их как есть.\nПропуски в высоте потолков мы обрабатывать не можем, так как их сильно много.\nПропуски в количестве этажей удалим, так как их мало.\n\n\nShow the code\ndf.shape[0]\n\n\n23661\n\n\n\n\nShow the code\ndf = df.dropna(subset=['floors_total'])\n\n\n\n\nShow the code\ndf.shape[0]\n\n\n23575\n\n\nПропуски в жилой площади и в площади кухни обработаем с помощью коэффициентов отношения площадей.\nПри этом рассчитывать будем с учетом количества комнат, чтобы было точнее.\n\n\nShow the code\ndf[['total_area', 'living_area', 'rooms', 'kitchen_area', 'balcony']].sample(5)\n\n\n\n\n\n\n\n\n\ntotal_area\nliving_area\nrooms\nkitchen_area\nbalcony\n\n\n\n\n22730\n62.00\n41.00\n3\n6.10\n1.0\n\n\n5356\n35.49\n17.33\n1\n9.36\nNaN\n\n\n18038\n62.00\nNaN\n3\nNaN\nNaN\n\n\n884\n35.00\n18.00\n1\n8.00\n1.0\n\n\n17427\n32.40\n22.00\n2\nNaN\nNaN\n\n\n\n\n\n\n\n\n\nShow the code\ndf.shape[0]\n\n\n23575\n\n\n\n\nShow the code\nkitchen_ratio = df.groupby('rooms')['kitchen_area'].transform(\n    lambda x: x.median() / df.loc[x.index, 'total_area'].median() \n    if len(x) &gt;= 30 \n    else df['kitchen_area'].median() / df['total_area'].median()\n)\n\nliving_ratio = df.groupby('rooms')['living_area'].transform(\n    lambda x: x.median() / df.loc[x.index, 'total_area'].median()\n    if len(x) &gt;= 30 \n    else df['living_area'].median() / df['total_area'].median()\n)\n\ndf['kitchen_area'] = df['kitchen_area'].fillna(df['total_area'] * kitchen_ratio)\ndf['living_area'] = df['living_area'].fillna(df['total_area'] * living_ratio)\n\n\n\n\nShow the code\ndf.shape[0]\n\n\n23575\n\n\nПризнак является ли квартира апартаментом имеет много пропусков.\nОпределить является ли квартира апартаментом мы не можем, поэтому заменим на значение “не указано”.\n\n\nShow the code\ndf['is_apartment'] = df.is_apartment.astype(str).map({'True': 'да', 'False': 'нет'}).fillna(\"не указано\").astype('category')\n\n\nПропуски в названии населенного пункта мы заменить не можем, и их очень мало, поэтому удалим их.\n\n\nShow the code\ndf = df.dropna(subset=['locality_name'])\n\n\n\n\nShow the code\ndf.shape[0] \n\n\n23527\n\n\n\n\nShow the code\npagri_data_tools.check_missed_value_in_df(df)\n\n\n\n\n\n\n\n\n\nmissed\n\n\n\n\nceiling_height\n9084 (38.6%)\n\n\nbalcony\n11463 (48.7%)\n\n\nairports_nearest\n5514 (23.4%)\n\n\ncity_centers_nearest\n5491 (23.3%)\n\n\nparks_around3000\n5490 (23.3%)\n\n\nparks_nearest\n15513 (65.9%)\n\n\nponds_around3000\n5490 (23.3%)\n\n\nponds_nearest\n14506 (61.7%)\n\n\ndays_exposition\n3163 (13.4%)\n\n\n\n\n\n\n\nОстальные пропуски оставим как есть, чтобы не исказить данные.\n\n\n3.4 Приведение данных к удобной форме\nИзменим значения в столбцах на более удобные\n\n\nShow the code\ndf.studio = df.studio.astype(str).map({'True': 'да', 'False': 'нет'}).astype('category')\n\n\n\n\nShow the code\ndf.open_plan = df.open_plan.astype(str).map({'True': 'да', 'False': 'нет'}).astype('category')\n\n\nИзменим типы данных на более подходящие.\nУбедимся, что у нас нет дробных чисел в цене.\n\n\nShow the code\n(df.last_price != df.last_price.astype(int)).sum()\n\n\nnp.int64(0)\n\n\nПриведем цену к целому типу.\n\n\nShow the code\ndf.last_price = df.last_price.astype(int)\n\n\n\n\n3.5 Промежуточный вывод\n\nМы выяснили, что 0 комнат указано у студий, либо в открытой планировке, либо у квартир с площадью до 40 кв.,\nпоэтому нули в количестве комнат заменили на 1.\nВ цене была одна запись со значением 12190. Скорее всего не поставили нули, но сложно определить сколько именно нулей не поставили.\nТак как это всего 1 запись, то удалили ее.\nУдалили 36 записей (0.2%) с высотой потолка больше 5 метров. Так как таких записей мало, а замена их может исказить анализ.\n\nВ высоте потолка пропусков слишком много, поэтому их не стали трогать.\n\nВ количестве этажей пропуски удалили, так как определить реальный этаж невозможно, а пропусков мало.\n\nПропуски в жилой площади и в площади кухни обработали с помощью коэффициентов отношения площадей.\nПри этом расчеты провели с учетом количества комнат, чтобы было точнее.\n\nПризнак является ли квартира апартаментом имеет много пропусков.\nОпределить является ли квартира апартаментом мы не можем, поэтому заменили на значение “не указано”.\nУдалили пропуски в названии населенных пунктов, так как их мало.\n\n\n\n\n4. Обогащение данных и создание новых переменных\n\n4.1 Создание новых числовых переменных\nСоздадим переменную соотношение жилой и общей площади\n\n\nShow the code\ndf['living_total_ratio'] = round(df['living_area'] / df['total_area'],2)\n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'living_total_ratio')\n\n\n\n        \n            \n\n\n\n\nTable 36: living_total_ratio\n\n\n\n\n\nValues\n23 527 (100%)\n\nMax\n1\n\nAvg\n0.56\n\n0.58 (6%)\n\n\nMissing\n---\n\n95%\n0.72\n\nMode\n0.58\n\n0.62 (5%)\n\n\nDistinct\n91 (&lt;1%)\n\n75%\n0.63\n\nRange\n0.98\n\n0.48 (5%)\n\n\nDuplicates\n23 436 (99.6%)\n\nMedian\n0.57\n\niQR\n0.14\n\n0.56 (4%)\n\n\nZeros\n---\n\n25%\n0.49\n\nstd\n0.1\n\n0.55 (4%)\n\n\nNegative\n---\n\n5%\n0.4\n\nkurt\n0.32\n\n0.6 (4%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0.02\n\nskew\n-0.14\n\n0.64 (3%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nСоздадим переменную отношения площади кухни к общей.\n\n\nShow the code\ndf['kitchen_total_ratio'] = round(df['kitchen_area'] / df['total_area'],2)\n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'kitchen_total_ratio')\n\n\n\n        \n            \n\n\n\n\nTable 37: kitchen_total_ratio\n\n\n\n\n\nValues\n23 527 (100%)\n\nMax\n0.79\n\nAvg\n0.19\n\n0.16 (9%)\n\n\nMissing\n---\n\n95%\n0.31\n\nMode\n0.16\n\n0.13 (7%)\n\n\nDistinct\n66 (&lt;1%)\n\n75%\n0.24\n\nRange\n0.76\n\n0.25 (7%)\n\n\nDuplicates\n23 461 (99.7%)\n\nMedian\n0.17\n\niQR\n0.11\n\n0.14 (6%)\n\n\nZeros\n---\n\n25%\n0.13\n\nstd\n0.07\n\n0.12 (6%)\n\n\nNegative\n---\n\n5%\n0.1\n\nkurt\n2.81\n\n0.15 (6%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0.03\n\nskew\n1.18\n\n0.11 (6%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nСоздадим переменную цена квадратного метра\n\n\nShow the code\ndf['price_per_sqm'] = (df['last_price'] / df['total_area']).astype(int)\n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'kitchen_total_ratio')\n\n\n\n        \n            \n\n\n\n\nTable 38: kitchen_total_ratio\n\n\n\n\n\nValues\n23 527 (100%)\n\nMax\n0.79\n\nAvg\n0.19\n\n0.16 (9%)\n\n\nMissing\n---\n\n95%\n0.31\n\nMode\n0.16\n\n0.13 (7%)\n\n\nDistinct\n66 (&lt;1%)\n\n75%\n0.24\n\nRange\n0.76\n\n0.25 (7%)\n\n\nDuplicates\n23 461 (99.7%)\n\nMedian\n0.17\n\niQR\n0.11\n\n0.14 (6%)\n\n\nZeros\n---\n\n25%\n0.13\n\nstd\n0.07\n\n0.12 (6%)\n\n\nNegative\n---\n\n5%\n0.1\n\nkurt\n2.81\n\n0.15 (6%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0.03\n\nskew\n1.18\n\n0.11 (6%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nСоздадим новую переменную - расстояние до центра километрах.\n\n\nShow the code\ndf['city_centers_nearest_km'] = round(df.city_centers_nearest / 1000)\n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'city_centers_nearest_km')\n\n\n\n        \n            \n\n\n\n\nTable 39: city_centers_nearest_km\n\n\n\n\n\nValues\n18 036 (77%)\n\nMax\n66\n\nAvg\n14.19\n\n12 (9%)\n\n\nMissing\n5 491 (23%)\n\n95%\n32\n\nMode\n12\n\n15 (9%)\n\n\nDistinct\n61 (&lt;1%)\n\n75%\n16\n\nRange\n66\n\n13 (8%)\n\n\nDuplicates\n23 465 (99.7%)\n\nMedian\n13\n\niQR\n7\n\n14 (7%)\n\n\nZeros\n27 (&lt;1%)\n\n25%\n9\n\nstd\n8.62\n\n16 (7%)\n\n\nNegative\n---\n\n5%\n4\n\nkurt\n4.34\n\n11 (6%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n1.67\n\n5 (5%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\n\n\n4.2 Категоризация данных\n\n\nShow the code\ndf.head(1)\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\ncity_centers_nearest\nparks_around3000\nparks_nearest\nponds_around3000\nponds_nearest\ndays_exposition\nliving_total_ratio\nkitchen_total_ratio\nprice_per_sqm\ncity_centers_nearest_km\n\n\n\n\n0\n20\n13000000\n108.0\n2019-03-07\n3\n2.7\n16.0\n51.0\n8\nне указано\n...\n16028.0\n1.0\n482.0\n2.0\n755.0\nNaN\n0.47\n0.23\n120370\n16.0\n\n\n\n\n1 rows × 26 columns\n\n\n\nСоздадим новую категориальную переменную из этажа.\nСделаем 3 значения - первый, последний и другой\n\n\nShow the code\ndf['floor_position'] = df.apply(lambda x: 'первый' if x['floor'] == 1 else 'последний' if x['floor'] == x['floors_total'] else 'другой', axis=1).astype('category')\n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'floor_position')\n\n\n\n        \n            \n\n\n\n\nTable 40: floor_position\n\n\n\n\n\nValues\n23 527 (100%)\n\nдругой (74%)\n\n\nMissing\n---\n\nпоследний (14%)\n\n\nDistinct\n3 (&lt;1%)\n\nпервый (12%)\n\n\nDuplicated origin\n23 524 (99.9%)\n\n\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nСоздадим новую категориальную переменную из цены\n\n\nShow the code\npagri_data_tools.quantiles_columns(df.last_price)\n\n\n\n\n\n\n\nTable 41: Quantiles\n\n\n\n\n\nMax\n763 000 000\n\n\n5\n1 860 000\n\n\n25\n3 400 000\n\n\n50\n4 646 000\n\n\n75\n6 790 000\n\n\n95\n15 253 200.0\n\n\nMin\n430 000\n\n\n\n\n\n\n\n\n\n\nShow the code\nlabels = ['эконом', 'комфорт', 'премиум']\nbins = [-np.inf, 4_000_000, 10_000_000, np.inf]\n\n\n\n\nShow the code\ndf['price_segment'] = pagri_data_tools.create_category_column(df.last_price, labels=labels, bins=bins).astype('category')\n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'price_segment')\n\n\n\n        \n            \n\n\n\n\nTable 42: price_segment\n\n\n\n\n\nValues\n23 527 (100%)\n\nкомфорт (50%)\n\n\nMissing\n---\n\nэконом (38%)\n\n\nDistinct\n3 (&lt;1%)\n\nпремиум (11%)\n\n\nDuplicated origin\n23 524 (99.9%)\n\n\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nСоздадим переменные день недели, месяц и год публикации объявления.\n\n\nShow the code\nweekday_dict = {\n    'Monday': 'Понедельник',\n    'Tuesday': 'Вторник',\n    'Wednesday': 'Среда',\n    'Thursday': 'Четверг',\n    'Friday': 'Пятница',\n    'Saturday': 'Суббота',\n    'Sunday': 'Воскресенье'\n}\nmonth_dict = {\n    1: 'Январь',\n    2: 'Февраль',\n    3: 'Март',\n    4: 'Апрель',\n    5: 'Май',\n    6: 'Июнь',\n    7: 'Июль',\n    8: 'Август',\n    9: 'Сентябрь',\n    10: 'Октябрь',\n    11: 'Ноябрь',\n    12: 'Декабрь'\n}\n\n\n\n\nShow the code\ndf['publication_weekday'] = df['first_day_exposition'].dt.day_name().map(weekday_dict).astype('category')\ndf['publication_month'] = df['first_day_exposition'].dt.month.map(month_dict).astype('category')\ndf['publication_year'] = df['first_day_exposition'].dt.year.astype(str).astype('category')\n# Задаем порядок для weekdays\nweekday_order = ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье']\ndf['publication_weekday'] = df['publication_weekday'].cat.reorder_categories(weekday_order, ordered=True)\n\n# Задаем порядок для months\nmonth_order = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\ndf['publication_month'] = df['publication_month'].cat.reorder_categories(month_order, ordered=True)\n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'publication_weekday')\n\n\n\n        \n            \n\n\n\n\nTable 43: publication_weekday\n\n\n\n\n\nValues\n23 527 (100%)\n\nЧетверг (18%)\n\n\nMissing\n---\n\nВторник (18%)\n\n\nDistinct\n7 (&lt;1%)\n\nПятница (17%)\n\n\nDuplicated origin\n23 520 (99.9%)\n\nСреда (17%)\n\n\nDupl (modify - origin)\n---\n\nПонедельник (15%)\n\n\nEmpty\n---\n\nСуббота (8%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nВоскресенье (7%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'publication_month')\n\n\n\n        \n            \n\n\n\n\nTable 44: publication_month\n\n\n\n\n\nValues\n23 527 (100%)\n\nФевраль (11%)\n\n\nMissing\n---\n\nМарт (11%)\n\n\nDistinct\n12 (&lt;1%)\n\nНоябрь (10%)\n\n\nDuplicated origin\n23 515 (99.9%)\n\nАпрель (10%)\n\n\nDupl (modify - origin)\n---\n\nОктябрь (9%)\n\n\nEmpty\n---\n\nСентябрь (8%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nИюнь (7%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'publication_year')\n\n\n\n        \n            \n\n\n\n\nTable 45: publication_year\n\n\n\n\n\nValues\n23 527 (100%)\n\n2018 (36%)\n\n\nMissing\n---\n\n2017 (35%)\n\n\nDistinct\n6 (&lt;1%)\n\n2019 (12%)\n\n\nDuplicated origin\n23 521 (99.9%)\n\n2016 (12%)\n\n\nDupl (modify - origin)\n---\n\n2015 (5%)\n\n\nEmpty\n---\n\n2014 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nСоздадим новую категориальную переменную месяц-год\n\n\nShow the code\n# Словарь для замены месяцев\nmonths_translation = {\n    'Jan': 'Янв',\n    'Feb': 'Фев',\n    'Mar': 'Мар',\n    'Apr': 'Апр',\n    'May': 'Май',\n    'Jun': 'Июн',\n    'Jul': 'Июл',\n    'Aug': 'Авг',\n    'Sep': 'Сен',\n    'Oct': 'Окт',\n    'Nov': 'Ноя',\n    'Dec': 'Дек'\n}\n# Получаем отдельно месяц и год\nmonths = df['first_day_exposition'].dt.strftime('%b').astype('category').cat.reorder_categories(list(months_translation.keys()), ordered=True)\nyears = df['first_day_exposition'].dt.strftime('%y')\nmonths_years = pd.concat([months, years], axis=1)\nmonths_years.columns = ['month', 'year']\n# Создаем список уникальных (год, месяц) и сортируем\nunique_months = months_years.drop_duplicates().sort_values(by=['year', 'month'])\n\n# Создаем список для порядка\nmonth_year_order = []\n\n# Формируем month_year_order на основе уникальных (год, месяц)\nfor _, row in unique_months.iterrows():\n    year = row['year']\n    month = row['month']\n    month_year_order.append(f\"{months_translation[month]}'{str(year)[-2:]}\")\n\n# Заменяем месяцы и соединяем с годом\ndf['publication_month_year'] = months.astype(str).map(months_translation) + \"'\" + years\ndf['publication_month_year'] = df['publication_month_year'].astype('category')\ndf['publication_month_year'] = df['publication_month_year'].cat.reorder_categories(month_year_order, ordered=True)\ndf['publication_month_year']\n\n\n0        Мар'19\n1        Дек'18\n2        Авг'15\n3        Июл'15\n4        Июн'18\n          ...  \n23694    Мар'17\n23695    Янв'18\n23696    Фев'18\n23697    Мар'17\n23698    Июл'17\nName: publication_month_year, Length: 23527, dtype: category\nCategories (55, object): ['Ноя'14' &lt; 'Дек'14' &lt; 'Янв'15' &lt; 'Фев'15' ... 'Фев'19' &lt; 'Мар'19' &lt; 'Апр'19' &lt; 'Май'19']\n\n\nСоздадим новую категориальную переменную из расстояния до центра.\nЧтобы определить границы зон, построим график зависимости цены от расстояния до центра.\n\n\nShow the code\nconfig = dict(\n    df = df[df['locality_name'] == 'Санкт-Петербург']\n    , x = 'city_centers_nearest_km'  \n    , x_axis_label = 'Расстояние до центра, км'\n    , y = 'last_price'\n    , y_axis_label = 'Цена'\n    , title = 'Цена в зависимости от расстояния до центра'\n    , func = 'median'\n    , width = 700\n    , height = 400\n)\npagri_data_tools.line(config)\n\n\n                                                \n\n\nМожно заметить, что на 5 км от центра падение цены замедляется.\nВыберем 5 км как границу для центра.\nИ выберем 20 км как зону окраины\n\n\nShow the code\nlabels = ['Центр', 'Средняя удаленность', 'Окраина']\nbins = [-np.inf, 5, 20, np.inf]\n\n\n\n\nShow the code\ndf.head()\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nliving_total_ratio\nkitchen_total_ratio\nprice_per_sqm\ncity_centers_nearest_km\nfloor_position\nprice_segment\npublication_weekday\npublication_month\npublication_year\npublication_month_year\n\n\n\n\n0\n20\n13000000\n108.0\n2019-03-07\n3\n2.70\n16.0\n51.000000\n8\nне указано\n...\n0.47\n0.23\n120370\n16.0\nдругой\nпремиум\nЧетверг\nМарт\n2019\nМар'19\n\n\n1\n7\n3350000\n40.4\n2018-12-04\n1\nNaN\n11.0\n18.600000\n1\nне указано\n...\n0.46\n0.27\n82920\n19.0\nпервый\nэконом\nВторник\nДекабрь\n2018\nДек'18\n\n\n2\n10\n5196000\n56.0\n2015-08-20\n2\nNaN\n5.0\n34.300000\n4\nне указано\n...\n0.61\n0.15\n92785\n14.0\nдругой\nкомфорт\nЧетверг\nАвгуст\n2015\nАвг'15\n\n\n3\n0\n64900000\n159.0\n2015-07-24\n3\nNaN\n14.0\n98.215511\n9\nне указано\n...\n0.62\n0.13\n408176\n7.0\nдругой\nпремиум\nПятница\nИюль\n2015\nИюл'15\n\n\n4\n2\n10000000\n100.0\n2018-06-19\n2\n3.03\n14.0\n32.000000\n13\nне указано\n...\n0.32\n0.41\n100000\n8.0\nдругой\nкомфорт\nВторник\nИюнь\n2018\nИюн'18\n\n\n\n\n5 rows × 32 columns\n\n\n\n\n\nShow the code\ndf['location_zone'] = pagri_data_tools.create_category_column(df.city_centers_nearest_km, labels=labels, bins=bins, fillnavalue=\"не указано\")\n\n\n\n\nShow the code\npagri_data_tools.info_column(df, 'location_zone')\n\n\n\n        \n            \n\n\n\n\nTable 46: location_zone\n\n\n\n\n\nValues\n23 527 (100%)\n\nСредняя удаленность (55%)\n\n\nMissing\n---\n\nне указано (23%)\n\n\nDistinct\n4 (&lt;1%)\n\nОкраина (11%)\n\n\nDuplicated origin\n23 523 (99.9%)\n\nЦентр (11%)\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\n\n\n4.3 Промежуточный вывод\n\nСоздали переменную соотношение жилой и общей площади\nСоздали переменную отношения площади кухни к общей.\nСоздали переменную цена квадратного метра\nСоздали новую переменную - расстояние до центра километрах.\nСоздадим новую категориальную переменную позиция этажа. Сделали 3 значения - первый, последний и другой\nИз цены создали новую категориальную переменную - сегмент цены. Сделали 3 значения - эконом, комфорт, премиум.\n\nСоздали переменные день недели, месяц, год и месяц-год публикации объявления.\nСоздали новую категориальную переменную из расстояния до центра. Сделали значения - центр, окраина, средняя удаленность\n\n\n\n\n5. Визуализация взаимосвязей переменных\n\n5.1 Исследование корреляционных связей\nПостроим матрицу корреляции.\n\n\nShow the code\ndf.select_dtypes(include=['category']).columns\n\n\nIndex(['is_apartment', 'studio', 'open_plan', 'floor_position',\n       'price_segment', 'publication_weekday', 'publication_month',\n       'publication_year', 'publication_month_year', 'location_zone'],\n      dtype='object')\n\n\n\n\nShow the code\ntitles_for_axis= dict(\n        \n        total_images = 'число фотографий',\n        last_price = 'цена',\n        total_area = 'общая площадь',\n        rooms = 'число комнат',\n        ceiling_height = 'высота потолков',\n        floors_total = 'всего этажей',\n        living_area = 'жилая площадь',\n        floor = 'этаж',\n        kitchen_area = 'площадь кухни',\n        balcony = 'число балконов',\n        airports_nearest = 'расстояние до аэропорта, м',\n        city_centers_nearest = 'расстояние до центра, м',\n        parks_around3000 = 'число парков',\n        parks_nearest = 'расстояние до парка, м',\n        ponds_around3000 = 'число водоёмов',\n        ponds_nearest = 'расстояние водоёма, м',\n        days_exposition = 'число дней размещения',\n        city_centers_nearest_km = 'расстояние до центра, км',\n        living_total_ratio = 'жилая/общая площадь',\n        kitchen_total_ratio = 'кухня/общая площадь',\n        price_per_sqm = 'цена кв метра',\n        is_apartment = 'является ли апартаментом',\n        studio = 'является ли студией',\n        open_plan = 'открытая ли планировка',\n        floor_position = 'позиция этажа',\n        price_segment = 'секмент цены',\n        publication_weekday = 'день  недели публикации',\n        publication_month = 'месяц публикации',\n        publication_year = 'год публикации',\n        publication_month_year = 'месяц и год публикации',\n        location_zone = 'локация'\n)\n\n\n Вернуться к выводам\n\n\nShow the code\npagri_data_tools.heatmap_corr(df, titles_for_axis=titles_for_axis, height=600)\n\n\n                                                \n\n\nНаблюдения:\n- Сильная положительная корреляция между жилой площадью и общей площадью - Сильная положительная корреляция между числом комнат и общей площадью - Сильная положительная корреляция между числом комнат и жилой площадью - Сильная отрицательная корреляция между отношением площади кухни к общей площади и отношением жилой площади к общей площади - Умеренная положительная корреляция между площадью кухни и общей площадью - Умеренная положительная корреляция между ценой и общей площадью - Умеренная положительная корреляция между ценой и жилой площадью - Умеренная положительная корреляция между ценой и площадью кухни - Умеренная положительная корреляция между ценой и жилой площадью\nПостроим модель случайного леса для определения цены и посмотрим какие переменные сильнее всего влияют на решения модели.\n Вернуться к выводам\n\n\nShow the code\ntitle = 'График важности признаков для предсказания цены'\npagri_data_tools.plot_feature_importances_regression(df.drop('price_per_sqm', axis=1), target='last_price', titles_for_axis=titles_for_axis, title=title)\n\n\n                                                \n\n\nНаблюдения:\n- Общая площадь является самым значимым признаком для предсказания цены квартиры.\nЧисло дней экспозиции находится на втором месте.\n\n\n5.2 Изучение зависимостей между числовыми переменными\nИзучим зависимости между числовыми переменными, используя графики рассеяния.\n Вернуться к выводам\n\n\nShow the code\n\npairs = {('last_price', 'total_area'): {'last_price': [np.int64(430000), np.int64(763000000)], 'total_area': [np.float64(12.0), np.float64(900.0)]}, ('last_price', 'living_area'): {'last_price': [np.int64(430000), np.int64(763000000)], 'living_area': [np.float64(2.0), np.float64(427.55)]}, ('last_price', 'kitchen_area'): {'last_price': [np.int64(430000), np.int64(763000000)], 'kitchen_area': [np.float64(1.3), np.float64(122.57)]}, ('last_price', 'floors_total'): {'last_price': [np.int64(430000), np.int64(763000000)], 'floors_total': [np.float64(1.0), np.float64(60.0)]}, ('last_price', 'city_centers_nearest'): {'last_price': [np.int64(430000), np.int64(763000000)], 'city_centers_nearest': [np.float64(181.0), np.float64(65968.0)]}, ('last_price', 'parks_nearest'): {'last_price': [np.int64(430000), np.int64(763000000)], 'parks_nearest': [np.float64(1.0), np.float64(3190.0)]}, ('total_area', 'rooms'): {'total_area': [np.float64(12.0), np.float64(900.0)], 'rooms': [np.int64(1), np.int64(19)]}, ('total_area', 'city_centers_nearest'): {'total_area': [np.float64(12.0), np.float64(900.0)], 'city_centers_nearest': [np.float64(181.0), np.float64(65968.0)]}, ('rooms', 'living_area'): {'rooms': [np.int64(1), np.int64(19)], 'living_area': [np.float64(2.0), np.float64(427.55)]}}\npagri_data_tools.pairplot_pairs(df, pairs, titles_for_axis=titles_for_axis, horizontal_spacing=0.12, rows=3, cols=3, density_mode='count') #.show(config=dict(displayModeBar=False, dpi=200), renderer=\"png\")\n\n\n                                                \n\n\nНаблюдения:\n- С ростом цены растет общая площадь, жилая площадь и площадь кухни. - Есть небольшая зависимость между ценой и количеством этажей. Чем больше цена, тем меньше этажей.\nЭто скорее всего связано с тем, что старые дома имеют меньше этажей и загородные дома имеют также меньше этажей. - Можно заметить, что чем ближе к центру или парку, тем дороже стоит квартира. - Чем больше число комнат, тем больше общая площадь, что логично.\n- Чем ближе к центру, тем меньше общая площадь. Скорее всего это связано с тем, что в центре больше студий.\n- Чем больше число комнат, тем больше жилая площадь, что логично.\n\n\n5.3 Изучение зависимостей между категориальными переменными\nИзучим распределение долей в категориальных переменных.\n\n\nShow the code\ntitles_for_axis = dict(\n    # numeric\n    total_images = ['Число фотографий', 'число фотографий', 0],\n    last_price = ['Цена', 'цена', 2],\n    total_area = ['Общая площадь', 'общая площадь', 2],\n    rooms = ['Число комнат', 'число комнат', 0],\n    ceiling_height = ['Высота потолков', 'высота потолков', 2],\n    floors_total = ['Всего этажей', 'количество этажей', 0],\n    living_area = ['Жилая площадь', 'жилая площадь', 2],\n    floor = ['Этаж', 'этаж', 1],\n    kitchen_area = ['Площадь кухни', 'площадь кухни', 2],\n    balcony = ['Число балконов', 'число балконов', 0],\n    airports_nearest = ['Расстояние до аэропорта, м', 'расстояние до аэропорта', 0],\n    city_centers_nearest = ['Расстояние до центра, м', 'расстояние до центра', 0],\n    parks_around3000 = ['Число парков', 'число парков', 0],\n    parks_nearest = ['Расстояние до парка, м', 'расстояние до парка', 0],\n    ponds_around3000 = ['Число водоёмов', 'число водоёмов', 0],\n    ponds_nearest = ['Расстояние до водоёма, м', 'расстояние до водоёма', 0],\n    days_exposition = ['Число дней размещения', 'число дней размещения', 0],\n    city_centers_nearest_km = ['Расстояние до центра, км', 'расстояние до центра', 0],\n    living_total_ratio = ['Жилая/общая площадь', 'жилая/общая площадь', 2],\n    kitchen_total_ratio = ['Кухня/общая площадь', 'кухня/общая площадь', 2],\n    price_per_sqm = ['Цена кв метра', 'цена кв метра', 2],\n    # categorical\n    is_apartment = ['Является ли апартаментом', 'является ли апартаментом', 0],\n    studio = ['Является ли студией', 'является ли студией', 0],\n    open_plan = ['Открытая ли планировка', 'планировки', 0],\n    floor_position = ['Позиция этажа', 'позиции этажа', 1],\n    price_segment = ['Сегмент цены', 'сегмента цены', 1],\n    publication_weekday = ['День недели публикации', 'дня недели публикации', 1],\n    publication_month = ['Месяц публикации', 'месяца публикации', 1],\n    publication_year = ['Год публикации', 'года публикации', 1],\n    publication_month_year = ['Месяц и год публикации', 'месяца и года публикации', 1],\n    location_zone = ['Локация', 'локации', 2]\n)\n\n\n\n\nShow the code\n\nconfig = dict(\n    df = df\n    , column_for_axis = 'floor_position'\n    , column_for_legend = 'price_segment'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , normalized_mode = 'all'\n    , text = True\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar_categories(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n- В этажах кроме первого и последнего комфорта больше всего.\nПосмотрим на распределение количества элементов между группами\n\n\nShow the code\npagri_data_tools.categorical_heatmap_matrix(df, 'floor_position', 'price_segment', titles_for_axis=titles_for_axis)\n\n\n                                                \n\n\nНаблюдения: - Больше всего квартир комфорт класса с этажом не первым и не последним.\n Вернуться к выводам\n\n\nShow the code\npagri_data_tools.categorical_heatmap_matrix(df, 'publication_weekday', 'price_segment', titles_for_axis=titles_for_axis)\n\n\n                                                \n\n\nНаблюдения: - В воскресенье и субботу меньше всего публикаций\n\n\nShow the code\npagri_data_tools.categorical_heatmap_matrix(df, 'location_zone', 'price_segment', titles_for_axis=titles_for_axis)\n\n\n                                                \n\n\nНаблюдения: - Больше всего объявлений со средней удаленностью от центра.\n\n\n5.4 Анализ временных зависимостей\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'publication_year'\n    , y = 'total_images'\n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = False\n    , showgrid_y = True\n    , sort = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n- Есть тренд на увеличение количества фотографий по годам.\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'publication_month_year'\n    , y = 'last_price'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = False\n    , showgrid_y = True     \n    , sort = False                                           \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n- Медианная цена квартиры не сильно изменяется со временем\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'publication_month_year'\n    , y = 'total_area'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = False\n    , showgrid_y = True   \n    , sort = False                                             \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n- Медианная площадь квартир не сильно меняется со временем\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'publication_month_year'\n    , y = 'price_per_sqm'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = False\n    , showgrid_y = True     \n    , sort = False                                           \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n- Медианная стоимость квадратного метра практически не меняется со временем\n\n\n5.5 Изучение зависимостей между числовыми и категориальными переменными\nПосмотрим на взаимосвязи между числовыми и категориальными переменными.\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'floor_position'\n    , y = 'rooms'  \n    , category = 'price_segment' \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'mean'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n- В премиуме среднее количество комнат больше на всех этажах\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'floor_position'\n    , y = 'living_area'  \n    , category = 'price_segment' \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'mean'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n- У премиум площадь квартир больше на всех этажах\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'location_zone'\n    , y = 'last_price'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n- В центре медианная стоимость квартир выше\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'location_zone'\n    , y = 'total_area'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n- В центре медианная площадь квартир больше\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'location_zone'\n    , y = 'rooms'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n- В центре медианное количество комнат больше\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'location_zone'\n    , y = 'ceiling_height'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n- В центре медианная высота потолков выше.\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'location_zone'\n    , y = 'floors_total'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n- Самые высокие дома находятся на средней удаленности от центра\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df\n    , x = 'location_zone'\n    , y = 'days_exposition'  \n    , barmode = 'group'\n    , orientation = 'v'\n    , func = 'median'\n    , xaxis_show = True\n    , yaxis_show = True\n    , showgrid_x = True\n    , showgrid_y = True                                                \n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n- В центре медианное количество дней экспозиции больше.\n\n\n5.6 Анализ срезов данных\nИзучим объявления в центре и сравним их с объявлениями в целом.\n\n\nShow the code\ndf[df.location_zone == 'Центр'].head()\n\n\n\n\n\n\n\n\n\ntotal_images\nlast_price\ntotal_area\nfirst_day_exposition\nrooms\nceiling_height\nfloors_total\nliving_area\nfloor\nis_apartment\n...\nkitchen_total_ratio\nprice_per_sqm\ncity_centers_nearest_km\nfloor_position\nprice_segment\npublication_weekday\npublication_month\npublication_year\npublication_month_year\nlocation_zone\n\n\n\n\n24\n8\n6500000\n97.2\n2015-10-31\n2\nNaN\n3.0\n46.5\n1\nне указано\n...\n0.20\n66872\n2.0\nпервый\nкомфорт\nСуббота\nОктябрь\n2015\nОкт'15\nЦентр\n\n\n35\n6\n15500000\n149.0\n2017-06-26\n5\nNaN\n5.0\n104.0\n4\nне указано\n...\n0.11\n104026\n4.0\nдругой\nпремиум\nПонедельник\nИюнь\n2017\nИюн'17\nЦентр\n\n\n61\n18\n7990000\n74.0\n2017-08-24\n2\nNaN\n4.0\n43.0\n4\nне указано\n...\n0.27\n107972\n4.0\nпоследний\nкомфорт\nЧетверг\nАвгуст\n2017\nАвг'17\nЦентр\n\n\n63\n2\n20000000\n118.0\n2018-09-11\n3\n3.0\n9.0\n68.0\n7\nне указано\n...\n0.14\n169491\n5.0\nдругой\nпремиум\nВторник\nСентябрь\n2018\nСен'18\nЦентр\n\n\n99\n32\n9600000\n90.0\n2017-09-26\n4\nNaN\n5.0\n67.0\n2\nне указано\n...\n0.09\n106666\n3.0\nдругой\nкомфорт\nВторник\nСентябрь\n2017\nСен'17\nЦентр\n\n\n\n\n5 rows × 33 columns\n\n\n\n\n\nShow the code\ndf_sliced = df[df.location_zone == 'Центр']\ngen_slice = pagri_data_tools.info_gen(df_sliced)\ngen = pagri_data_tools.info_gen(df)\n\n\n Вернуться к выводам\n\n\nShow the code\nprint('Срез датафрейма')\npagri_data_tools.info_column(df_sliced, 'last_price')\nprint('Весь датафрейм')\npagri_data_tools.info_column(df, 'last_price')\n\n\nСрез датафрейма\n\n\n\n        \n            \n\n\n\n\nTable 47: last_price\n\n\n\n\n\nValues\n2 475 (100%)\n\nMax\n763 000 000\n\nAvg\n14 750 097.08\n\n8 500 000 (1%)\n\n\nMissing\n---\n\n95%\n35 619 999.0\n\nMode\n---\n\n7 500 000 (1%)\n\n\nDistinct\n834 (34%)\n\n75%\n14 200 000\n\nRange\n761 400 000\n\n8 000 000 (1%)\n\n\nDuplicates\n1 641 (66%)\n\nMedian\n9 500 000\n\niQR\n7 250 000\n\n12 000 000 (1%)\n\n\nZeros\n---\n\n25%\n6 950 000\n\nstd\n26 020 216.07\n\n9 500 000 (1%)\n\n\nNegative\n---\n\n5%\n4 700 000\n\nkurt\n322.93\n\n9 000 000 (1%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1 600 000\n\nskew\n14.31\n\n10 000 000 (1%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nВесь датафрейм\n\n\n\n        \n            \n\n\n\n\nTable 48: last_price\n\n\n\n\n\nValues\n23 527 (100%)\n\nMax\n763 000 000\n\nAvg\n6 525 185.56\n\n4 500 000 (1%)\n\n\nMissing\n---\n\n95%\n15 253 200.0\n\nMode\n4 500 000\n\n3 500 000 (1%)\n\n\nDistinct\n2 920 (12%)\n\n75%\n6 790 000\n\nRange\n762 570 000\n\n4 000 000 (1%)\n\n\nDuplicates\n20 607 (88%)\n\nMedian\n4 646 000\n\niQR\n3 390 000\n\n4 300 000 (1%)\n\n\nZeros\n---\n\n25%\n3 400 000\n\nstd\n10 836 761.82\n\n4 200 000 (1%)\n\n\nNegative\n---\n\n5%\n1 860 000\n\nkurt\n1309.24\n\n3 600 000 (1%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n430 000\n\nskew\n26.19\n\n3 300 000 (1%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n- Среднее и медиана в центре для цены выше почти в 2 раза, чем во всем датафрейме.\n Вернуться к выводам\n\n\nShow the code\nprint('Срез датафрейма')\npagri_data_tools.info_column(df_sliced, 'total_area')\nprint('Весь датафрейм')\npagri_data_tools.info_column(df, 'total_area')\n\n\nСрез датафрейма\n\n\n\n        \n            \n\n\n\n\nTable 49: total_area\n\n\n\n\n\nValues\n2 475 (100%)\n\nMax\n631.2\n\nAvg\n95.49\n\n60 (1%)\n\n\nMissing\n---\n\n95%\n197.93\n\nMode\n60\n\n70 (1%)\n\n\nDistinct\n947 (38%)\n\n75%\n112\n\nRange\n619.2\n\n50 (1%)\n\n\nDuplicates\n1 528 (62%)\n\nMedian\n82\n\niQR\n51.95\n\n80 (1%)\n\n\nZeros\n---\n\n25%\n60.05\n\nstd\n58.86\n\n72 &lt;1%\n\n\nNegative\n---\n\n5%\n38.07\n\nkurt\n16.81\n\n110 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n12\n\nskew\n3.09\n\n85 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nВесь датафрейм\n\n\n\n        \n            \n\n\n\n\nTable 50: total_area\n\n\n\n\n\nValues\n23 527 (100%)\n\nMax\n900\n\nAvg\n60.29\n\n45 (2%)\n\n\nMissing\n---\n\n95%\n116\n\nMode\n45\n\n42 (2%)\n\n\nDistinct\n2 155 (9%)\n\n75%\n69.7\n\nRange\n888\n\n31 (1%)\n\n\nDuplicates\n21 372 (91%)\n\nMedian\n52\n\niQR\n29.7\n\n60 (1%)\n\n\nZeros\n---\n\n25%\n40\n\nstd\n35.53\n\n44 (1%)\n\n\nNegative\n---\n\n5%\n31\n\nkurt\n48.04\n\n40 (1%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n12\n\nskew\n4.78\n\n43 (1%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n- Общая площадь в центре больше, чем во всем датафрейме.\n Вернуться к выводам\n\n\nShow the code\nprint('Срез датафрейма')\npagri_data_tools.info_column(df_sliced, 'ceiling_height')\nprint('Весь датафрейм')\npagri_data_tools.info_column(df, 'ceiling_height')\n\n\nСрез датафрейма\n\n\n\n        \n            \n\n\n\n\nTable 51: ceiling_height\n\n\n\n\n\nValues\n1 639 (66%)\n\nMax\n4.9\n\nAvg\n3.14\n\n3 (19%)\n\n\nMissing\n836 (34%)\n\n95%\n3.8\n\nMode\n3\n\n3.2 (9%)\n\n\nDistinct\n130 (5%)\n\n75%\n3.34\n\nRange\n2.5\n\n3.5 (6%)\n\n\nDuplicates\n2 344 (95%)\n\nMedian\n3.1\n\niQR\n0.43\n\n2.7 (5%)\n\n\nZeros\n---\n\n25%\n2.91\n\nstd\n0.35\n\n3.1 (5%)\n\n\nNegative\n---\n\n5%\n2.7\n\nkurt\n1.32\n\n3.3 (4%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n2.4\n\nskew\n0.83\n\n2.8 (4%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nВесь датафрейм\n\n\n\n        \n            \n\n\n\n\nTable 52: ceiling_height\n\n\n\n\n\nValues\n14 443 (61%)\n\nMax\n5\n\nAvg\n2.72\n\n2.5 (24%)\n\n\nMissing\n9 084 (39%)\n\n95%\n3.27\n\nMode\n2.5\n\n2.6 (11%)\n\n\nDistinct\n164 (1%)\n\n75%\n2.8\n\nRange\n4\n\n2.7 (11%)\n\n\nDuplicates\n23 362 (99.3%)\n\nMedian\n2.65\n\niQR\n0.29\n\n3 (8%)\n\n\nZeros\n---\n\n25%\n2.51\n\nstd\n0.27\n\n2.8 (7%)\n\n\nNegative\n---\n\n5%\n2.5\n\nkurt\n6.65\n\n2.55 (7%)\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1\n\nskew\n2.07\n\n2.75 (6%)\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n- Высота потолков в центре больше, чем во всем датафрейме\n Вернуться к выводам\n\n\nShow the code\nprint('Срез датафрейма')\npagri_data_tools.info_column(df_sliced, 'balcony')\nprint('Весь датафрейм')\npagri_data_tools.info_column(df, 'balcony')\n\n\nСрез датафрейма\n\n\n\n        \n            \n\n\n\n\nTable 53: balcony\n\n\n\n\n\nValues\n931 (38%)\n\nMax\n5\n\nAvg\n0.7\n\n0 (57%)\n\n\nMissing\n1 544 (62%)\n\n95%\n2\n\nMode\n0\n\n1 (24%)\n\n\nDistinct\n6 (&lt;1%)\n\n75%\n1\n\nRange\n5\n\n2 (15%)\n\n\nDuplicates\n2 468 (99.7%)\n\nMedian\n0\n\niQR\n1\n\n4 (2%)\n\n\nZeros\n531 (21%)\n\n25%\n0\n\nstd\n1.0\n\n5 (1%)\n\n\nNegative\n---\n\n5%\n0\n\nkurt\n3.78\n\n3 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n1.79\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nВесь датафрейм\n\n\n\n        \n            \n\n\n\n\nTable 54: balcony\n\n\n\n\n\nValues\n12 064 (51%)\n\nMax\n5\n\nAvg\n1.16\n\n1 (35%)\n\n\nMissing\n11 463 (49%)\n\n95%\n2\n\nMode\n1\n\n0 (30%)\n\n\nDistinct\n6 (&lt;1%)\n\n75%\n2\n\nRange\n5\n\n2 (30%)\n\n\nDuplicates\n23 520 (99.9%)\n\nMedian\n1\n\niQR\n2\n\n5 (2%)\n\n\nZeros\n3 677 (16%)\n\n25%\n0\n\nstd\n1.07\n\n4 (2%)\n\n\nNegative\n---\n\n5%\n0\n\nkurt\n2.51\n\n3 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n1.24\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n- В центре меньше балконов, чем во всем датафрейме.\n\n\nShow the code\nprint('Срез датафрейма')\npagri_data_tools.info_column(df_sliced, 'parks_around3000')\nprint('Весь датафрейм')\npagri_data_tools.info_column(df, 'parks_around3000')\n\n\nСрез датафрейма\n\n\n\n        \n            \n\n\n\n\nTable 55: parks_around3000\n\n\n\n\n\nValues\n2 475 (100%)\n\nMax\n3\n\nAvg\n1.03\n\n1 (36%)\n\n\nMissing\n---\n\n95%\n3\n\nMode\n1\n\n0 (35%)\n\n\nDistinct\n4 (&lt;1%)\n\n75%\n2\n\nRange\n3\n\n2 (18%)\n\n\nDuplicates\n2 471 (99.8%)\n\nMedian\n1\n\niQR\n2\n\n3 (10%)\n\n\nZeros\n873 (35%)\n\n25%\n0\n\nstd\n0.97\n\n\n\n\nNegative\n---\n\n5%\n0\n\nkurt\n-0.64\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n0.61\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nВесь датафрейм\n\n\n\n        \n            \n\n\n\n\nTable 56: parks_around3000\n\n\n\n\n\nValues\n18 037 (77%)\n\nMax\n3\n\nAvg\n0.61\n\n0 (56%)\n\n\nMissing\n5 490 (23%)\n\n95%\n2\n\nMode\n0\n\n1 (31%)\n\n\nDistinct\n4 (&lt;1%)\n\n75%\n1\n\nRange\n3\n\n2 (10%)\n\n\nDuplicates\n23 522 (99.9%)\n\nMedian\n0\n\niQR\n1\n\n3 (4%)\n\n\nZeros\n10 027 (43%)\n\n25%\n0\n\nstd\n0.8\n\n\n\n\nNegative\n---\n\n5%\n0\n\nkurt\n0.87\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n0\n\nskew\n1.23\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n- В центре больше парков.\n\n\nShow the code\nprint('Срез датафрейма')\npagri_data_tools.info_column(df_sliced, 'days_exposition')\nprint('Весь датафрейм')\npagri_data_tools.info_column(df, 'days_exposition')\n\n\nСрез датафрейма\n\n\n\n        \n            \n\n\n\n\nTable 57: days_exposition\n\n\n\n\n\nValues\n2 063 (83%)\n\nMax\n1 572\n\nAvg\n263.26\n\n90.0 (3%)\n\n\nMissing\n412 (17%)\n\n95%\n885.8\n\nMode\n90.0\n\n60 (3%)\n\n\nDistinct\n697 (28%)\n\n75%\n369.5\n\nRange\n1 569\n\n30 &lt;1%\n\n\nDuplicates\n1 777 (72%)\n\nMedian\n150\n\niQR\n308.5\n\n4 &lt;1%\n\n\nZeros\n---\n\n25%\n61\n\nstd\n286.65\n\n61 &lt;1%\n\n\nNegative\n---\n\n5%\n12.0\n\nkurt\n2.68\n\n89.0 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n3.0\n\nskew\n1.69\n\n9 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nВесь датафрейм\n\n\n\n        \n            \n\n\n\n\nTable 58: days_exposition\n\n\n\n\n\nValues\n20 364 (87%)\n\nMax\n1 580\n\nAvg\n180.74\n\n45.0 (4%)\n\n\nMissing\n3 163 (13%)\n\n95%\n647.85\n\nMode\n45.0\n\n60 (3%)\n\n\nDistinct\n1 139 (5%)\n\n75%\n231\n\nRange\n1 579\n\n7 (1%)\n\n\nDuplicates\n22 387 (95%)\n\nMedian\n95\n\niQR\n186\n\n30 (1%)\n\n\nZeros\n---\n\n25%\n45.0\n\nstd\n219.76\n\n90.0 &lt;1%\n\n\nNegative\n---\n\n5%\n9\n\nkurt\n6.28\n\n4 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n1\n\nskew\n2.31\n\n3.0 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n- В центре объявления дольше находятся в экспозиции.\n Вернуться к выводам\n\n\nShow the code\nprint('Срез датафрейма')\npagri_data_tools.info_column(df_sliced, 'price_segment')\nprint('Весь датафрейм')\npagri_data_tools.info_column(df, 'price_segment')\n\n\nСрез датафрейма\n\n\n\n        \n            \n\n\n\n\nTable 59: price_segment\n\n\n\n\n\nValues\n2 475 (100%)\n\nкомфорт (52%)\n\n\nMissing\n---\n\nпремиум (45%)\n\n\nDistinct\n3 (&lt;1%)\n\nэконом (3%)\n\n\nDuplicated origin\n2 472 (99.9%)\n\n\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nВесь датафрейм\n\n\n\n        \n            \n\n\n\n\nTable 60: price_segment\n\n\n\n\n\nValues\n23 527 (100%)\n\nкомфорт (50%)\n\n\nMissing\n---\n\nэконом (38%)\n\n\nDistinct\n3 (&lt;1%)\n\nпремиум (11%)\n\n\nDuplicated origin\n23 524 (99.9%)\n\n\n\n\nDupl (modify - origin)\n---\n\n\n\n\nEmpty\n---\n\n\n\n\nRAM (Mb)\n&lt;1 Mb\n\n\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n- В центре меньше эконома и больше премиум квартир.\nПосмотрим на цену квадратного метра в 10 населенных пунктах с наибольшим количеством объявлений.\n\n\nShow the code\nselected_cities = df.groupby('locality_name').size().rename('count').sort_values(ascending=False).to_frame().head(10)\nselected_cities\n\n\n\n\n\n\n\n\n\ncount\n\n\nlocality_name\n\n\n\n\n\nСанкт-Петербург\n15625\n\n\nпосёлок Мурино\n518\n\n\nпосёлок Шушары\n439\n\n\nВсеволожск\n398\n\n\nПушкин\n369\n\n\nКолпино\n338\n\n\nпосёлок Парголово\n327\n\n\nГатчина\n306\n\n\nдеревня Кудрово\n299\n\n\nВыборг\n237\n\n\n\n\n\n\n\n\n\nShow the code\nselected_cities = selected_cities.index\n\n\nПосмотрим на среднюю цену квадратного метра в этих населённых пунктах.\n Вернуться к выводам\n\n\nShow the code\nconfig = dict(\n    df = df[df.locality_name.isin(selected_cities)]\n    , x = 'locality_name'\n    , x_axis_label = 'Название населённого пункта'\n    , y = 'price_per_sqm'\n    , y_axis_label = 'Цена квадратного метра'\n    , title = 'Цена кв метра в зависимости от населенного пункта'\n    , func = 'mean'\n    , width = None\n    , height = None\n    , orientation = 'v'\n)\npagri_data_tools.bar(config)\n\n\n                                                \n\n\nНаблюдения:\n- Санкт–Петербург, Пушкин и деревня Кудрово имеют самую большую цену квадратного метра.\n\n\n5.7 Промежуточный вывод\n\nСильная положительная корреляция между жилой площадью и общей площадью\nСильная положительная корреляция между числом комнат и общей площадью\nСильная положительная корреляция между числом комнат и жилой площадью\nСильная отрицательная корреляция между отношением площади кухни к общей площади и отношением жилой площади к общей площади\nУмеренная положительная корреляция между площадью кухни и общей площадью\nУмеренная положительная корреляция между ценой и общей площадью\nУмеренная положительная корреляция между ценой и жилой площадью\nУмеренная положительная корреляция между ценой и площадью кухни\nУмеренная положительная корреляция между ценой и жилой площадью\nОбщая площадь является самым значимым признаком для предсказания цены квартиры. Число дней экспозиции находится на втором месте.\nС ростом цены растет общая площадь, жилая площадь и площадь кухни.\nЕсть небольшая зависимость между ценой и количеством этажей. Чем больше цена, тем меньше этажей.\nЭто скорее всего связано с тем, что старые дома имеют меньше этажей и загородные дома имеют также меньше этажей.\nМожно заметить, что чем ближе к центру или парку, тем дороже стоит квартира.\nЧем больше число комнат, тем больше общая площадь.\n\nЧем больше число комнат, тем больше жилая площадь.\n\nВ воскресенье и субботу меньше всего публикаций\nБольше всего объявлений со средней удаленностью от центра.\nЕсть тренд на увеличение количества фотографий по годам.\nМедианная цена квартиры не сильно изменяется со временем\nМедианная площадь квартир не сильно меняется со временем\nМедианная стоимость квадратного метра практически не меняется со временем\nВ премиуме среднее количество комнат больше на всех этажах\nУ премиум площадь квартир больше на всех этажах\nВ центре медианная стоимость квартир выше\nВ центре медианная площадь квартир больше\nВ центре медианное количество комнат больше\nВ центре медианная высота потолков выше.\nСамые высокие дома находятся на средней удаленности от центра\nВ центре медианное количество дней экспозиции больше.\nСреднее и медиана в центре для цены выше почти в 2 раза, чем во всем датафрейме.\nОбщая площадь в центре больше, чем во всем датафрейме.\nВысота потолков в центре больше, чем во всем датафрейме\nВ центре меньше балконов, чем во всем датафрейме.\nВ центре объявления дольше находятся в экспозиции.\nВ центре меньше эконома и больше премиум квартир.\n\nСанкт–Петербург, Пушкин и деревня Кудрово имеют самую большую цену квадратного метра.\n\n\n\n\n6. Формулирование и провера гипотез\n\n6.1 Формулирование гипотез\nНа основе проведенного анализа данных сформулируем следующие гипотезы:\nГипотеза 1: Нет зависимости между количеством публикаций и днем недели.\nГипотеза 2: Удаленность от центра не влияет на количество публикаций.\nГипотеза 3: Площадь квартир не зависит от времени.\nГипотеза 4: Площадь квартиры не зависит от ценового сегмента.\nГипотеза 5: Количество дней экспозиции не зависит от удаленности от центра.\n\n\n6.2 Проверка гипотез\nПроверим сформулированные гипотезы.\n\n\nShow the code\ntitles_for_axis = dict(\n    total_area = ['Общая площадь', 'общей площади'],\n    price_per_sqm = ['Цена кв метра', 'цены кв метра'],\n    days_exposition = ['Число дней размещения', 'числа дней размещения'],\n)\n\n\nГипотеза 1: Нет зависимости между количеством публикаций и днем недели.\nH0: День недели не влияет на количество объявлений\nH1: День недели влияет на количество объявлений\n\n\nShow the code\ndaily_counts = df['publication_weekday'].value_counts().sort_index()\ndaily_counts\n\n\npublication_weekday\nПонедельник    3591\nВторник        4157\nСреда          3940\nЧетверг        4270\nПятница        3970\nСуббота        1918\nВоскресенье    1681\nName: count, dtype: int64\n\n\n\n\nShow the code\npagri_data_tools.chisquare(daily_counts)\n\n\nХи-квадрат Пирсона\nalpha =  0.05\np-value =  0.0\nОтклоняем нулевую гипотезу, поскольку p-value меньше уровня значимости\n\n\nРезультат:\nНа уровне значимости 0.05 гипотеза, что есть зависимость между количеством публикаций и днем недели подтвердилась.\nГипотеза 2: Удаленность от центра не влияет на количество публикаций.\nH0: Удаленность от центра не влияет на количество объявлений\nH1: Удаленность от центра влияет на количество объявлений\n\n\nShow the code\nzone_counts = df['location_zone'].value_counts().sort_index()\nzone_counts\n\n\nlocation_zone\nЦентр                   2475\nСредняя удаленность    12998\nОкраина                 2563\nне указано              5491\nName: count, dtype: int64\n\n\n\n\nShow the code\npagri_data_tools.chisquare(zone_counts)\n\n\nХи-квадрат Пирсона\nalpha =  0.05\np-value =  0.0\nОтклоняем нулевую гипотезу, поскольку p-value меньше уровня значимости\n\n\nРезультат:\nНа уровне значимости 0.05 гипотеза, что удаленность от центра влияет на количество публикаций, подтвердилась.\nГипотеза 3: Площадь квартир не зависит от времени.\nH0: Площадь квартир не зависит от времени.\nH1: Площадь квартир зависит от времени.\nПосмотрим на распределение площади квартир.\n\n\nShow the code\npagri_data_tools.histogram(df.total_area, titles_for_axis)\n\n\n                                                \n\n\nТак как у нас не нормальное распределение, то используем непараметрический критерий Краскела-Уоллиса.\nУровень значимости alpha выберем 0.05\n\n\nShow the code\npagri_data_tools.kruskal_df(df[['publication_month_year', 'total_area']])\n\n\nWarning: Sample size is less than 30 for one or more samples. Results may be unreliable.\nТест Краскела-Уоллиса (H-критерий)\nalpha =  0.05\np-value =  4.573162293436599e-35\nОтклоняем нулевую гипотезу, поскольку p-value меньше уровня значимости\n\n\nРезультат:\nНа уровне значимости 0.05 гипотеза, что площадь квартир не зависит от времени, не подтвердилась.\nНужно учесть, что в одной из групп меньше 30 элементов. Есть основания не доверять результатам.\nГипотеза 4: Площадь квартиры не зависит от ценового сегмента.\nH0: Площадь квартиры не зависит от ценового сегмента.\nH1: Площадь квартиры зависит от ценового сегмента.\nТак как у нас не нормальное распределение, то используем непараметрический критерий Краскела-Уоллиса.\nУровень значимости alpha выберем 0.05\n\n\nShow the code\npagri_data_tools.kruskal_df(df[['price_segment', 'total_area']])\n\n\nТест Краскела-Уоллиса (H-критерий)\nalpha =  0.05\np-value =  0.0\nОтклоняем нулевую гипотезу, поскольку p-value меньше уровня значимости\n\n\nРезультат:\nНа уровне значимости 0.05 гипотеза, что площадь квартиры зависит от ценового сегмента, подтвердилась.\nГипотеза 5: Количество дней экспозиции не зависит от удаленности от центра.\nH0: Количество дней экспозиции не зависит от удаленности от центра.\nH1: Количество дней экспозиции зависит от удаленности от центра.\nПосмотрим на распределение количества дней экспозиции.\n\n\nShow the code\npagri_data_tools.histogram(df.days_exposition, titles_for_axis)\n\n\n                                                \n\n\nТак как у нас не нормальное распределение, то используем непараметрический критерий Краскела-Уоллиса.\nУровень значимости alpha выберем 0.05\nТак как у нас есть пропуски, то для проведения теста их удалим.\nБудем полагать, что пропуски носят случайный характер и не повлияют на результат теста.\n\n\nShow the code\npagri_data_tools.kruskal_df(df[['location_zone', 'days_exposition']].dropna())\n\n\nТест Краскела-Уоллиса (H-критерий)\nalpha =  0.05\np-value =  2.135280354786305e-54\nОтклоняем нулевую гипотезу, поскольку p-value меньше уровня значимости\n\n\nРезультат:\nНа уровне значимости 0.05 гипотеза, что количество дней экспозиции зависит от удаленности от центра, подтвердилась.\n\n\n6.3 Промежуточный вывод\n\nНа уровне значимости 0.05 гипотеза, что есть зависимость между количеством публикаций и днем недели подтвердилась.\n\nНа уровне значимости 0.05 гипотеза, что удаленность от центра влияет на количество публикаций, подтвердилась.\n\nНа уровне значимости 0.05 гипотеза, что площадь квартир не зависит от времени, не подтвердилась.\nНужно учесть, что в одной из групп меньше 30 элементов. Есть основания не доверять результатам.\nНа уровне значимости 0.05 гипотеза, что площадь квартиры зависит от ценового сегмента, подтвердилась.\n\nНа уровне значимости 0.05 гипотеза, что количество дней экспозиции зависит от удаленности от центра, подтвердилась.\n\n\n\n\n7. Общий вывод\nВыводы:\n- Сильная положительная корреляция между жилой площадью и общей площадью\n- Сильная положительная корреляция между числом комнат и общей площадью\n- Сильная положительная корреляция между числом комнат и жилой площадью\n- Сильная отрицательная корреляция между отношением площади кухни к общей площади и отношением жилой площади к общей площади\n- Умеренная положительная корреляция между площадью кухни и общей площадью\n- Умеренная положительная корреляция между ценой и общей площадью\n- Умеренная положительная корреляция между ценой и жилой площадью\n- Умеренная положительная корреляция между ценой и площадью кухни\n- Умеренная положительная корреляция между ценой и жилой площадью\n- Общая площадь является самым значимым признаком для предсказания цены квартиры. Число дней экспозиции находится на втором месте.\n- Есть небольшая зависимость между ценой и количеством этажей. Чем больше цена, тем меньше этажей.\nЭто скорее всего связано с тем, что старые дома имеют меньше этажей и загородные дома имеют также меньше этажей.\n- Можно заметить, что чем ближе к центру или парку, тем дороже стоит квартира.\n- В среднем объявление находится в продаже 180 дней.\n- Чем больше число комнат, тем больше общая площадь.\n- Чем больше число комнат, тем больше жилая площадь.\n- В воскресенье и субботу меньше всего публикаций\n- Больше всего объявлений со средней удаленностью от центра.\n- Есть тренд на увеличение количества фотографий по годам.\n- Медианная цена квартиры не сильно изменяется со временем\n- Медианная площадь квартир не сильно меняется со временем\n- Медианная стоимость квадратного метра практически не меняется со временем\n- В премиуме среднее количество комнат больше на всех этажах\n- У премиум площадь квартир больше на всех этажах\n- В центре медианная стоимость квартир выше\n- В центре медианная площадь квартир больше\n- В центре медианное количество комнат больше\n- В центре медианная высота потолков выше.\n- Самые высокие дома находятся на средней удаленности от центра\n- В центре медианное количество дней экспозиции больше.\n- Среднее и медиана в центре для цены выше почти в 2 раза, чем во всем датафрейме.\n- Общая площадь в центре больше, чем во всем датафрейме.\n- Высота потолков в центре больше, чем во всем датафрейме\n- В центре меньше балконов, чем во всем датафрейме.\n- В центре объявления дольше находятся в экспозиции.\n- В центре меньше эконома и больше премиум квартир.\n- Санкт–Петербург, Пушкин и деревня Кудрово имеют самую большую цену квадратного метра.\nАномалии и особенности в данных:\n- Минимальное значение цены 12 190 является аномальным.\n- В высоте потолков есть пропуски (39 процентов)\n- В высоте потолков много выбросов. Есть значение 100.\n- В количестве этажей есть пропуски (меньше 1 процента)\n- В жилой площади 8 процентов пропусков.\n- В площади кухни 10 процентов пропусков.\n- В числе балконов 49 процентов пропусков. Скорее всего пропуски это отсутствие балкона.\n- В расстоянии до ближайшего аэропорта 23 процента пропусков.\n- В расстоянии до центр города 23 процента пропусков.\n- В колонке с количеством парков рядом 23 процента пропусков.\n- В колонке с расстоянием до ближайшего парка 66 процентов пропусков.\n- В колонке с количеством прудов 23 процента пропусков, скорее всего это отсутствие парков.\n- В колонке с расстоянием до ближайшего пруда 62 процента пропусков.\n- В колонке с количеством дней экспозиции 13 процентов пропусков.\n- В колонке с признаком является ли квартира апартаментом 88 процентов пропусков. Скорее всего эти квартиры не являются апартаментами.\n- В колонке с названием населенного пункта 49 пропущенных значений (меньше 1 процента)\n- Пропуски в колонках с количеством парков рядом, количеством прудов рядом,\nрасстоянием до центра, расстоянием до аэропорта совпадают.\n- Пропуски в количестве этажей совпадают с пропусками в признаке является ли квартира апартаментом.\n- В количестве этаже пропуски зависят от признака является ли квартира студией.\n- Почти все пропуски в квартирах, которые не являются студиями, даже учитывая общее количество пропорций.\n- В студиях в поле площадь кухни одни пропуски.\nРезультаты предобработки данных:\n- Мы выяснили, что 0 комнат указано у студий, либо в открытой планировке, либо у квартир с площадью до 40 кв.,\nпоэтому нули в количестве комнат заменили на 1.\n- В цене была одна запись со значением 12190. Скорее всего не поставили нули, но сложно определить сколько именно нулей не поставили.\nТак как это всего 1 запись, то удалили ее. - Удалили 36 записей (0.2%) с высотой потолка больше 5 метров. Так как таких записей мало, а замена их может исказить анализ.\n- В количестве этажей пропуски удалили, так как определить реальный этаж невозможно, а пропусков мало.\n- Пропуски в жилой площади и в площади кухни обработали с помощью коэффициентов отношения площадей.\nПри этом расчеты провели с учетом количества комнат, чтобы было точнее.\nРезультаты проверки гипотез:\n- Гипотеза 1: Нет зависимости между количеством публикаций и днем недели.\nРезультат: на уровне значимости 0.05 гипотеза не подтвердилась.\n- Гипотеза 2: Удаленность от центра не влияет на количество публикаций.\nРезультат: на уровне значимости 0.05 гипотеза не подтвердилась.\n- Гипотеза 3: Площадь квартир не зависит от времени.\nРезультат: на уровне значимости 0.05 гипотеза не подтвердилась.\n- Гипотеза 4: Площадь квартиры не зависит от ценового сегмента.\nРезультат: на уровне значимости 0.05 гипотеза не подтвердилась.\n- Гипотеза 5: Количество дней экспозиции не зависит от удаленности от центра.\nРезультат: на уровне значимости 0.05 гипотеза не подтвердилась.\nРекомендации:\n- Добавить контроль ввода слишком больших и слишком маленьких значений для цены, высоты потолка.\n- Добавить контроль ввода для количества комнат, чтобы исключить ввод нулевых значений.\n- Выяснить почему пропуски в колонках с количеством парков рядом, количеством прудов рядом,\nрасстоянием до центра, расстоянием до аэропорта в одних и тех же строках."
  },
  {
    "objectID": "projects/creditworthiness-research/creditworthiness_research.html#предобработка-данных",
    "href": "projects/creditworthiness-research/creditworthiness_research.html#предобработка-данных",
    "title": "Исследование надёжности заёмщиков",
    "section": "2. Предобработка данных",
    "text": "2. Предобработка данных\n\n2.1 Выбор нужных столбцов для дальнейшей работы и нормализация таблицы\nВернуться к выводам\n\n\nShow the code\n\ndf.head(1)\n\n\n\n\n\n\n\n\n\nchildren\ndays_employed\nage\neducation\neducation_id\nfamily_status\nfamily_status_id\ngender\nincome_type\ndebt\ntotal_income\npurpose\n\n\n\n\n0\n1\n-8437.673028\n42\nвысшее\n0\nженат / замужем\n0\nF\nсотрудник\nнет\n253875.639453\nпокупка жилья\n\n\n\n\n\n\n\nДля дальнейшего анализа нам не нужно 2 колонки с образованием и с семейным статусом.\nУдалим колонки с id образования и семейного статуса, так как нам для графиков лучше подойдут названия, а не id.\nТакже колонка days_employed имеет совершенно некорректные данные, нужно разбираться откуда такие данные.\nВ данный момент мы ничего не можем с этим сделать и любые действия могут исказить результат. Поэтому не будем брать эту колонку.\nСохраним исходный датафрейм в переменную df_origin, чтобы была возможность вернуться к нему\n\n\nShow the code\n\ndf_origin = df.copy()\n\n\n\n\nShow the code\n\ndf = df.drop(['education_id', 'family_status_id', 'days_employed'], axis=1)\ndf.head(1)\n\n\n\n\n\n\n\n\n\nchildren\nage\neducation\nfamily_status\ngender\nincome_type\ndebt\ntotal_income\npurpose\n\n\n\n\n0\n1\n42\nвысшее\nженат / замужем\nF\nсотрудник\nнет\n253875.639453\nпокупка жилья\n\n\n\n\n\n\n\n\n\n2.2 Обработка выбросов\nВернуться к выводам\nПосмотрим где у нас отрицательные значения\n\n\nShow the code\n\npagri_data_tools.check_negative_value_in_df(df)\n\n\n\n\n\n\n\n\n\nnegative\n\n\n\n\nchildren\n47 (0.2%)\n\n\n\n\n\n\n\nУ нас 0.2% отрицательных значений, лучше всего будет их просто удалить.\n\n\nShow the code\n\ndf.shape[0]\n\n\n21525\n\n\n\n\nShow the code\n\ndf = df[df.children &gt;= 0]\ndf.shape[0]\n\n\n21478\n\n\nПосмотрим где у нас нулевые значения\n\n\nShow the code\n\npagri_data_tools.check_zeros_value_in_df(df)\n\n\n\n\n\n\n\n\n\nzeros\n\n\n\n\nchildren\n14149 (65.9%)\n\n\nage\n101 (0.5%)\n\n\n\n\n\n\n\nВ количестве детей 0 это нормально. С этим ничего делать не будем.\nВ возрасте 0.5% нулевых значений. Лучше будет их удалить.\n\n\nShow the code\n\ndf.shape[0]\n\n\n21478\n\n\n\n\nShow the code\n\ndf = df[df.age != 0]\ndf.shape[0]\n\n\n21377\n\n\nУбедимся, что у нас нет нулевых и отрицательных значений там, где их быть не должно\n\n\nShow the code\n\npagri_data_tools.check_negative_value_in_df(df)\n\n\n\n\n\n\n\n\n\nnegative\n\n\n\n\n\n\n\n\n\n\n\nShow the code\n\npagri_data_tools.check_zeros_value_in_df(df)\n\n\n\n\n\n\n\n\n\nzeros\n\n\n\n\nchildren\n14080 (65.9%)\n\n\n\n\n\n\n\nПосле изучения данных мы выяснили, что у нас есть странное значение в количестве детей, которое может быть выбросом.\n\n\nShow the code\n\ncnt = (df.children == 20).sum()\ncnt\n\n\nnp.int64(75)\n\n\n\n\nShow the code\n\ncnt * 100 / df.shape[0]\n\n\nnp.float64(0.35084436543949105)\n\n\nУ нас таких данных меньше пол процента, удалим их, так как нет уверенности, что это не выбросы.\nЕсли их оставить, то они могут внести больше искажений, чем их удалить.\n\n\nShow the code\n\ndf.shape[0]\n\n\n21377\n\n\n\n\nShow the code\n\ndf = df[df.children != 20]\ndf.shape[0]\n\n\n21302\n\n\n\n\n2.3 Обработка пропусков\nВернуться к выводам\nПосмотрим, где у нас пропуски\n\n\nShow the code\n\npagri_data_tools.check_missed_value_in_df(df)\n\n\n\n\n\n\n\n\n\nmissed\n\n\n\n\ntotal_income\n2152 (10.1%)\n\n\n\n\n\n\n\nУ нас 10 процентов пропусков в доходе.\nУдалять нельзя. Попробуем заменить.\nВ доходе мы можем заполнить пропуски учитывая категории.\nВыберем категории следующие - образование, семейный статус, пол, занятость.\nВыбраны эти категории, так как они могут оказывать влияние на доход.\n\n\nShow the code\n\ndf.head(1)\n\n\n\n\n\n\n\n\n\nchildren\nage\neducation\nfamily_status\ngender\nincome_type\ndebt\ntotal_income\npurpose\n\n\n\n\n0\n1\n42\nвысшее\nженат / замужем\nF\nсотрудник\nнет\n253875.639453\nпокупка жилья\n\n\n\n\n\n\n\nПосмотрим размеры групп, если заменять внутри этих групп\n\n\nShow the code\n\ncategory_columns = ['education', 'family_status', 'gender', 'income_type']\nvalue_column = 'total_income'\npagri_data_tools.check_group_count(df, category_columns, value_column)\n\n\n67.53% groups have missing values\n63.46%  groups with missings have more than 30 elements\n85.58%  groups with missings have more than 10 elements\n90.38%  groups with missings have more than 5 elements\n2.88%  groups have only missings\n3 missings in groups with only missings\n\n\nНаблюдения:\n\n86 % групп с пропусками имеют 10 и более элементов. По таким группам можем заполнить пропуски медианой\n3 % групп имеют только пропуски, таких 3 пропусков всего, их мы такими группами заполнить не сможем.\n\nЗаполним пропуски в группах от 10 элементов\n\n\nShow the code\n\ndf.loc[:,value_column] = pagri_data_tools.fill_na_with_function_by_categories(df, category_columns, value_column, func='median', minimal_group_size=10)\n\n\n\n\nShow the code\n\npagri_data_tools.check_missed_value_in_df(df)\n\n\n\n\n\n\n\n\n\nmissed\n\n\n\n\ntotal_income\n18 (0.1%)\n\n\n\n\n\n\n\nОставшиеся пропуски попробуем заполнить без учета семейного статуса\n\n\nShow the code\n\ncategory_columns = ['education', 'gender', 'income_type']\nvalue_column = 'total_income'\npagri_data_tools.check_group_count(df, category_columns, value_column)\n\n\n23.26% groups have missing values\n60.00%  groups with missings have more than 30 elements\n80.00%  groups with missings have more than 10 elements\n80.00%  groups with missings have more than 5 elements\n10.00%  groups have only missings\n1 missings in groups with only missings\n\n\n\n\nShow the code\n\ndf[value_column] = pagri_data_tools.fill_na_with_function_by_categories(df, category_columns, value_column, func='median', minimal_group_size=10)\n\n\n\n\nShow the code\n\npagri_data_tools.check_missed_value_in_df(df)\n\n\n\n\n\n\n\n\n\nmissed\n\n\n\n\ntotal_income\n3 (0.0%)\n\n\n\n\n\n\n\nОставшиеся заменим по образованию и типу занятости\n\n\nShow the code\n\ncategory_columns = ['education', 'income_type']\nvalue_column = 'total_income'\npagri_data_tools.check_group_count(df, category_columns, value_column)\n\n\n8.33% groups have missing values\n0.00%  groups with missings have more than 30 elements\n0.00%  groups with missings have more than 10 elements\n50.00%  groups with missings have more than 5 elements\n0.00%  groups have only missings\n0 missings in groups with only missings\n\n\n\n\nShow the code\n\ndf[value_column] = pagri_data_tools.fill_na_with_function_by_categories(df, category_columns, value_column, func='median', minimal_group_size=10)\n\n\n\n\nShow the code\n\npagri_data_tools.check_missed_value_in_df(df)\n\n\n\n\n\n\n\n\n\nmissed\n\n\n\n\ntotal_income\n3 (0.0%)\n\n\n\n\n\n\n\nОставшиеся заменим медианой по образованию\n\n\nShow the code\n\ncategory_columns = ['education']\nvalue_column = 'total_income'\npagri_data_tools.check_group_count(df, category_columns, value_column)\n\n\n40.00% groups have missing values\n100.00%  groups with missings have more than 30 elements\n100.00%  groups with missings have more than 10 elements\n100.00%  groups with missings have more than 5 elements\n0.00%  groups have only missings\n0 missings in groups with only missings\n\n\n\n\nShow the code\n\ndf[value_column] = pagri_data_tools.fill_na_with_function_by_categories(df, category_columns, value_column, func='median', minimal_group_size=10)\n\n\n\n\nShow the code\n\npagri_data_tools.check_missed_value_in_df(df)\n\n\n\n\n\n\n\n\n\nmissed\n\n\n\n\n\n\n\n\n\nПропусков не осталось, можно продолжать анализ.\n\n\n2.4 Обработка дубликатов\nВернуться к выводам\nПосмотрим снова на дубли после обработки пропусков\n\n\nShow the code\n\npagri_data_tools.check_duplicated_value_in_df(df)\n\n\n\n\n\n\n\nTable 35: Duplicates\n\n\n\n\n\nchildren\n21296 (99.97%)\n\n\nage\n21245 (99.73%)\n\n\neducation\n21297 (99.98%)\n\n\nfamily_status\n21297 (99.98%)\n\n\ngender\n21299 (99.99%)\n\n\nincome_type\n21294 (99.96%)\n\n\ndebt\n21300 (99.99%)\n\n\ntotal_income\n2103 (9.87%)\n\n\npurpose\n21264 (99.82%)\n\n\n\n\n\n\n\n\nУ нас нет столбцов, где дублей не должно быть и нет комбинаций столбцов, в которых не должно быть дублей.\nПоэтому нет оснований обрабатывать дубли. Оставим как есть.\n\n\n2.5 Приведение данных к удобной форме\nВернуться к выводам\nОкруглим значения в поле дохода до целого.\nЦелая часть выглядит реальной. А с дробной частью нужно разбираться почему столько знаков.\n\n\nShow the code\n\ndf['total_income'] = df.total_income.round().astype('int32')\ndf.head(1)\n\n\n\n\n\n\n\n\n\nchildren\nage\neducation\nfamily_status\ngender\nincome_type\ndebt\ntotal_income\npurpose\n\n\n\n\n0\n1\n42\nвысшее\nженат / замужем\nF\nсотрудник\nнет\n253876\nпокупка жилья\n\n\n\n\n\n\n\nПосмотрим сколько у нас людей с полом XNA осталось\n\n\nShow the code\n\n(df.gender == 'XNA').sum()\n\n\nnp.int64(1)\n\n\nПосмотрим кто это\n\n\nShow the code\n\ndf[df.gender == 'XNA']\n\n\n\n\n\n\n\n\n\nchildren\nage\neducation\nfamily_status\ngender\nincome_type\ndebt\ntotal_income\npurpose\n\n\n\n\n10701\n0\n24\nнеоконченное высшее\nгражданский брак\nXNA\nкомпаньон\nнет\n203905\nпокупка недвижимости\n\n\n\n\n\n\n\nВсего 1 человек. И мы не можем идентифицировать его пол.\nУдалим, чтобы не мешало анализировать графики.\n\n\nShow the code\n\ndf.drop(df[df.gender == 'XNA'].index, inplace=True)\ndf['gender'] = df['gender'].cat.remove_unused_categories()\ndf.gender.value_counts(dropna=False).to_frame()\n\n\n\n\n\n\n\n\n\ncount\n\n\ngender\n\n\n\n\n\nF\n14083\n\n\nM\n7218\n\n\n\n\n\n\n\n\n\nShow the code\n\ndf.shape[0]\n\n\n21301\n\n\n\n\n2.6 Категоризация данных\nВернуться к выводам\n\n\nShow the code\n\ndf.head(1)\n\n\n\n\n\n\n\n\n\nchildren\nage\neducation\nfamily_status\ngender\nincome_type\ndebt\ntotal_income\npurpose\n\n\n\n\n0\n1\n42\nвысшее\nженат / замужем\nF\nсотрудник\nнет\n253876\nпокупка жилья\n\n\n\n\n\n\n\nСделаем дополнительную колонку, в которой будет указано есть дети или нет\n\n\nShow the code\n\ndf['has_child'] = df.children.apply(lambda x: 'есть' if x &gt; 0 else 'нет').astype('category')\ndf['has_child'].value_counts().to_frame()\n\n\n\n\n\n\n\n\n\ncount\n\n\nhas_child\n\n\n\n\n\nнет\n14079\n\n\nесть\n7222\n\n\n\n\n\n\n\nСоздадим дополнительную категориальную переменную из возраста, для удобства анализа.\nСделаем следующие группы - до 30 лет - от 30 до 40 лет - от 40 до 50 лет - от 50 до 60 лет - старше 60 лет\n\n\nShow the code\n\nlabels = ['до 30', '30-40', '40-50', '50-60', 'старше 60']\nbins = [-np.inf, 30, 40, 50, 60, np.inf]\n\n\n\n\nShow the code\n\ndf['age_cat'] = pagri_data_tools.create_category_column(df.age, labels=labels, bins=bins)\ndf['age_cat'].value_counts().to_frame()\n\n\n\n\n\n\n\n\n\ncount\n\n\nage_cat\n\n\n\n\n\n30-40\n5704\n\n\n40-50\n5241\n\n\n50-60\n4520\n\n\nдо 30\n3704\n\n\nстарше 60\n2132\n\n\n\n\n\n\n\nСоздадим категориальную переменную по доходу\n\n\nShow the code\n\npagri_data_tools.quantiles_columns(df.total_income)\n\n\n\n\n\n\n\nTable 36: Quantiles\n\n\n\n\n\nMax\n2 265 604\n\n\n5\n64 748\n\n\n25\n107 702\n\n\n50\n145 005\n\n\n75\n197 380\n\n\n95\n331 729\n\n\nMin\n20 667\n\n\n\n\n\n\n\n\nСделаем следующие категории - до 50 тыс - от 50 до 100 тыс - от 100 до 200 тыс - от 200 до 500 тыс - от 500 тыс и выше\n\n\nShow the code\n\nlabels = ['до 50 тыс', '50-100 тыс', '100-200 тыс', '200-500 тыс', 'больше 500 тыс']\nbins = [-np.inf, 50_000, 100_000, 200_000, 500_000, np.inf]\n\n\n\n\nShow the code\n\ndf['total_income_cat'] = pagri_data_tools.create_category_column(df.total_income, labels=labels, bins=bins)\ndf['total_income_cat'].value_counts().to_frame()\n\n\n\n\n\n\n\n\n\ncount\n\n\ntotal_income_cat\n\n\n\n\n\n100-200 тыс\n11778\n\n\n200-500 тыс\n4876\n\n\n50-100 тыс\n4056\n\n\nдо 50 тыс\n369\n\n\nбольше 500 тыс\n222\n\n\n\n\n\n\n\nСделаем категории из колонки целей кредита используя лемматизацию\n\n\nShow the code\n\ncategorization_dict = {\n    'недвижимость': ['жилье', 'недвижимость']\n    , 'образование': ['образование']\n    , 'автомобиль': ['автомобиль', 'машина']\n    , 'свадьба': ['свадьба']\n}\n\n\n\n\nShow the code\n\ndf['purpose_new'] = pagri_data_tools.categorize_column_by_lemmatize(df.purpose, categorization_dict, use_cache=True)\ndf['purpose_new'].value_counts().to_frame()\n\n\n\n\n\n\n\n\n\ncount\n\n\npurpose_new\n\n\n\n\n\nнедвижимость\n10732\n\n\nавтомобиль\n4267\n\n\nобразование\n3979\n\n\nсвадьба\n2323\n\n\n\n\n\n\n\nУдалим старую цель кредита\n\n\nShow the code\n\ndf = df.drop('purpose', axis=1).rename(columns={'purpose_new': 'purpose'})\ndf.head(1)\n\n\n\n\n\n\n\n\n\nchildren\nage\neducation\nfamily_status\ngender\nincome_type\ndebt\ntotal_income\nhas_child\nage_cat\ntotal_income_cat\npurpose\n\n\n\n\n0\n1\n42\nвысшее\nженат / замужем\nF\nсотрудник\nнет\n253876\nесть\n40-50\n200-500 тыс\nнедвижимость\n\n\n\n\n\n\n\n\n\n2.7 Промежуточный вывод\nВернуться к выводам\n\nУдалили колонки с id образования и семейного статуса, так как нам для графиков лучше подойдут названия, а не id.\nКолонка со стажем имеет совершенно некорректные данные. Чтобы не внести искажение в анализ, удалим эту колонку.\nУдалили отрицательные значения в колонке с количеством детей, которые составляли 0,2% от общего количества записей в данных.\nУдалили нулевые значения в колонке с возрастом, которые составляли 0,5% от общего количества записей в данных.\nУдалили записи, где количество детей равно 20, которые составляли 0,35% от общего количества записей в данных.\nЗаполнили пропуски в столбце с доходом медианным значением, учитывая категории образование, семейный статус, пол, занятость.\nОкруглили значения дохода до целого.\nУдалили 1 запись, где пол равен XNA\nСоздали дополнительную бинарную колонку, указывающую на наличие детей (1 - есть дети, 0 - нет детей).\nСделали дополнительную колонку с возрастными категориями.\n\nСделали дополнительную колонку с категориями дохода.\n\nТематизировали колонку с целью кредита, чтобы получить категории целей кредита."
  },
  {
    "objectID": "projects/creditworthiness-research/creditworthiness_research.html#анализ-корреляций-между-переменными",
    "href": "projects/creditworthiness-research/creditworthiness_research.html#анализ-корреляций-между-переменными",
    "title": "Исследование надёжности заёмщиков",
    "section": "3. Анализ корреляций между переменными",
    "text": "3. Анализ корреляций между переменными\n\n3.1 Исследование корреляционных связей\nВернуться к выводам\nПосмотрим на корреляцию между колонками\n\n\nShow the code\n\ntitles_for_axis = dict(\n    children = 'Кол-во детей'\n    , age = 'Возраст'\n    , total_income = 'Доход'\n)\n\n\n\n\nShow the code\n\npagri_data_tools.heatmap_corr(df, titles_for_axis=titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nКорреляции не обнаружено\n\nПосмотрим какие переменные сильнее других влияют на предсказание долга с помощью модели случайного леса\n Вернуться к выводам\n\n\nShow the code\n\ntitles_for_axis = dict(\n    debt = 'долга'\n    , children = 'Кол-во детей'\n    , age = 'Возраст'\n    , total_income = 'Доход'\n)\n\n\n\n\nShow the code\n\npagri_data_tools.plot_feature_importances_classifier(df, target='debt', titles_for_axis=titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nВидим, что доход значительно превышает стаж и количество детей.\n\n\n\n3.2 Промежуточный вывод\nВернуться к выводам\n\nКорреляций между переменными не обнаружено.\nДоход является самым значимым признаком для предсказания задолженности."
  },
  {
    "objectID": "projects/creditworthiness-research/creditworthiness_research.html#анализ-взаимосвязей-переменных-на-графиках",
    "href": "projects/creditworthiness-research/creditworthiness_research.html#анализ-взаимосвязей-переменных-на-графиках",
    "title": "Исследование надёжности заёмщиков",
    "section": "4. Анализ взаимосвязей переменных на графиках",
    "text": "4. Анализ взаимосвязей переменных на графиках\n\n4.1 Изучение зависимостей между числовыми переменными\nВернуться к выводам\nПосмотрим на зависимости между числовыми переменными.\n\n\n\nShow the code\n\ntitles_for_axis = dict(\n    # numeric column\n    children = 'Кол-во детей'\n    , age = 'Возраст'\n    , total_income = 'Доход'\n)\n\n\n\n\nShow the code\n\npagri_data_tools.pairplot(df, titles_for_axis=titles_for_axis, horizontal_spacing=0.12, height=400, width=1200, rows=1, cols=3).show(config=dict(displayModeBar=False, dpi=200), renderer=\"png\")\n\n\n\n\n\n\n\n\n\nНаблюдения:\n\nМожно заметить, что чем меньше количество детей, тем больше значений с высоким доходом.\nТакже можно заметить, что чем моложе клиент, тем в среднем у него больше детей.\n\n\n\n4.2 Изучение зависимостей между категориальными переменными\nВернуться к выводам\n\n\nShow the code\n\ntitles_for_axis = dict(\n    # numeric column\n    children = ['Количество детей', 'количество детей', 0]\n    , age = ['Возраст, лет', 'возраст', 1]\n    , total_income = ['Ежемесячный доход', 'ежемесячный доход', 1]\n     # category column\n    , education = ['Уровень образования', 'уровня образования']\n    , family_status = ['Семейное положение', 'семейного положения']\n    , gender = ['Пол', 'пола']\n    , income_type = ['Тип занятости', 'типа занятости']\n    , debt = ['Задолженность', 'задолженности']\n    , purpose = ['Цель получения кредита', 'цели получения кредита']\n    , has_child = ['Наличие детей', 'наличия детей']\n    , age_cat = ['Возрастная категория, лет', 'возрастной категории']\n    , total_income_cat = ['Категория дохода', 'категории дохода']\n)\n\n\nПосмотрим на распределение количества элементов между группами\n\n\nShow the code\n\ngen = pagri_data_tools.categorical_graph_analys_gen(df, titles_for_axis)\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nВ каждой категории семейного положения доля женщин больше.\n\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nСреди семейного статуса и занятости больше всего женатых сотрудников\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nНет явной зависимости семейного положения и задолженности.\nНе женатые и люди в гражданском браке чаще других имеют задолженность, но всего лишь на пару процентов долей.\n\nЖенатых без долго явно больше остальных.\n\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nЖенатых без детей больше всего\n\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nВозрастная группа 30-40 лет выделяется среди женатых\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nБольшая часть женатых имеет доход 100-200 тыс\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nБольше всего кредит берут на цели, связанные с недвижимостью, кроме людей в гражданском браке\nЛюди в гражданском браке чаще берут кредит на свадьбу\n\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nБольше всего женщин сотрудников\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nЖенщины чаще возвращают кредит. Это видно из пропорций.\n\n\n\nShow the code\n\n%%capture\nnext(gen);next(gen);next(gen);next(gen);next(gen);next(gen);next(gen);next(gen);next(gen);next(gen)\n\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nЛюди старше 60 лет реже других имеют долги (вкладка сравнение задолженность).\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nДолги есть у людей с разным доходом\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения: - Кредиты, оформленные на цели, связанные с недвижимостью, реже других приводят к долгам.\n\n\nShow the code\n\n%%capture\nnext(gen);next(gen);next(gen)\n\n\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nМожно заметить, что категория возраста от 30 до 40 лет имеет больше зарплату\n\nПосмотрим на распределение количества людей по категориям на сэнки диаграмме\n\n\nShow the code\n\ndf.head(1)\n\n\n\n\n\n\n\n\n\nchildren\nage\neducation\nfamily_status\ngender\nincome_type\ndebt\ntotal_income\nhas_child\nage_cat\ntotal_income_cat\npurpose\n\n\n\n\n0\n1\n42\nвысшее\nженат / замужем\nF\nсотрудник\nнет\n253876\nесть\n40-50\n200-500 тыс\nнедвижимость\n\n\n\n\n\n\n\n\n\n4.3 Изучение зависимостей между числовыми и категориальными переменными\nВернуться к выводам\n\n\nShow the code\n\ntitles_for_axis = dict(\n    # numeric column\n    children = ['Количество детей', 'количество детей', 0]\n    , age = ['Возраст, лет', 'возраст', 1]\n    , total_income = ['Ежемесячный доход', 'ежемесячный доход', 1]\n     # category column\n    , education = ['Уровень образования', 'уровня образования']\n    , family_status = ['Семейное положение', 'семейного положения']\n    , gender = ['Пол', 'пола']\n    , income_type = ['Тип занятости', 'типа занятости']\n    , debt = ['Задолженность', 'задолженности']\n    , purpose = ['Цель получения кредита', 'цели получения кредита']\n    , has_child = ['Наличие детей', 'наличия детей']\n    , age_cat = ['Возрастная категория', 'возрастной категории']\n    , total_income_cat = ['Категория дохода', 'категории дохода']\n)\n\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , y = 'gender'\n    , x = 'total_income'\n    # , category = 'education'\n    , width = 800\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nУ мужчин средний доход выше\n\n Вернуться к выводам\n\n\nShow the code\n\nconfig = dict(df = df\n    , y = 'gender'\n    , x = 'total_income'\n    , category = 'education'\n    , width = 900\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nНа всех уровнях образования, кроме ученой степени, доход у мужчин выше.\n\n Вернуться к выводам\n\n\nShow the code\n\nconfig = dict(df = df\n    , y = 'purpose'\n    , x = 'total_income'\n    # , category = 'education'\n    , width = 800\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nЦель получения кредита практически не зависит от среднего ежемесячного доход\n\n Вернуться к выводам\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'family_status'\n    , y = 'children'\n    , category = 'gender'\n    , width = 820\n    , orientation = 'h'\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nУ мужчин, которые в браке или были в браке, количество детей больше, чем у мужчин, женщин в той же категории\nУ женатых детей больше, что логично\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'family_status'\n    , y = 'total_income'\n    # , category = 'education'\n    , width = 800\n    , orientation = 'h'\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nСредний доход по семейному статусу примерно одинаковый, у вдовцов немного пониже\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'income_type'\n    , y = 'total_income'\n    # , category = 'family_status'\n    , width = 800\n    , func = 'median'\n    , orientation='h'\n    # , text = True\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nМедианный доход предпринимателей больше, чем у других.\n\n Вернуться к выводам\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'children'\n    , y = 'debt'\n    , category = 'gender'\n    , width = 800\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nУ должников в среднем больше детей. В частности, среди должников женщины имеют больше детей в среднем, чем мужчины, а среди не должников мужчины имеют больше детей в среднем, чем женщины\n\n Вернуться к выводам\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'age'\n    , y = 'debt'\n    # , category = 'family_status'\n    , width = 850\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nУ должников средний возраст немного ниже\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'gender'\n    , y = 'age'\n    , category = 'income_type'\n    , width = 1000\n    , showgrid_x = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nВ разрезе семейного положения ситуация сохраняться, возраст немного меньше у должников\n\n Вернуться к выводам\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'total_income'\n    , y = 'debt'\n    # , category = 'education'\n    , width = 800\n    , func = 'median'\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nМедианный доход у должников и не должников практически не отличается\n\n\n\nShow the code\n\n\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'age_cat'\n    , y = 'children'\n    , category = 'gender'\n    , width = 900\n    , showgrid_x = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nСреднее количество детей у группы 30-40 лет больше.\nДо 40 лет детей больше у женщин, старше 40 лет детей больше у мужчин\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'age_cat'\n    , y = 'total_income'\n    , category = 'income_type'\n    , width = 1200\n    , showgrid_x = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nПредприниматели до 30 лет имеют значительно болье средний доход, но в этой группе всего один клиент.\nСтранно, что в группе 40-50 лет безработные имеют доход сравнимый с другими группами, а в других возрастных категориях - нет.\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , y = 'children'\n    , x = 'total_income_cat'\n    , category = 'gender'\n    , width = 800\n    # , orientation='h'\n    , showgrid_x = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nС доходом до 100 тысяч детей больше у женщин, а с доходом выше 100 тысяч - у мужчин.\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'gender'\n    , y = 'age'\n    , category = 'education'\n    , width = 800\n    , orientation='h'\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nУ женщин средний возраст выше, кроме категории ученая степень\nУ мужчин с ученой степенью средний возраст выше, чем у женщин, но размер группы ‘ученая степень’ маленький, поэтому утверждать нельзя.\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'age'\n    , y = 'income_type'\n    # , category = 'income_type'\n    , width = 800\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nСредний возраст распределен логично, можно отметить, что госслужащие имеют средний возраст больше 40 лет\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'income_type'\n    , y = 'total_income'\n    # , category = 'education'\n    , width = 800\n    , orientation = 'h'\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nСредний доход предпринимателей значительно выше других, но как видно предприниматель только 1, поэтому это нерепрезентативно.\nВ декрете и студент имеют самый низкий доход, но размеры групп маленькие, поэтому также нет уверенности в выводе.\n\n Вернуться к выводам\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'debt'\n    , y = 'age'\n    , category = 'gender'\n    , orientation='h'\n    , width = 800\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nДолжники имеют ниже средний возраст как мужчины так и женщины.\n\n Вернуться к выводам\n\n\nShow the code\n\nconfig = dict(df = df\n    , y = 'age_cat'\n    , x = 'total_income'\n    # , category = 'education'\n    , width = 800\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nЛюди от 30 до 50 лет имеют самый высокий средний доход.\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'total_income_cat'\n    , y = 'children'\n    , category = 'debt'\n    , width = 1200\n    , showgrid_x = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nВо всех группах дохода, кроме ‘больше 500 тыс’ среднее количество детей у должников больше\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'total_income_cat'\n    , y = 'age'\n    , category = 'debt'\n    , width = 800\n    , showgrid_y = False\n    , orientation='h'\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nВо всех группах дохода средний возраст должников ниже\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'total_income_cat'\n    , y = 'children'\n    , category = 'age_cat'\n    # , width = 1200\n    , showgrid_x = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nВозрастная категория ‘30-40’ лет имеет больше детей во всех категориях дохода\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'has_child'\n    , y = 'age'\n    , category = 'family_status'\n    , width = 800\n    , showgrid_y = False\n    , orientation='h'\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nДля всех значений в семейном статусе, у людей без детей средний возраст выше.\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'has_child'\n    , y = 'age'\n    # , category = 'age_cat'\n    , width = 800\n    , showgrid_y = False\n    , orientation='h'\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nСредний возраст у людей без детей выше примерно на 9 лет\n\n\n\n4.4 Промежуточный вывод\nВернуться к выводам\n\nМожно заметить, что чем меньше количество детей, тем больше значений с высоким доходом.\nСреди семейного статуса и занятости больше всего женатых сотрудников\nЖенатых без долго явно больше остальных.\nБольшая часть женатых имеет доход 100-200 тыс\nЖенщины чаще возвращают кредит.\nДолги есть у людей с разным доходом.\nНа всех уровнях образования, кроме ученой степени, доход у мужчин выше.\nЦель получения кредита практически не зависит от среднего ежемесячного дохода.\nУ мужчин, которые в браке или были в браке, количество детей больше, чем у женщин в той же категории\nСредний доход по семейному статусу примерно одинаковый, у вдовцов немного пониже\nУ должников в среднем больше детей\nУ должников среднее количество детей больше у женщин, а у не должников среднее количество детей больше у мужчин\nУ должников средний возраст немного ниже для всех категорий семейного положения.\nМедианный доход у должников и не должников практически не отличается\nСреднее количество детей у группы 30-40 лет больше.\nДо 40 лет детей больше у женщин, старше 40 лет детей больше у мужчин\nВ группе 40-50 лет безработные имеют доход сравнимый с другими группами, а в других возрастных категориях доход безработных значительно ниже.\nС доходом до 100 тысяч детей больше у женщин, а с доходом выше 100 тысяч - у мужчин.\nУ женщин средний возраст выше, кроме категории ученая степень\nДолжники имеют ниже средний возраст как мужчины так и женщины. Ситуация сохраняется во всех группах дохода.\nЛюди от 30 до 50 лет имеют самый высокий средний доход.\nВо всех группах дохода, кроме ‘больше 500 тыс’ среднее количество детей больше\nВозрастная категория ‘30-40’ лет имеет больше детей во всех категориях дохода\nБольше всего кредит берут на цели, связанные с недвижимостью, кроме людей в гражданском браке\nЛюди в гражданском браке чаще берут кредит на свадьбу"
  },
  {
    "objectID": "projects/creditworthiness-research/creditworthiness_research.html#формулирование-и-провера-гипотез",
    "href": "projects/creditworthiness-research/creditworthiness_research.html#формулирование-и-провера-гипотез",
    "title": "Исследование надёжности заёмщиков",
    "section": "5. Формулирование и провера гипотез",
    "text": "5. Формулирование и провера гипотез\n\n5.1 Формулирование гипотез\nВернуться к выводам\nНа основе проведенного анализа данных сформулируем следующие гипотезы:\nГипотеза 1: Нет зависимость между наличием детей и возвратом кредита в срок.\nГипотеза 2: У мужчин средний доход выше\nГипотеза 3: Цель получения кредита не зависит от еза 3: Цель получения кредита не зависит от среднего ежемесячного доход\nГипотеза 4: Средний доход по семейному статусу одинаковый, но у вдовцов отличается\nГипотеза 5: У должников в среднем больше детей\nГипотеза 6: У должников средний возраст ниже\nГипотеза 7: Медианный доход у должников и не должников не отличается\n\n\nShow the code\n\ntitles_for_axis = dict(\n    # numeric column\n    children = ['Количество детей', 'количества детей']\n    , age = ['Возраст', 'возраста']\n    , total_income = ['Ежемесячный доход', 'ежемесячного дохода']\n)\n\n\n\n\n5.2 Проверка гипотез\nВернуться к выводам\nПроверим сформулированные гипотезы.\nГипотеза 1: Нет зависимость между наличием детей и возвратом кредита в срок\nH0: Наличие детей не влияет на возврат кредита в срок.\nH1: Наличие детей влияет на возврат кредита в срок.\nТак как у нас обе переменных категориальные, то воспользуемся критерием хи-квадрат Пирсона.\nУровень значимости alpha выберем 0.05\n\n\nShow the code\n\npagri_data_tools.chi2_pearson(df.has_child, df.debt)\n\n\nХи-квадрат Пирсона\nalpha =  0.05\np-value =  1.724356890544321e-05\nОтклоняем нулевую гипотезу, поскольку p-value меньше уровня значимости\n\n\nРезультат:\nНа уровне значимости 0.05 гипотеза, что наличие детей не влияет на возврат кредита в срок не подтвердилась.\nГипотеза 2: У мужчин средний доход выше\nH0: У мужчин средний доход не выше, чем у женщин\nH1: У мужчин средний доход выше, чем у женщин\nпосмотрим на распределение\n\n\nShow the code\n\npagri_data_tools.histogram(df.total_income, titles_for_axis)\n\n\n                                                \n\n\nУ нас значительные выбросы в доходе нужно использовать непараметрический тест\nИспользуем критерий Манна-Уитни\nАльтернатива будет - больше\nУровень значимости alpha выберем 0.05\n\n\nShow the code\n\nmale = df[df.gender=='M']['total_income']\nfemale = df[df.gender=='F']['total_income']\n\n\n\n\nShow the code\n\npagri_data_tools.mannwhitneyu(male, female, alternative='l')\n\n\nU-критерий Манна-Уитни\nalpha =  0.05\np-value =  2.4375861413179528e-245\nОтклоняем нулевую гипотезу, поскольку p-value меньше уровня значимости\n\n\nРезультат:\nНа уровне значимости 0.05 гипотеза, что у мужчин средний доход выше, чем у женщин подтвердилась\nГипотеза 3: Цель получения кредита не зависит от среднего ежемесячного доход\nH0: Средний ежемесячный доход не различается между группами цели получения кредита.\nH1: Средний ежемесячный доход различается между группами цели получения кредита.\nИспользуем критерий Краскела-Уоллиса\nУровень значимости alpha выберем 0.05\n\n\nShow the code\n\ndf.head(1)\n\n\n\n\n\n\n\n\n\nchildren\nage\neducation\nfamily_status\ngender\nincome_type\ndebt\ntotal_income\nhas_child\nage_cat\ntotal_income_cat\npurpose\n\n\n\n\n0\n1\n42\nвысшее\nженат / замужем\nF\nсотрудник\nнет\n253876\nесть\n40-50\n200-500 тыс\nнедвижимость\n\n\n\n\n\n\n\n\n\nShow the code\n\npagri_data_tools.kruskal_df(df[['purpose', 'total_income']])\n\n\nТест Краскела-Уоллиса (H-критерий)\nalpha =  0.05\np-value =  0.281811844807747\nНет оснований отвергнуть нулевую гипотезу, поскольку p-value больше или равно уровню значимости\n\n\nРезультат:\nНа уровне значимости 0.05 у нас нет оснований отвергнуть гипотезу, что цель получения кредита практически не зависит от среднего ежемесяченого доход\nГипотеза 4: Средний доход по семейному статусу одинаковый, но у вдовцов отличается\nH0: Средний ежемесячный доход не различается между группами по семейному статусу\nH1: Средний ежемесячный доход различается между группами по семейному статусу\nИспользуем критерий Краскела-Уоллиса\nУровень значимости alpha выберем 0.05\n\n\nShow the code\n\npagri_data_tools.kruskal_df(df[['family_status', 'total_income']])\n\n\nТест Краскела-Уоллиса (H-критерий)\nalpha =  0.05\np-value =  6.410790246681138e-16\nОтклоняем нулевую гипотезу, поскольку p-value меньше уровня значимости\n\n\nИспользуем тест Тьюки, чтобы определить различия между группами\nУровень значимости alpha выберем 0.05\n\n\nShow the code\n\npagri_data_tools.tukey_hsd_df(df[['family_status', 'total_income']])\n\n\n                  Multiple Comparison of Means - Tukey HSD, FWER=0.05                   \n========================================================================================\n        group1             group2        meandiff  p-adj     lower       upper    reject\n----------------------------------------------------------------------------------------\nНе женат / не замужем        в разводе   1164.3623 0.9971  -8164.6436  10493.3681  False\nНе женат / не замужем   вдовец / вдова -24417.8772    0.0 -34517.7163  -14318.038   True\nНе женат / не замужем гражданский брак  -2094.6023 0.9086  -8676.0921   4486.8875  False\nНе женат / не замужем  женат / замужем    -18.9288    1.0  -5656.3008   5618.4432  False\n            в разводе   вдовец / вдова -25582.2395    0.0 -37297.2146 -13867.2643   True\n            в разводе гражданский брак  -3258.9646 0.8541 -12121.8028   5603.8736  False\n            в разводе  женат / замужем  -1183.2911 0.9949  -9369.4902    7002.908  False\n       вдовец / вдова гражданский брак  22323.2749    0.0  12652.3751  31994.1746   True\n       вдовец / вдова  женат / замужем  24398.9483    0.0  15344.1012  33453.7955   True\n     гражданский брак  женат / замужем   2075.6735 0.7668  -2751.2835   6902.6304  False\n----------------------------------------------------------------------------------------\n\n\nВидим, что гипотеза отвергается в парах где есть вдова / вдовец\nРезультат:\nНа уровне значимости 0.05 гипотеза, что средний доход по семейному статусу примерно одинаковый, но у вдовцов отличается подтвердилась.\nГипотеза 5: У должников в среднем больше детей\nH0: У должников и не должников в среднем одинаковое количество детей.\nH1: У должников в среднем больше детей, чем у не должников.\nПосмотрим на распределение количества детей\n\n\nShow the code\n\npagri_data_tools.histogram(df.children, titles_for_axis=titles_for_axis)\n\n\n                                                \n\n\nТак как у нас дискретное распределение, то будем использовать критерий Манна-Уитни\nУровень значимости alpha выберем 0.05\n\n\nShow the code\n\ndf.head(1)\n\n\n\n\n\n\n\n\n\nchildren\nage\neducation\nfamily_status\ngender\nincome_type\ndebt\ntotal_income\nhas_child\nage_cat\ntotal_income_cat\npurpose\n\n\n\n\n0\n1\n42\nвысшее\nженат / замужем\nF\nсотрудник\nнет\n253876\nесть\n40-50\n200-500 тыс\nнедвижимость\n\n\n\n\n\n\n\n\n\nShow the code\n\nyes = df[df.debt=='есть']['children']\nno = df[df.debt=='нет']['children']\n\n\n\n\nShow the code\n\npagri_data_tools.mannwhitneyu(yes, no, alternative='l')\n\n\nU-критерий Манна-Уитни\nalpha =  0.05\np-value =  1.0747666746471685e-05\nОтклоняем нулевую гипотезу, поскольку p-value меньше уровня значимости\n\n\nРезультат:\nНа уровне значимости 0.05 гипотеза, что у должников в среднем больше детей подтвердилась.\nГипотеза 6: У должников средний возраст ниже\nH0: У должников и не должников одинаковый средний возраст\nH1: У должников средний возраст ниже, чем у не должников.\nПосмотрим на распределение возраста\n\n\nShow the code\n\npagri_data_tools.histogram(df.age, titles_for_axis=titles_for_axis)\n\n\n                                                \n\n\nПроверим гипотезу, что дисперсии в группах не отличаются\nH0: У должников и не должников дисперсия не отличается\nH1: У должников и не должников дисперсия отличается\nИспользуем тест Левена\n\n\nShow the code\n\nyes = df[df.debt=='есть']['age']\nno = df[df.debt=='нет']['age']\n\n\n\n\nShow the code\n\npagri_data_tools.levene([yes, no])\n\n\nТест Левена на гомогенность дисперсии\nalpha =  0.05\np-value =  0.00014336895517146544\nОтклоняем нулевую гипотезу, поскольку p-value меньше уровня значимости\n\n\nТак как дисперсия в группах разная, будем использовать тест Уэлча.\nУровень значимости alpha выберем 0.05\n\n\nShow the code\n\npagri_data_tools.ttest_ind(yes, no, equal_var=False, alternative='s')\n\n\nT-критерий Уэлча\np-value =  1.7456980757984063e-27\nalpha =  0.05\nbeta =  0.0\nОтклоняем нулевую гипотезу, поскольку p-value меньше уровня значимости\n\n\nПостроим доверительный интервал\n\n\nShow the code\n\npagri_data_tools.confint_t_2samples(yes, no, equal_var=False, alternative='s')\n\n\n(-inf, np.float64(-2.7569637392575))\n\n\nРезультат:\nНа уровне значимости 0.05 гипотеза, что у должников средний возраст ниже подтвердилась.\n95 % доверительный интервал для разницы средних возрастов для должников и не должников равен (-inf, -2.74)\nГипотеза 7: Медианный доход у должников и не должников не отличается\nH0: Медианный доход у должников и не должников не отличается\nH1: Медианный доход у должников и не должников отличается\nИспользуем бутстреп для проверке гипотезы\nУровень значимости alpha выберем 0.05\n\n\nShow the code\n\nyes = df[df.debt=='есть']['total_income']\nno = df[df.debt=='нет']['total_income']\n\n\n\n\nShow the code\n\nfig = pagri_data_tools.bootstrap_diff_2sample(yes, no, stat_func=np.median)\n\n\nBootstrap resampling to estimate the difference\nalpha =  0.05\np-value =  0.0575972194489306\nci =  (np.float64(-2622.3749999999995), np.float64(235.07499999999993))\nНет оснований отвергнуть нулевую гипотезу, поскольку p-value больше или равно уровню значимости\n\n\n\n\nShow the code\n\nfig.show()\n\n\n                                                \n\n\nРезультат:\nНа уровне значимости 0.05 нет оснований отвергнуть гипотезу. что медианный доход у должников и не должников не отличается.\n95 % доверительный интервал разницы между медианным доходом должников и не должников равен (-2648.05, 179.34)\n\n\n5.3 Промежуточный вывод\nВернуться к выводам\n\nНа уровне значимости 0.05 гипотеза, что у мужчин средний доход выше, чем у женщин подтвердилась\nНа уровне значимости 0.05 у нас нет оснований отвергнуть гипотезу, что цель получения кредита практически не зависит от среднего ежемесяченого доход\nНа уровне значимости 0.05 гипотеза, что средний доход по семейному статусу примерно одинаковый, но у вдовцов отличается подтвердилась.\nНа уровне значимости 0.05 гипотеза, что у должников в среднем больше детей подтвердилась.\nНа уровне значимости 0.05 гипотеза, что у должников средний возраст ниже подтвердилась.\n95 % доверительный интервал для разницы средних возрастов для должников и не должников равен (-inf, -2.74)\nНа уровне значимости 0.05 нет оснований отвергнуть гипотезу. что медианный доход у должников и не должников не отличается.\n95 % доверительный интервал разницы между медианным доходом должников и не должников равен (-2648.05, 179.34)\nНа уровне значимости 0.05 гипотеза, что наличие детей не влияет на возврат кредита в срок не подтвердилась."
  },
  {
    "objectID": "projects/creditworthiness-research/creditworthiness_research.html#общий-вывод",
    "href": "projects/creditworthiness-research/creditworthiness_research.html#общий-вывод",
    "title": "Исследование надёжности заёмщиков",
    "section": "6. Общий вывод",
    "text": "6. Общий вывод\nВернуться к выводам\nВыводы:\n\nНет явной зависимости семейного положения и задолженности.\nУ должников в среднем больше детей. В частности, среди должников женщины имеют больше детей в среднем, чем мужчины, а среди не должников мужчины имеют больше детей в среднем, чем женщины.\nЖенщины чаще возвращают кредит, чем мужчины.\nДолги присутствуют у людей с разным доходом.\nЛюди старше 60 лет реже других имеют долги.\nКредиты, оформленные на цели, связанные с недвижимостью, реже других приводят к долгам.\nУ должников средний возраст немного ниже для всех категорий семейного положения.\nМедианный доход у должников и не должников практически не отличается.\nДолжники имеют ниже средний возраст как мужчины так и женщины. Ситуация сохраняется во всех группах дохода.\nБольше всего кредит берут на цели, связанные с недвижимостью, кроме людей в гражданском браке.\nЛюди в гражданском браке чаще берут кредит на свадьбу.\nДоход является самым значимым признаком для предсказания задолженности.\nЛюди от 30 до 50 лет имеют самый высокий средний доход.\nТолько 5 процентов клиентов моложе 25 лет. Основная часть клиентов старше 30 лет.\nМеньше 5 % клиентов имеют зарплату меньше 63 тысяч. При этом 25 % имеют доход больше 200 тысяч.\n58 % клиентов либо женаты, либо замужем. 19 % в гражданском браке. Можно сделать вывод что большинство в браке.\nБольшинство клиентов женщины (66 процентов).\n92 % клиентов не имеют долга.\nЧем меньше количество детей, тем больше значений с высоким доходом.\nБольшая часть женатых имеет доход 100-200 тыс.\nНа всех уровнях образования, кроме ученой степени, доход у мужчин выше.\nЦель получения кредита практически не зависит от среднего ежемесячного дохода.\nУ мужчин, которые в браке или были в браке, количество детей больше, чем у женщин в той же категории.\n\nАномалии и особенности в данных:\n\nВ датафрейме есть строки дубликаты. 54 строки. Меньше 1 % от всего датафрейма.\n\nВ столбце с количеством детей есть отрицательные значения. 47 штук. Меньше 1 процента от всего датафрейма. Также есть клиенты с 20 детьми.\nКолонка общий трудовой стаж содержит 74 % отрицательных значений. А также максимальное количество дней стажа больше 400 тысяч дней, это больше 1000 лет.\nВ колонке возраста 101 нулевое значение.\nКолонка дохода имеет слишком много знаков после запятой.\nВ колонке с образованием присутствуют одни и те же значения с разными регистрами. При этом в колонке с id образования все в порядке.\n\nРезультаты предобработки данных:\n\nУдалили колонки с id образования и семейного статуса, так как нам для графиков лучше подойдут названия, а не id.\nКолонка со стажем имеет совершенно некорректные данные. Чтобы не внести искажение в анализ, удалим эту колонку.\nУдалили отрицательные значения в колонке с количеством детей, которые составляли 0,2% от общего количества записей в данных.\nУдалили нулевые значения в колонке с возрастом, которые составляли 0,5% от общего количества записей в данных.\nУдалили записи, где количество детей равно 20, которые составляли 0,35% от общего количества записей в данных.\nЗаполнили пропуски в столбце с доходом медианным значением, учитывая категории образование, семейный статус, пол, занятость.\nОкруглили значения дохода до целого.\nУдалили 1 запись, где пол равен XNA\nСоздали дополнительную бинарную колонку, указывающую на наличие детей (1 - есть дети, 0 - нет детей).\nСделали дополнительную колонку с возрастными категориями.\n\nСделали дополнительную колонку с категориями дохода.\n\nЛематизировали колонку с целью кредита, чтобы получить категории целей кредита.\n\nРезультаты проверки гипотез:\n\nГипотеза 1: У мужчин средний доход выше, чем у женщин\nРезультат: На уровне значимости 0.05 гипотеза подтвердилась.\nГипотеза 2: Цель получения кредита практически не зависит от среднего ежемесячного дохода\nРезультат: На уровне значимости 0.05 у нас нет оснований отвергнуть гипотезу.\nГипотеза 3: Средний доход по семейному статусу примерно одинаковый, но у вдовцов отличается\nРезультат: На уровне значимости 0.05 гипотеза подтвердилась.\nГипотеза 4: У должников в среднем больше детей\nРезультат: На уровне значимости 0.05 гипотеза подтвердилась.\n\nГипотеза 5: У должников средний возраст ниже\nРезультат: На уровне значимости 0.05 гипотеза подтвердилась. 95% доверительный интервал для разницы средних возрастов для должников и не должников равен (-inf, -2.74).\n\nГипотеза 6: Медианный доход у должников и не должников не отличается\nРезультат: На уровне значимости 0.05 нет оснований отвергнуть гипотезу. 95% доверительный интервал разницы между медианным доходом должников и не должников равен (-2648.05, 179.34).\n\nГипотеза 7: Наличие детей не влияет на возврат кредита в срок\nРезультат: На уровне значимости 0.05 гипотеза не подтвердилась.\n\nРекомендации:\n\nДобавить контроль данных, чтобы не дублировались значения с разными регистрами в колонке с образованием.\nДобавить уникальный идентификатор клиента, чтобы избежать дублирования строк.\nДобавить проверку на отрицательные значения и на слишком большие значения в количестве детей при загрузке данных.\nВыяснить откуда возникают отрицательные значения в трудовом стаже и добавить контроль ввода невалидных данных.\nВыяснить причину нулевых значений в колонке возраста и добавить проверку на нулевые значения при загрузке данных.\nВыяснить причину большого количества знаков после запятой в колонке дохода."
  },
  {
    "objectID": "projects/creditworthiness_research.html",
    "href": "projects/creditworthiness_research.html",
    "title": "Исследование надёжности заёмщиков",
    "section": "",
    "text": "Автор:\nГригорьев Павел\nОписание проекта:\nЗаказчик - кредитный отдел банка.\nНужно разобраться, влияет ли семейное положение и количество детей клиента на факт погашения кредита в срок.\nВходные данные от банка - статистика о платёжеспособности клиентов.\nРезультаты исследования будут учтены при построении модели кредитного скоринга - специальной системы, которая оценивает способность потенциального заёмщика вернуть кредит банку.\nЦель:\nСоставить рекомендации для кредитного отдела банка, которые будут учтены при построении модели кредитного скоринга.\nОпределить влияет ли семейное положение и количество детей клиента на факт погашения кредита в срок.\nИсточники данных:\nСтатистика о платёжеспособности клиентов.\nГлавные выводы:\nАномалии и особенности в данных:\nРекомендации:"
  },
  {
    "objectID": "projects/creditworthiness_research.html#загрузка-библиотек",
    "href": "projects/creditworthiness_research.html#загрузка-библиотек",
    "title": "Исследование надёжности заёмщиков",
    "section": "Загрузка библиотек ",
    "text": "Загрузка библиотек \n\n\nShow the code\n\nimport pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport pagri_data_tools"
  },
  {
    "objectID": "projects/creditworthiness_research.html#описание-и-изучение-данных",
    "href": "projects/creditworthiness_research.html#описание-и-изучение-данных",
    "title": "Исследование надёжности заёмщиков",
    "section": "1. Описание и изучение данных",
    "text": "1. Описание и изучение данных\n\n1.1 Описание данных\nвернуться к оглавлению\n\nchildren - количество детей в семье\ndays_employed - общий трудовой стаж в днях\ndob_years - возраст клиента в годах\neducation - уровень образования клиента\neducation_id - идентификатор уровня образования\nfamily_status - семейное положение\nfamily_status_id - идентификатор семейного положения\ngender - пол клиента\nincome_type - тип занятости\ndebt - имел ли задолженность по возврату кредитов\ntotal_income - ежемесячный доход\npurpose - цель получения кредита\n\n\n\n1.2 Изучение данных\n\n1.2.1 Изучение переменных\nвернуться к оглавлению\n\n\nShow the code\n\ndtype = {'education': 'category', 'education_id': 'category', 'family_status': 'category', 'family_status_id': 'category', 'gender': 'category', 'income_type': 'category', 'debt': 'category'}\ndf = pd.read_csv('https://code.s3.yandex.net/datasets/data.csv', dtype=dtype)\ndf.sample(5, random_state=7)\n\n\n\n\n\n\n\n\n\nchildren\ndays_employed\ndob_years\neducation\neducation_id\nfamily_status\nfamily_status_id\ngender\nincome_type\ndebt\ntotal_income\npurpose\n\n\n\n\n4042\n1\n-2885.142188\n50\nсреднее\n1\nженат / замужем\n0\nF\nсотрудник\n0\n80236.028323\nприобретение автомобиля\n\n\n19177\n2\n-1803.080913\n36\nСреднее\n1\nженат / замужем\n0\nF\nсотрудник\n0\n163292.220004\nстроительство собственной недвижимости\n\n\n7372\n1\n-305.540665\n27\nСРЕДНЕЕ\n1\nгражданский брак\n1\nF\nсотрудник\n0\n69799.488812\nремонт жилью\n\n\n16245\n1\n-1593.946336\n50\nсреднее\n1\nженат / замужем\n0\nF\nсотрудник\n1\n107486.332934\nна покупку подержанного автомобиля\n\n\n11563\n0\n-1025.402943\n64\nвысшее\n0\nженат / замужем\n0\nM\nгосслужащий\n0\n706401.475790\nпрофильное образование\n\n\n\n\n\n\n\nИзменим название колонки dob_years на более понятное age\n\n\nShow the code\n\ndf = df.rename(columns={'dob_years': 'age'})\n\n\nИзменим значения в столбце debt на ‘есть’, ‘нет’\n\n\nShow the code\n\ndf.debt = df.debt.apply(lambda x: 'есть' if x == '1' else 'нет').astype('category')\n\n\nИзучим отдельно каждую колонку\n\n\nShow the code\n\ngen = pagri_data_tools.info_gen(df)\n\n\n вернуться к оглавлению\n\n\nShow the code\n\nnext(gen)\n\n\n\n\n\n\n\nTable 1: DataFrame\n\n\n\n\n\nRows\nFeatures\nRAM (Mb)\nDuplicates\nDupl (sub - origin)\n\n\n\n\n21 525\n12\n4\n54 (&lt;1%)\n0 (0%)\n\n\n\n\n\n\n\n\nНаблюдения:\n\nВ датафрейме есть строки дубликаты. 54 строки. Меньше 1 % от всего датафрейма.\n\nЕсли заменить все пробелы на 1, привести к нижнему регистру, то дополнительно появляется 31 дубликат.\nНужно детальнее изучить дубликаты.\n вернуться к оглавлению\n\n\nShow the code\n\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 2: children\n\n\n\n\n\nValues\n21 525 (100%)\n\nMax\n20\n\nAvg\n0.54\n\n0 (66%)\n\n\nMissing\n---\n\n95%\n2\n\nMode\n0\n\n1 (22%)\n\n\nDistinct\n8 (&lt;1%)\n\n75%\n1\n\nRange\n21\n\n2 (10%)\n\n\nDuplicates\n21 517 (99.9%)\n\nMedian\n0\n\niQR\n1\n\n3 (2%)\n\n\nZeros\n14 149 (66%)\n\n25%\n0\n\nstd\n1.38\n\n20 &lt;1%\n\n\nNegative\n47 (&lt;1%)\n\n5%\n0\n\nkurt\n136.46\n\n-1 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n-1\n\nskew\n10.08\n\n4 &lt;1%\n\n\n\n\n\n\n\n\n            \n                \n            \n        \n        \n\n\nНаблюдения:\n\nВ столбце с количеством детей нет пропущенных значений.\nУникальных всего 8 значений. Это нормально. Количество детей не может сильно варьироваться.\nНаличие нулей нормально, это люди без детей, таких 66 %.\nЕсть отрицательные значения. 47 штук. Меньше 1 процента. Это явно ошибка. В реальных данных таких не должно быть.\n\nНужно выяснить почему появились отрицательное количество детей.\n\nМаксимальное количество детей 20. Это скорее всего ошибка.\n66 процентов имеют 0 детей, 22 процента имеют 1 ребенка, 10 % имеют 2 детей и меньше 5 % имеют более 2 детей.\nРаспределение детей соответствует реальности, больше всего людей без детей.\n\n вернуться к оглавлению\n\n\nShow the code\n\nnext(gen)\n\n\n\n        \n            \n\n\n\n\nTable 3: days_employed\n\n\n\n\n\nValues\n19 351 (90%)\n\nMax\n401 755.4\n\nAvg\n63 046.5\n\n-8 437.67 &lt;1%\n\n\nMissing\n2 174 (10%)\n\n95%\n380 718.0\n\nMode\n---\n\n-3 507.82 &lt;1%\n\n\nDistinct\n19 351 (90%)\n\n75%\n-291.1\n\nRange\n420 144.35\n\n354 500.42 &lt;1%\n\n\nDuplicates\n2 173 (10%)\n\nMedian\n-1 203.37\n\niQR\n2 456.33\n\n-769.72 &lt;1%\n\n\nZeros\n---\n\n25%\n-2 747.42\n\nstd\n140 827.31\n\n-3 963.59 &lt;1%\n\n\nNegative\n15 906 (74%)\n\n5%\n-6 622.97\n\nkurt\n0.91\n\n337 451.39 &lt;1%\n\n\nRAM (Mb)\n&lt;1 Mb\n\nMin\n-18 388.95\n\nskew\n1.70\n\n356 425.15 &lt;1%"
  },
  {
    "objectID": "projects/temp.html",
    "href": "projects/temp.html",
    "title": "temp",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "projects/temp.html#quarto",
    "href": "projects/temp.html#quarto",
    "title": "temp",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "projects/creditworthiness-research/creditworthiness_research.html#визуализация-взаимосвязей-переменных",
    "href": "projects/creditworthiness-research/creditworthiness_research.html#визуализация-взаимосвязей-переменных",
    "title": "Исследование надёжности заёмщиков",
    "section": "4. Визуализация взаимосвязей переменных",
    "text": "4. Визуализация взаимосвязей переменных\n\n4.1 Изучение зависимостей между числовыми переменными\nВернуться к выводам\nПосмотрим на зависимости между числовыми переменными.\n\n\n\nShow the code\n\ntitles_for_axis = dict(\n    # numeric column\n    children = 'Кол-во детей'\n    , age = 'Возраст'\n    , total_income = 'Доход'\n)\n\n\n\n\nShow the code\n\npagri_data_tools.pairplot(df, titles_for_axis=titles_for_axis, horizontal_spacing=0.12, height=400, width=1200, rows=1, cols=3).show(config=dict(displayModeBar=False, dpi=200), renderer=\"png\")\n\n\n\n\n\n\n\n\n\nНаблюдения:\n\nМожно заметить, что чем меньше количество детей, тем больше значений с высоким доходом.\nТакже можно заметить, что чем моложе клиент, тем в среднем у него больше детей.\n\n\n\n4.2 Изучение зависимостей между категориальными переменными\nВернуться к выводам\n\n\nShow the code\n\ntitles_for_axis = dict(\n    # numeric column\n    children = ['Количество детей', 'количество детей', 0]\n    , age = ['Возраст, лет', 'возраст', 1]\n    , total_income = ['Ежемесячный доход', 'ежемесячный доход', 1]\n     # category column\n    , education = ['Уровень образования', 'уровня образования']\n    , family_status = ['Семейное положение', 'семейного положения']\n    , gender = ['Пол', 'пола']\n    , income_type = ['Тип занятости', 'типа занятости']\n    , debt = ['Задолженность', 'задолженности']\n    , purpose = ['Цель получения кредита', 'цели получения кредита']\n    , has_child = ['Наличие детей', 'наличия детей']\n    , age_cat = ['Возрастная категория, лет', 'возрастной категории']\n    , total_income_cat = ['Категория дохода', 'категории дохода']\n)\n\n\nПосмотрим на распределение количества элементов между группами\n\n\nShow the code\n\ngen = pagri_data_tools.categorical_graph_analys_gen(df, titles_for_axis)\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nВ каждой категории семейного положения доля женщин больше.\n\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nСреди семейного статуса и занятости больше всего женатых сотрудников\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nНет явной зависимости семейного положения и задолженности.\nНе женатые и люди в гражданском браке чаще других имеют задолженность, но всего лишь на пару процентов долей.\n\nЖенатых без долго явно больше остальных.\n\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nЖенатых без детей больше всего\n\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nВозрастная группа 30-40 лет выделяется среди женатых\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nБольшая часть женатых имеет доход 100-200 тыс\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nБольше всего кредит берут на цели, связанные с недвижимостью, кроме людей в гражданском браке\nЛюди в гражданском браке чаще берут кредит на свадьбу\n\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nБольше всего женщин сотрудников\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nЖенщины чаще возвращают кредит. Это видно из пропорций.\n\n\n\nShow the code\n\n%%capture\nnext(gen);next(gen);next(gen);next(gen);next(gen);next(gen);next(gen);next(gen);next(gen);next(gen)\n\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nЛюди старше 60 лет реже других имеют долги (вкладка сравнение задолженность).\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nДолги есть у людей с разным доходом\n\n Вернуться к выводам\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения: - Кредиты, оформленные на цели, связанные с недвижимостью, реже других приводят к долгам.\n\n\nShow the code\n\n%%capture\nnext(gen);next(gen);next(gen)\n\n\n\n\nShow the code\n\nnext(gen)\n\n\n                                                \n\n\nНаблюдения:\n\nМожно заметить, что категория возраста от 30 до 40 лет имеет больше зарплату\n\nПосмотрим на распределение количества людей по категориям на сэнки диаграмме\n\n\nShow the code\n\ndf.head(1)\n\n\n\n\n\n\n\n\n\nchildren\nage\neducation\nfamily_status\ngender\nincome_type\ndebt\ntotal_income\nhas_child\nage_cat\ntotal_income_cat\npurpose\n\n\n\n\n0\n1\n42\nвысшее\nженат / замужем\nF\nсотрудник\nнет\n253876\nесть\n40-50\n200-500 тыс\nнедвижимость\n\n\n\n\n\n\n\n\n\n4.3 Изучение зависимостей между числовыми и категориальными переменными\nВернуться к выводам\n\n\nShow the code\n\ntitles_for_axis = dict(\n    # numeric column\n    children = ['Количество детей', 'количество детей', 0]\n    , age = ['Возраст, лет', 'возраст', 1]\n    , total_income = ['Ежемесячный доход', 'ежемесячный доход', 1]\n     # category column\n    , education = ['Уровень образования', 'уровня образования']\n    , family_status = ['Семейное положение', 'семейного положения']\n    , gender = ['Пол', 'пола']\n    , income_type = ['Тип занятости', 'типа занятости']\n    , debt = ['Задолженность', 'задолженности']\n    , purpose = ['Цель получения кредита', 'цели получения кредита']\n    , has_child = ['Наличие детей', 'наличия детей']\n    , age_cat = ['Возрастная категория', 'возрастной категории']\n    , total_income_cat = ['Категория дохода', 'категории дохода']\n)\n\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , y = 'gender'\n    , x = 'total_income'\n    # , category = 'education'\n    , width = 800\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nУ мужчин средний доход выше\n\n Вернуться к выводам\n\n\nShow the code\n\nconfig = dict(df = df\n    , y = 'gender'\n    , x = 'total_income'\n    , category = 'education'\n    , width = 900\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nНа всех уровнях образования, кроме ученой степени, доход у мужчин выше.\n\n Вернуться к выводам\n\n\nShow the code\n\nconfig = dict(df = df\n    , y = 'purpose'\n    , x = 'total_income'\n    # , category = 'education'\n    , width = 800\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nЦель получения кредита практически не зависит от среднего ежемесячного доход\n\n Вернуться к выводам\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'family_status'\n    , y = 'children'\n    , category = 'gender'\n    , width = 820\n    , orientation = 'h'\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nУ мужчин, которые в браке или были в браке, количество детей больше, чем у мужчин, женщин в той же категории\nУ женатых детей больше, что логично\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'family_status'\n    , y = 'total_income'\n    # , category = 'education'\n    , width = 800\n    , orientation = 'h'\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nСредний доход по семейному статусу примерно одинаковый, у вдовцов немного пониже\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'income_type'\n    , y = 'total_income'\n    # , category = 'family_status'\n    , width = 800\n    , func = 'median'\n    , orientation='h'\n    # , text = True\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nМедианный доход предпринимателей больше, чем у других.\n\n Вернуться к выводам\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'children'\n    , y = 'debt'\n    , category = 'gender'\n    , width = 800\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nУ должников в среднем больше детей. В частности, среди должников женщины имеют больше детей в среднем, чем мужчины, а среди не должников мужчины имеют больше детей в среднем, чем женщины\n\n Вернуться к выводам\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'age'\n    , y = 'debt'\n    # , category = 'family_status'\n    , width = 850\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nУ должников средний возраст немного ниже\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'gender'\n    , y = 'age'\n    , category = 'income_type'\n    , width = 1000\n    , showgrid_x = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nВ разрезе семейного положения ситуация сохраняться, возраст немного меньше у должников\n\n Вернуться к выводам\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'total_income'\n    , y = 'debt'\n    # , category = 'education'\n    , width = 800\n    , func = 'median'\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nМедианный доход у должников и не должников практически не отличается\n\n\n\nShow the code\n\n\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'age_cat'\n    , y = 'children'\n    , category = 'gender'\n    , width = 900\n    , showgrid_x = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nСреднее количество детей у группы 30-40 лет больше.\nДо 40 лет детей больше у женщин, старше 40 лет детей больше у мужчин\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'age_cat'\n    , y = 'total_income'\n    , category = 'income_type'\n    , width = 1200\n    , showgrid_x = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nПредприниматели до 30 лет имеют значительно болье средний доход, но в этой группе всего один клиент.\nСтранно, что в группе 40-50 лет безработные имеют доход сравнимый с другими группами, а в других возрастных категориях - нет.\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , y = 'children'\n    , x = 'total_income_cat'\n    , category = 'gender'\n    , width = 800\n    # , orientation='h'\n    , showgrid_x = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nС доходом до 100 тысяч детей больше у женщин, а с доходом выше 100 тысяч - у мужчин.\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'gender'\n    , y = 'age'\n    , category = 'education'\n    , width = 800\n    , orientation='h'\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nУ женщин средний возраст выше, кроме категории ученая степень\nУ мужчин с ученой степенью средний возраст выше, чем у женщин, но размер группы ‘ученая степень’ маленький, поэтому утверждать нельзя.\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'age'\n    , y = 'income_type'\n    # , category = 'income_type'\n    , width = 800\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nСредний возраст распределен логично, можно отметить, что госслужащие имеют средний возраст больше 40 лет\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'income_type'\n    , y = 'total_income'\n    # , category = 'education'\n    , width = 800\n    , orientation = 'h'\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nСредний доход предпринимателей значительно выше других, но как видно предприниматель только 1, поэтому это нерепрезентативно.\nВ декрете и студент имеют самый низкий доход, но размеры групп маленькие, поэтому также нет уверенности в выводе.\n\n Вернуться к выводам\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'debt'\n    , y = 'age'\n    , category = 'gender'\n    , orientation='h'\n    , width = 800\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nДолжники имеют ниже средний возраст как мужчины так и женщины.\n\n Вернуться к выводам\n\n\nShow the code\n\nconfig = dict(df = df\n    , y = 'age_cat'\n    , x = 'total_income'\n    # , category = 'education'\n    , width = 800\n    , showgrid_y = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nЛюди от 30 до 50 лет имеют самый высокий средний доход.\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'total_income_cat'\n    , y = 'children'\n    , category = 'debt'\n    , width = 1200\n    , showgrid_x = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nВо всех группах дохода, кроме ‘больше 500 тыс’ среднее количество детей у должников больше\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'total_income_cat'\n    , y = 'age'\n    , category = 'debt'\n    , width = 800\n    , showgrid_y = False\n    , orientation='h'\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nВо всех группах дохода средний возраст должников ниже\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'total_income_cat'\n    , y = 'children'\n    , category = 'age_cat'\n    # , width = 1200\n    , showgrid_x = False\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nВозрастная категория ‘30-40’ лет имеет больше детей во всех категориях дохода\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'has_child'\n    , y = 'age'\n    , category = 'family_status'\n    , width = 800\n    , showgrid_y = False\n    , orientation='h'\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nДля всех значений в семейном статусе, у людей без детей средний возраст выше.\n\n\n\nShow the code\n\nconfig = dict(df = df\n    , x = 'has_child'\n    , y = 'age'\n    # , category = 'age_cat'\n    , width = 800\n    , showgrid_y = False\n    , orientation='h'\n)\npagri_data_tools.bar(config, titles_for_axis)\n\n\n                                                \n\n\nНаблюдения:\n\nСредний возраст у людей без детей выше примерно на 9 лет\n\n\n\n4.4 Промежуточный вывод\nВернуться к выводам\n\nМожно заметить, что чем меньше количество детей, тем больше значений с высоким доходом.\nСреди семейного статуса и занятости больше всего женатых сотрудников\nЖенатых без долго явно больше остальных.\nБольшая часть женатых имеет доход 100-200 тыс\nЖенщины чаще возвращают кредит.\nДолги есть у людей с разным доходом.\nНа всех уровнях образования, кроме ученой степени, доход у мужчин выше.\nЦель получения кредита практически не зависит от среднего ежемесячного дохода.\nУ мужчин, которые в браке или были в браке, количество детей больше, чем у женщин в той же категории\nСредний доход по семейному статусу примерно одинаковый, у вдовцов немного пониже\nУ должников в среднем больше детей\nУ должников среднее количество детей больше у женщин, а у не должников среднее количество детей больше у мужчин\nУ должников средний возраст немного ниже для всех категорий семейного положения.\nМедианный доход у должников и не должников практически не отличается\nСреднее количество детей у группы 30-40 лет больше.\nДо 40 лет детей больше у женщин, старше 40 лет детей больше у мужчин\nВ группе 40-50 лет безработные имеют доход сравнимый с другими группами, а в других возрастных категориях доход безработных значительно ниже.\nС доходом до 100 тысяч детей больше у женщин, а с доходом выше 100 тысяч - у мужчин.\nУ женщин средний возраст выше, кроме категории ученая степень\nДолжники имеют ниже средний возраст как мужчины так и женщины. Ситуация сохраняется во всех группах дохода.\nЛюди от 30 до 50 лет имеют самый высокий средний доход.\nВо всех группах дохода, кроме ‘больше 500 тыс’ среднее количество детей больше\nВозрастная категория ‘30-40’ лет имеет больше детей во всех категориях дохода\nБольше всего кредит берут на цели, связанные с недвижимостью, кроме людей в гражданском браке\nЛюди в гражданском браке чаще берут кредит на свадьбу"
  }
]